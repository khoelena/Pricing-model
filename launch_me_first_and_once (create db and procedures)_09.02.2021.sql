/* Хотлянник Елена. Глоубайт, 2020 */
/* 
Это файл, в котором определяются (но не вызываются) процедуры. 
Исключение: определяется и вызывается процедура создания базы данных.
Этот файл нужно запустить первым, ничего не меняя.
*/


/*	
CREATE_DATABASE_PRICE_FORMATION процедура
Создает базу данных PRICE_FORMATION 
Задает COLLATE и RECOVERY 
*/
DROP PROCEDURE IF EXISTS  CREATE_DATABASE_PRICE_FORMATION 
GO
CREATE PROCEDURE CREATE_DATABASE_PRICE_FORMATION 
	AS
	BEGIN
		DROP DATABASE IF EXISTS PRICE_FORMATION
		CREATE DATABASE PRICE_FORMATION  
			COLLATE Cyrillic_General_CI_AS
			
		ALTER DATABASE PRICE_FORMATION SET RECOVERY SIMPLE
	END
GO 

EXEC CREATE_DATABASE_PRICE_FORMATION
GO
/*
-----ALTER DATABASE PRICE_FORMATION SET OFFLINE WITH ROLLBACK IMMEDIATE
exec sp_who2
--kill --RUNNABLE
DROP DATABASE IF EXISTS PRICE_FORMATION
GO

CREATE DATABASE PRICE_FORMATION  
	COLLATE Cyrillic_General_CI_AS
ALTER DATABASE PRICE_FORMATION SET RECOVERY SIMPLE
GO
*/
USE PRICE_FORMATION 
GO


/*	
LOAD_FROM_FILES процедура
1. Создает таблицы sales, products, stores. 
2. Загружает в них данные из файлов (с определенными составом и содержанием полей). Директория и наименование файлов передаются в процедуру через  в переменных.
3. Сначала загружает данные в поля nvarchar, потом приобразует в date, nvarchar, float.
4. Задает первичные и внешние ключи для таблиц.
*/
DROP PROCEDURE IF EXISTS LOAD_FROM_FILES
GO
CREATE PROCEDURE LOAD_FROM_FILES (@DIRECTORY		varchar(300) = 'C:\Users\elena.khotlyannik\Documents\2020AAPrice\sales01.04.2016-01.04.2018\',
								  @SALES_FILE1		varchar(100) = 'Выгрузка продаж с 01.04.2016 - 31.12.2016.csv',								  
								  @SALES_FILE2		varchar(100) = 'Выгрузка продаж с 01.01.2017 - 01.10.2017.csv',
								  @SALES_FILE3		varchar(100) = 'Выгрузка продаж с 02.10.2017 - 01.04.2018.csv',
								  @PRODUCTS_FILE	varchar(100) = 'Справочник товаров(по которым были продажи с 01.04.2016-01.04.2018).csv',
								  @STORES_FILE		varchar(100) = 'Магазины.csv'								  
								  )
	AS 
	BEGIN
	/*1.1.Инициализация таблицы продаж*/
		DROP TABLE IF EXISTS sales 
		CREATE TABLE sales	(	[s_date]		nvarchar(50) NOT NULL,
								[store_id]		nvarchar(50) NOT NULL,
								[product_id]	nvarchar(50) NOT NULL,
								[s_amount]		nvarchar(50),
								[s_count]		nvarchar(50)
							)
		
		/*1.2.Загрузка данных в таблицу продаж из 3-х файлов*/
		DECLARE @BULK_INSERT nvarchar(MAX);
		SET @BULK_INSERT = '
		BULK INSERT sales  
		FROM ''' + @DIRECTORY  + @SALES_FILE1 + '''  
		WITH	(	FIRSTROW=2,
					FIELDTERMINATOR = '';'', 
					ROWTERMINATOR = ''\n''
				)';
		EXEC(@BULK_INSERT)

		SET @BULK_INSERT = '
		BULK INSERT sales 
		FROM ''' + @DIRECTORY  + @SALES_FILE2 + '''
		WITH	(	FIRSTROW=2,
					FIELDTERMINATOR = '';'', 
					ROWTERMINATOR = ''\n''
				)'
		EXEC(@BULK_INSERT)
		
		SET @BULK_INSERT = '
		BULK INSERT sales 
		FROM ''' + @DIRECTORY  + @SALES_FILE3 + '''
		WITH	(  FIRSTROW=2,
					FIELDTERMINATOR = '';'', 
					ROWTERMINATOR = ''\n''
				)'
		EXEC(@BULK_INSERT)
		
		/* проверка количества записей в таблице продаж
		select count( *) from  sales
		*/

		/*1.3.Преобразование типов данных в таблице продаж */
		ALTER TABLE sales ALTER COLUMN 	s_date		date	NOT NULL
		ALTER TABLE sales ALTER COLUMN 	store_id	bigint	NOT NULL
		ALTER TABLE sales ALTER COLUMN 	product_id	bigint	NOT NULL
		
		UPDATE sales set s_amount=TRY_CONVERT(float, REPLACE(s_amount,',','.'))
		ALTER TABLE sales ALTER COLUMN s_amount float
		
		UPDATE sales set s_count=TRY_CONVERT(float, REPLACE(s_count,',','.'))
		ALTER TABLE sales ALTER COLUMN s_count float
		
		/* 1.4 добавление ключа */
		ALTER table sales
		ADD CONSTRAINT PK_sales PRIMARY KEY CLUSTERED (s_date, store_id, product_id)
		
		
		/*2.1.Инициализация справочника товаров */
		DROP TABLE IF EXISTS [products]
		CREATE TABLE [products] (	[product_id] nvarchar(50) NOT NULL,
									[product_name] nvarchar(150)
								)

		/*2.2.Загрузка данных в справочник товаров */
		SET @BULK_INSERT = '
		BULK INSERT products 
		FROM ''' + @DIRECTORY  + @PRODUCTS_FILE + '''
		WITH	(	FIRSTROW=2,
					FIELDTERMINATOR = '';'', 
					ROWTERMINATOR = ''0x0a'',
					CODEPAGE = ''1251''
				)'
		EXEC(@BULK_INSERT)
		
		/*2.3.преобразование типа данных и добавление ключа в таблицу товаров */
		ALTER TABLE products ALTER COLUMN 	product_id bigint NOT NULL

		ALTER table products
		ADD CONSTRAINT PK_products PRIMARY KEY CLUSTERED (product_id)

		
		/*3.1.Инициализация справочника магазинов */
		DROP TABLE IF EXISTS stores ;
		CREATE TABLE stores	(	[store_id] nvarchar(50) NOT NULL,
								[store_name] nvarchar(150)
							)
		
		/*3.2.Загрузка данных в справочник магазинов */
		SET @BULK_INSERT = '
		BULK INSERT stores 
		FROM ''' + @DIRECTORY  + @STORES_FILE + '''
		WITH (
		  FIRSTROW=2,
		  FIELDTERMINATOR = '';'', 
		  ROWTERMINATOR = ''0x0a'',
		  CODEPAGE = ''1251''
		  )'
		EXEC(@BULK_INSERT)
		
		/*3.3.Преобразование типов в таблице магазинов */
		ALTER TABLE stores ALTER COLUMN store_id bigint NOT NULL

		/*3.4.Добавление ключа в таблицу магазинов */
		ALTER table stores
		ADD CONSTRAINT PK_stores PRIMARY KEY CLUSTERED (store_id)
		

		/* 4.4 добавление внешних ключей в таблице продаж */
		ALTER table sales
		ADD CONSTRAINT FK_sales_store_id	FOREIGN KEY (store_id)	REFERENCES stores	(store_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
		
		ALTER table sales
		ADD CONSTRAINT FK_sales_product_id FOREIGN KEY (product_id) REFERENCES products (product_id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
	END
GO


/* 
ANONIMISING процедура 
1. изменяет идентификатор магазина , переименовывает магазины
2. изменяет идентификатор товара, переводит в верхний регистр товары
3. количество умножает на 5, цену на 1.3
*/
DROP PROCEDURE IF EXISTS ANONIMISING
GO
CREATE PROCEDURE ANONIMISING
	AS
	BEGIN
	/* изменение идентификатора магазина */
		UPDATE [stores] 
		SET store_id= (	SELECT new_id 
							FROM (SELECT	ROW_NUMBER() OVER(ORDER BY [store_name]) new_id,
											store_id
								  FROM [stores]  )  
							AS tab
							WHERE tab.store_id=[stores].store_id)


		/* изменение идентификатора товара */
		UPDATE [products]  
		SET product_id= (	SELECT new_id 
							FROM (SELECT	ROW_NUMBER() OVER(ORDER BY [product_name]) new_id,
											product_id
								  FROM [products]   )  
							AS tab
							WHERE tab.product_id=[products] .product_id)

		/* Переименование магазинов */
		UPDATE [stores] 
		SET store_name = 'МАГАЗИН А' WHERE store_id=1

		UPDATE [stores] 
		SET store_name = 'МАГАЗИН Б' WHERE store_id=2

		/* Верхний регистр для товаров */
		UPDATE [products] 
		SET product_name = UPPER(product_name)

		
		UPDATE [sales]
		SET s_amount = 0,
			s_count= 0
		WHERE s_count <= 0  or  s_amount <= 0

		UPDATE [sales]
		SET s_amount = (s_count*5)*(s_amount/s_count*1.3),
			s_count= s_count*5
		WHERE s_count > 0 and s_amount > 0
	END
GO


/*
FILL_DATES_PRODUCTS
Процедура для создания непрерывного временного ряда по каждому продукту 
*/
DROP PROCEDURE IF EXISTS FILL_DATES_PRODUCTS 
GO
CREATE PROCEDURE FILL_DATES_PRODUCTS
	AS
	BEGIN
		DECLARE @dateStart DATE
		SET @dateStart =	(select min(s_date)  from sales)
		DECLARE @dateEnd DATE
		SET @dateEnd =	(select max(s_date)  from sales)

		  WHILE @dateStart <= @dateEnd 
			BEGIN 
			INSERT INTO time_product_series (s_date,	product_id,				store_id) 
			SELECT							@dateStart, products.product_id, stores.store_id
			from products, stores

				SET @dateStart = dateadd(DAY, 1 , @dateStart)
		  END
	END
GO


DROP PROCEDURE IF EXISTS ALTER_SALES
GO
CREATE PROCEDURE ALTER_SALES
	AS 
	BEGIN
		/*  Добавим поля в sales */
		ALTER TABLE [sales] ADD 
				price1					float NULL,		-- для добавленных записей, значение равно среднему по всем выборке (кроме нулевых) 
				price2					float NULL,		-- для добавленных записей, значение равно значению за предыдущую ненулевую дату 
				price3					float NULL,		-- для добавленных записей, значение равно  среднему между двумя ближайшими ненулевыми  	
				auto_sign				integer NULL,	-- 
														-- , равно 1 для загруженных записей c положительными значениями сумм и количества
														-- , равно 0 для загруженных записей c НЕположительными значениями сумм или количества
														-- , равно 5 для добавленных записей (записи добавлени для дополнения временного ряда)
				prev_notnull_date		date,
				prev_notnull_price		float,
				next_notnull_date		date,	
				next_notnull_price		float,
				avg_product_store_price float,
				time_series_flag		int	,			/* "признак временного диапазона" =1, если запись внутри временного ряда для конкретной пары ПРОДУКТ+МАГАЗИН */
				min_date				date,
				max_date				date;

	END
GO


/*	TIME_SERIES_AND_PRICES
Процедура дополняет временной ряд
Рассчитывает три варианта сумм
Проставляет признак, указывающий загружена строка или добавлена в рамках дополнения временного ряда
Проставляет признак, если строка ВНУТРИ временного диапазона для конретной пары ПРОДУКТ+МАГАЗИН
*/
DROP PROCEDURE IF EXISTS TIME_SERIES_AND_PRICES
GO
CREATE PROCEDURE TIME_SERIES_AND_PRICES
	AS
	BEGIN		
		UPDATE [sales]
		SET 	price1 = 0,
				price2 = 0,
				price3 = 0,
				auto_sign = 0
		WHERE s_count <= 0  or  s_amount <= 0

		UPDATE [sales]
		SET 
			price1 = s_amount/s_count,
			price2 = s_amount/s_count,
			price3 = s_amount/s_count,
			auto_sign = 1
		WHERE s_count > 0 and s_amount > 0


		drop table IF EXISTS time_product_series
		create table time_product_series
		([s_date] date NOT NULL,
		[product_id] bigint NOT NULL,
		store_id bigint NOT NULL,
		min_date date,
		max_date date)

		EXEC FILL_DATES_PRODUCTS	
		
		INSERT INTO  sales  --~5 min
		SELECT t2.s_date , t2.store_id, t2.product_id, t1.s_amount, t1.s_count, t1.price1, t1.price2, t1.price3, 5,
			t1.prev_notnull_date, t1.prev_notnull_price, t1.next_notnull_date, t1.next_notnull_price,
			t1.avg_product_store_price, t1.time_series_flag, NULL, NULL
		FROM sales t1 
		FULL JOIN time_product_series t2
		ON t1.product_id=t2.product_id and t1.s_date=t2.s_date and t1.store_id=t2.store_id
		WHERE t1.s_amount is NULL		

		UPDATE sales --~2-3min
		set avg_product_store_price = (		SELECT mean_product_price
												FROM 
													(SELECT AVG(price1) as mean_product_price, product_id, store_id
														FROM sales
														WHERE s_amount > 0 	AND s_count > 0
														GROUP BY product_id, store_id) as t2   
												WHERE	t2.product_id=sales.product_id
														AND t2.store_id=sales.store_id
											)
		--where s_amount is NULL or s_amount=0

		drop table IF EXISTS prep1
		select * 
		into prep1
		from sales
		where s_amount>0

		update sales
		set prev_notnull_date =(SELECT max(it.s_date) 
								FROM prep1 it
								WHERE	it.s_date < sales.s_date
									AND it.product_id=sales.product_id
									AND it.store_id=sales.store_id
								),
		next_notnull_date = (SELECT min(it.s_date) 
								FROM prep1 it
								WHERE	it.s_date > sales.s_date
									AND it.product_id=sales.product_id
									AND it.store_id=sales.store_id
								)
		--where s_amount is NULL or s_amount=0

		UPDATE sales
		set time_series_flag =  1 
		WHERE 
			NOT (s_amount is  NULL and prev_notnull_date is  null) 
			and 
			not (s_amount is  NULL and next_notnull_date is  null)

		UPDATE sales
		set prev_notnull_price = (SELECT it.price1
									FROM sales it
									WHERE	it.s_date = sales.prev_notnull_date
										AND it.product_id=sales.product_id
										AND it.store_id=sales.store_id
								),
			next_notnull_price = (SELECT it.price1
									FROM sales it
									WHERE	it.s_date = sales.next_notnull_date
										AND it.product_id=sales.product_id
										AND it.store_id=sales.store_id
								)
		WHERE (s_amount is NULL or s_amount=0) and time_series_flag =  1 



		UPDATE sales
		set price1 =  (avg_product_store_price), 
			price2 =  (coalesce(prev_notnull_price,avg_product_store_price)),
			price3 =  ((coalesce(prev_notnull_price,avg_product_store_price) + coalesce(next_notnull_price,avg_product_store_price))/2)
		WHERE (s_amount is NULL or s_amount=0) and time_series_flag =  1 

		UPDATE sales
		set min_date = (select min(s2.s_date) from sales s2 where	s2.time_series_flag=1 
															and		s2.store_id=sales.store_id 
															and		s2.product_id=sales.product_id
															group by s2.store_id,s2.product_id),
			max_date = (select max(s2.s_date) from sales s2 where	s2.time_series_flag=1 
															and		s2.store_id=sales.store_id 
															and		s2.product_id=sales.product_id
															group by s2.store_id,s2.product_id)
		where time_series_flag = 1 


		UPDATE sales
		set s_count=0
		where time_series_flag = 1  and auto_sign = 5

	END
GO


/*
REPLACE_MEASURE_SIMBOLS

Процедура заменяет символ @variant1, который следует после числа сразу или через пробел,
 на символ @measure_simbol.
Например, для грамм: @variant1 = ГР, @measure_simbol=Г.

При этом делается проверка, что непосредственно после символа @variant1 не стоит буква (чтобы не заменить , например, сочетание '3 ГРАНАТА' на '3 ГАНАТА' )
*/
DROP PROCEDURE IF EXISTS REPLACE_MEASURE_SIMBOLS 
GO
CREATE PROCEDURE REPLACE_MEASURE_SIMBOLS  (@measure_simbol nvarchar(20),
											--  @remove_measure int =1,
											@variant1  nvarchar(20) = '',
											@variant2  nvarchar(20) = '')
	AS
	BEGIN
		/* добавляю пробелы до и после (,),/  */	
		UPDATE step0
		SET product_name = replace(replace(replace(product_name,'(',' ( '),')',' ) '),'/',' / ')

		/* убираю лишние пробелы и пробелы в конце строки*/	
		UPDATE step0
		SET product_name = rtrim(replace(product_name,'  ',' '))

		/* замена первого вариативного символа на основной*/
		UPDATE step0
		SET product_name = replace(product_name, @variant1 , @measure_simbol)
		WHERE	(product_name like concat('%[0-9]',@variant1,'%')
			or product_name like concat('%[0-9] ',@variant1,'%'))
			and product_name not like concat('%[0-9]',@variant1,'[А-Я]%')
			and product_name not like concat('%[0-9] ',@variant1,'[А-Я]%')

		/*удаляю пробелы между числом и символом измерения (например, заменяю [0-9] Г на [0-9]Г)*/
		UPDATE step0 
		SET product_name = replace(product_name, concat(' ',@measure_simbol), @measure_simbol)  
		WHERE product_name like   concat('%[0-9] ',@measure_simbol,'%')

	END
GO


/*
EXTRACT_MEASURE
Процедура вычленяет сочетания числа с символом. Например, 100Г. 
Добавляет эти сочетания в поле temp_param, и удаляет эти сочетания из поля product_name (при признаке @remove_measure = 1 ).
Значение из temp_param после выполнения процедуры нужно перенести в постоянный другой столбец
Подумать, обнулить ли его в начале процедуры
Параметры
	@measure_simbol - символ, сочетание с которым надо найти
	(пока не реализован) @remove_measure - признак, удалять ли найденное сочетание из product_name (пока не реализован)
	*/
DROP PROCEDURE	IF EXISTS EXTRACT_MEASURE 
GO
CREATE PROCEDURE EXTRACT_MEASURE  (@measure_simbol nvarchar(20))
	AS
	BEGIN
		/* добавляю пробелы до и после (,),/  */	
		UPDATE step0
		SET product_name = replace(replace(replace(product_name,'(',' ( '),')',' ) '),'/',' / ')

		/* убираю лишние пробелы и пробелы в конце строки*/	
		UPDATE step0
		SET product_name = rtrim(replace(product_name,'  ',' '))
		
		/*удаляю пробелы между числом и символом измерения (например, заменяю [0-9] Г на [0-9]Г)*/
		UPDATE step0 
		SET product_name = replace(product_name, concat(' ',@measure_simbol), @measure_simbol)  
		WHERE product_name like   concat('%[0-9] ',@measure_simbol,'%')
			and product_name not like concat('%[0-9]',@measure_simbol,'[А-Я]%')

		/* определеяю какое-то вхождение [0-9]Г*/
		DROP TABLE IF EXISTS step01
		SELECT 
			product_id,
			product_name,
			CASE 
				WHEN charindex(concat('0',@measure_simbol),product_name) !=0 THEN charindex(concat('0',@measure_simbol),product_name)
				WHEN charindex(concat('1',@measure_simbol),product_name) !=0 THEN charindex(concat('1',@measure_simbol),product_name)
				WHEN charindex(concat('2',@measure_simbol),product_name) !=0 THEN charindex(concat('2',@measure_simbol),product_name)
				WHEN charindex(concat('3',@measure_simbol),product_name) !=0 THEN charindex(concat('3',@measure_simbol),product_name)
				WHEN charindex(concat('4',@measure_simbol),product_name) !=0 THEN charindex(concat('4',@measure_simbol),product_name)
				WHEN charindex(concat('5',@measure_simbol),product_name) !=0 THEN charindex(concat('5',@measure_simbol),product_name)
				WHEN charindex(concat('6',@measure_simbol),product_name) !=0 THEN charindex(concat('6',@measure_simbol),product_name)
				WHEN charindex(concat('7',@measure_simbol),product_name) !=0 THEN charindex(concat('7',@measure_simbol),product_name)
				WHEN charindex(concat('8',@measure_simbol),product_name) !=0 THEN charindex(concat('8',@measure_simbol),product_name)
				WHEN charindex(concat('9',@measure_simbol),product_name) !=0 THEN charindex(concat('9',@measure_simbol),product_name)
			END as last_num_index
		INTO step01
		FROM STEP0
		WHERE	product_name like concat('%[0-9]',@measure_simbol,'%')
			and product_name not like concat('%[0-9]',@measure_simbol,'[А-Я]%')

		/* определяю позицию ближайшего слева пробела */
		DROP TABLE IF EXISTS step02
		SELECT	*,
				--substring(product_name, 1,last_num_index) as sub1,
				--reverse(substring(product_name, 1,last_num_index)) as sub2,
				--charindex(' ',reverse(substring(product_name, 1,last_num_index))) as charindex_space_rev,
				len(substring(product_name, 1,last_num_index)) - charindex(' ',reverse(substring(product_name, 1,last_num_index)))+1 as charindex_space
		INTO step02 	
		FROM step01
	
		/* определяю ... см коммент в запросе */
		DROP TABLE IF EXISTS step03
		SELECT	product_id,
				product_name,
				last_num_index,
				charindex_space,
				(last_num_index-charindex_space)+len(@measure_simbol) as count_simb,	--количество символов, которое пойдет в пераметр
				last_num_index+len(@measure_simbol)+1 as charindex_after,				--индекс первого символа после @measure_simbol
				charindex_space-1 as charindex_before						-- индекс символа перед пробелом
		INTO step03
		FROM step02

		/* Определяю параметр и новую строку */
		DROP TABLE IF EXISTS step04
		SELECT	product_id,
				product_name,
				--charindex_space,
				--count_simb,
				--charindex_after,
				--charindex_before,
				substring(product_name,charindex_space+1,count_simb ) as new_param,
				--substring(product_name, 1,charindex_before ) as string_before,
				--substring(product_name, charindex_after,len(product_name) ) as string_after,
				concat(substring(product_name, 1,charindex_before ) ,
				substring(product_name, charindex_after,len(product_name) ) ) as new_product_name
		INTO step04
		FROM step03

		UPDATE step0 
		SET temp_param='                                '

		UPDATE step0
		SET		product_name= (select new_product_name from step04 as t1 where t1.product_id=step0.product_id),
				temp_param	= (select new_param from step04 as t1 where t1.product_id=step0.product_id),
				parse_status = parse_status+1
		WHERE	product_name like concat('%[0-9]',@measure_simbol,'%')
			and product_name not like concat('%[0-9]',@measure_simbol,'[А-Я]%')


	
	END
GO

/* создание таблицы правил для категоризации продукта */
DROP PROCEDURE IF EXISTS  CREATE_product_category_rules
GO
CREATE PROCEDURE CREATE_product_category_rules 
	AS
	BEGIN
		DROP TABLE IF EXISTS product_category_rules;
		CREATE TABLE product_category_rules 
			(rule_id				int			not null PRIMARY KEY IDENTITY(1,1),
			step_priority			int			not null,

			product_name_included	varchar(50) not null,
			product_name_excluded	varchar(50) not null,

			product_type			varchar(32) not null,
			product_subtype			varchar(32) not null,
			product_category		varchar(32) not null,
			product_subcategory		varchar(32) not null,
			producer				varchar(60) not null
			)
	
		CREATE UNIQUE INDEX uq_product_category_rules
		 ON product_category_rules (step_priority, product_name_included, product_name_excluded, product_type, product_subtype, product_category, product_subcategory, producer)
	END
GO


/* заполнение таблицы правил для категоризации продукта */ 
/* это целевой вариант, в том смысле, что дальше встречаются другие способы категоризации, но они появлялись "исторически", и надо бы перенести их в эту таблицу правил */
DROP PROCEDURE IF EXISTS  FILL_product_category_rules
GO
CREATE PROCEDURE FILL_product_category_rules 
	AS
	BEGIN
			INSERT INTO product_category_rules 
			(step_priority,		product_name_included,	product_name_excluded,	product_type,	product_subtype,	product_category,		product_subcategory,		producer)
			VALUES
			(1,					'%ЯЙЦО%ПЕРЕПЕЛ%',		'',					'ПРОДУКТЫ',		'ЯЙЦА',					'ЯЙЦО ПЕРЕПЕЛИНОЕ',			'',					''),
			(2,					'%ЯЙЦО%',				'',					'ПРОДУКТЫ',		'ЯЙЦА',					'ЯЙЦО КУРИНОЕ',				'',					''),
			(11,				'%ЩЕДРОЕ%ЗАСТОЛЬЕ%',	'',					'',				'',						'',							'',					'ПК ЛАМА'),
			(1,					'РЫБА %',				'',					'ПРОДУКТЫ',		'РЫБА/РЫБОПРОДУКТЫ',	'РЫБА',						'',					''),
			(1,					'КРЕВЕТКИ %',			'',					'ПРОДУКТЫ',		'РЫБА/РЫБОПРОДУКТЫ',	'КРЕВЕТКИ',					'',					''),
			(1,					'МЯСО КРИЛЯ %',			'',					'ПРОДУКТЫ',		'РЫБА/РЫБОПРОДУКТЫ',	'МЯСО КРИЛЯ',				'',					''),
			(1,					'КАЛЬМАР %',			'',					'ПРОДУКТЫ',		'РЫБА/РЫБОПРОДУКТЫ',	'КАЛЬМАР',					'',					''),
			(1,					'САЙРА%',				'',					'ПРОДУКТЫ',		'РЫБА/РЫБОПРОДУКТЫ',	'САЙРА',					'',					''),
			(1,					'%ПРЕСЕРВЫ%',			'',					'ПРОДУКТЫ',		'РЫБА/РЫБОПРОДУКТЫ',	'ПРЕСЕРВЫ',					'',					''),
			(1,					'%ШПРОТЫ%',				'',					'ПРОДУКТЫ',		'РЫБА/РЫБОПРОДУКТЫ',	'ШПРОТы',					'',					''),
			(1,					'ПЕЧЕНЬ%ТРЕСКИ%',		'',					'ПРОДУКТЫ',		'РЫБА/РЫБОПРОДУКТЫ',	'ПЕЧЕНЬ ТРЕСКИ',			'',					''),
			(1,					'ПЕЧЕНЬ%МИНТАЯ%',		'',					'ПРОДУКТЫ',		'РЫБА/РЫБОПРОДУКТЫ',	'ПЕЧЕНЬ МИНТАЯ',			'',					''),
			(1,					'%ТУНЕЦ%',				'%ВИСКАС%',			'ПРОДУКТЫ',		'РЫБА/РЫБОПРОДУКТЫ',	'ТУНЕЦ',					'',					''),
			(1,					'ГОРБУША%',				'%ЗАПЕЧ%',			'ПРОДУКТЫ',		'РЫБА/РЫБОПРОДУКТЫ',	'ГОРБУША',					'',					''),
			(1,					'КРАБОВЫЕ ПАЛОЧКИ%',	'%ЗАПЕЧ%',			'ПРОДУКТЫ',		'РЫБА/РЫБОПРОДУКТЫ',	'КРАБОВЫЕ ПАЛОЧКИ',			'',					''),
			(1,					'КРАБОВОЕ ПАЛОЧКИ%',	'%ЗАПЕЧ%',			'ПРОДУКТЫ',		'РЫБА/РЫБОПРОДУКТЫ',	'КРАБОВЫЕ ПАЛОЧКИ',			'',					''),
			(2,					'ИКРА %',				'',					'ПРОДУКТЫ',		'РЫБА/РЫБОПРОДУКТЫ',	'ИКРА',						'',					''),

			(1,					'%ИКРА%ГРИБ%',			'',				'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',	'ОВОЩНАЯ ИКРА',				'',					''),
			(1,					'%ИКРА%БАКЛАЖАН%',		'',				'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',	'ОВОЩНАЯ ИКРА',				'',					''),
			(1,					'%ИКРА%КАБАЧ%',			'',				'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',	'ОВОЩНАЯ ИКРА',				'',					''),

			(1,					'%ПАШТЕТ%МЯСО%ПТИЦЫ%',	'',				'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',	'ПАШТЕТ',					'МЯСО ПТИЦЫ',			''),

			(1,					'МЯСО ЦЫПЛЕНКА%',		'',					'ПРОДУКТЫ',		'МЯСО/ПТИЦА',			'ЦЫПЛЕНОК',					'МЯСО ЦЫПЛЕНКА',		''),
			(2,					'МЯСО ПТИЦЫ%',			'',					'ПРОДУКТЫ',		'МЯСО/ПТИЦА',			'МЯСО ПТИЦЫ',				'МЯСО ПТИЦЫ',			''),
			(2,					'%БРОЙЛЕР%',			'',					'ПРОДУКТЫ',		'МЯСО/ПТИЦА',			'ЦЫПЛЕНОК',					'МЯСО ПТИЦЫ',			''),
			(1,					'ЦЫПЛЕНОК%',			'',					'ПРОДУКТЫ',		'МЯСО/ПТИЦА',			'ЦЫПЛЕНОК',					'',					''),
			(1,					'ПЕЧЕНЬ %',				'',					'ПРОДУКТЫ',		'МЯСО/ПТИЦА',			'ПЕЧЕНЬ',					'',					''),
			(1,					'ХРЯЩИКИ КУРИНЫЕ%',		'',					'ПРОДУКТЫ',		'МЯСО/ПТИЦА',			'КУРИЦА',		'',					''),
			(1,					'%КРЫЛО КУРИНОЕ%',		'',					'ПРОДУКТЫ',		'МЯСО/ПТИЦА',			'КУРИЦА',		'',					''),
			(1,					'%МЯСО%КУРИНОЕ%',		'',					'ПРОДУКТЫ',		'МЯСО/ПТИЦА',			'КУРИЦА',		'',					''),
			(1,					'НАБОР ДЛЯ ТУШЕНИЯ%',		'',					'ПРОДУКТЫ',		'МЯСО/ПТИЦА',		'НАБОР ДЛЯ ТУШЕНИЯ',		'',					''),

			(1,					'%СЫР ТВОРОЖНЫЙ%',		'',					'ПРОДУКТЫ',		'СЫРЫ',					'СЫР ТВОРОЖНЫЙ',			'',					''),
			(1,					'%СЫР ФАСОВАННЫЙ%',		'',					'ПРОДУКТЫ',		'СЫРЫ',					'СЫР ФАСОВАННЫЙ',			'',					''),
			(1,					'%СЫРНЫЙ ПРОДУКТ%',		'',					'ПРОДУКТЫ',		'СЫРЫ',					'СЫРНЫЙ ПРОДУКТ',			'',					''),
			(1,					'СЫР %',				'',					'ПРОДУКТЫ',		'СЫРЫ',					'СЫР %',					'',					''),

			(1,					'ЙОГУРТ %',					'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'ЙОГУРТ',					'',					''),
			(1,					'%ТВОРОГ %',				'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'ТВОРОГ',					'',					''),
			(1,					'%БИФИДОК %',				'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'КЕФИР',					'',					''),
			(1,					'%РЯЖЕНКА %',				'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'РЯЖЕНКА',					'',					''),
			(1,					'%СЛИВКИ %',				'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'СЛИВКИ',					'',					''),
			(1,					'%БИОЙОГУРТ %',				'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'ЙОГУРТ',					'',					''),
			(1,					'ПРОДУКТ ЙОГУРТНЫЙ%',		'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'ЙОГУРТ',					'',					''),
			(1,					'%БИОТВОРОГ %',				'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'ТВОРОГ',					'',					''),
			(1,					'%БИОПРОДУКТ%',				'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'ЙОГУРТ',					'',					''),
			(1,					'%СНЕЖОК %',				'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'СНЕЖОК',					'',					''),
			(1,					'%СЫРОК %',					'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'ТВОРОЖНЫЙ ПРОДУКТ',					'',			''),
			(1,					'ДЕСЕРТ ТВОРОЖ%',			'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'ТВОРОЖНЫЙ ПРОДУКТ',					'',					''),
			(1,					'%ТВОРОЖНЫЙ ПРОДУКТ%',		'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'ТВОРОЖНЫЙ ПРОДУКТ',		'',					''),
			(1,					'%ПРОДУКТ ТВОРОЖНЫЙ%',		'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'ТВОРОЖНЫЙ ПРОДУКТ',		'',					''),
			(1,					'МОЛОКО%',					'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'МОЛОКО',					'',					''),
			(1,					'%МОЛОКОСОДЕРЖАЩИЙ ПОДУКТ%','',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'МОЛОКОСОДЕРЖАЩИЙ ПОДУКТ',	'',					''),
			(1,					'%ТВОРОЖЕНОЕ%',				'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'ТВОРОГ',				'',					''),
			(1,					'ТВОРОЖОК%',				'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'ТВОРОГ',				'',					''),
			(1,					'ТВОРОЖНОЕ ЗЕРНО%',			'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'ТВОРОГ',				'',					''),
			(1,					'%КЕФИР%',					'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'КЕФИР',					'',					''),
			(1,					'%СЫРОК ГЛАЗИРОВАННЫЙ%',	'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'СЫРОК ГЛАЗИРОВАННЫЙ',		'',					''),
			(1,					'ВАР%СГУЩ%',				'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'СГУЩЕНОЕ МОЛОКО',				'',					''),
			(1,					'СГУЩЕНКА%',				'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'СГУЩЕНОЕ МОЛОКО',				'',					''),
			(1,					'КАКАО СГУЩ%',				'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'КАКАО СГУЩ',					'',					''),
			(1,					'СМЕТАНА%',					'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'СМЕТАНА',					'',					''),
			(1,					'МОЛОЧНЫЙ П%',				'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'МОЛОЧНЫЙ ПРОДУКТ',			'',					''),
			(1,					'КОКТЕЙЛЬ МОЛОЧНЫЙ%',		'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'КОКТЕЙЛЬ МОЛОЧНЫЙ',			'',					''),
			(1,					'МОЛОЧНЫЙ КОКТЕЙЛЬ%',		'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'КОКТЕЙЛЬ МОЛОЧНЫЙ',			'',					''),
			(1,					'КОКТЕЙЛЬ МАЖИ%',			'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'КОКТЕЙЛЬ МОЛОЧНЫЙ',			'',					''),
			(1,					'ПУДДИНГ%',					'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'ЙОГУРТ',			'',					''),
			(1,					'ПУДИНГ%',					'',					'ПРОДУКТЫ',		'МОЛОЧНЫЕ ПРОДУКТЫ',	'ЙОГУРТ',			'',					''),

			
			(1,					'БИО%ТЕМА%',				'',					'ПРОДУКТЫ',		'ДЕТСКОЕ ПИТАНИЕ',	'МОЛОЧНЫЙ ПРОДУКТ ДЛЯ ДЕТЕЙ',		'',				''),
			(1,					'ПЮРЕ%ТЁМА%',				'',					'ПРОДУКТЫ',		'ДЕТСКОЕ ПИТАНИЕ',	'ПЮРЕ ДЛЯ ДЕТЕЙ',		'',				''),
			(1,					'%ПЮРЕ%НЯНЯ%',				'',					'ПРОДУКТЫ',		'ДЕТСКОЕ ПИТАНИЕ',	'ПЮРЕ ДЛЯ ДЕТЕЙ',		'',				''),
			
			(1,					'%УКСУС%',					'',					'ПРОДУКТЫ',		'КОНСЕРВАЦИЯ/СОУСЫ',	'УКСУС',					'',					''),
			(1,					'%МАЙОНЕЗ%',				'%МАЙОНЕЗ[А-Я]%',	'ПРОДУКТЫ',		'КОНСЕРВАЦИЯ/СОУСЫ',	'МАЙОНЕЗ',					'',					''),
			(1,					'МАЙОНЕЗНЫЙ СОУС%',			'',					'ПРОДУКТЫ',		'КОНСЕРВАЦИЯ/СОУСЫ',	'МАЙОНЕЗ',					'',					''),
			(1,					'СОУС%',					'',					'ПРОДУКТЫ',		'КОНСЕРВАЦИЯ/СОУСЫ',	'СОУС',						'',					''),
			(1,					'КЕТЧУП %',					'',					'ПРОДУКТЫ',		'КОНСЕРВАЦИЯ/СОУСЫ',	'КЕТЧУП',					'',					''),
			(1,					'ОГУРЦЫ%СОЛЕ%',				'',					'ПРОДУКТЫ',		'КОНСЕРВАЦИЯ/СОУСЫ',	'ОГУРЦЫ СОЛЕНЫЕ',			'',					''),
			(1,					'%МОРСКАЯ%КАПУСТА%',		'',					'ПРОДУКТЫ',		'КОНСЕРВАЦИЯ/СОУСЫ',	'МОРСКАЯ КАПУСТА',			'',					''),
			(2,					'%КВАШЕН%',					'ПРИПРАВА%',		'ПРОДУКТЫ',		'КОНСЕРВАЦИЯ/СОУСЫ',	'КАПУСТА КВАШЕНАЯ',			'',					''),
			(1,					'%УКСУСНАЯ КИСЛОТА%',		'',					'ПРОДУКТЫ',		'КОНСЕРВАЦИЯ/СОУСЫ',	'УКСУС',					'',					''),
			(1,					'%АДЖИКА%',					'%КОТЛЕТА%',		'ПРОДУКТЫ',		'КОНСЕРВАЦИЯ/СОУСЫ',	'АДЖИКА',					'',					''),
			(1,					'%ЛИМОННАЯ КИСЛОТА%',		'',					'ПРОДУКТЫ',		'КОНСЕРВАЦИЯ/СОУСЫ',	'ЛИМОННАЯ КИСЛОТА',			'',					''),
			(1,					'%ТОМАТНАЯ ПАСТА%',			'',					'ПРОДУКТЫ',		'КОНСЕРВАЦИЯ/СОУСЫ',	'ТОМАТНАЯ ПАСТА',			'',					''),
			(1,					'КИЛЬКА%Т / С%',			'',					'ПРОДУКТЫ',		'КОНСЕРВАЦИЯ/СОУСЫ',	'КИЛЬКА В Т / С',			'',					''),
			(1,					'КИЛЬКА%Т/С%',			'',					'ПРОДУКТЫ',		'КОНСЕРВАЦИЯ/СОУСЫ',	'КИЛЬКА В Т / С',			'',					''),
			(1,					'МАСЛИНЫ%',					'',					'ПРОДУКТЫ',		'КОНСЕРВАЦИЯ/СОУСЫ',	'МАСЛИНЫ%',					'',					''),

			(1,					'КЛУБНИКА %',				'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'КЛУБНИКА',						'',					''),
			(1,					'БРУСНИКА%',				'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'БРУСНИКА',						'',					''),
			(1,					'ГРЕЙПФРУТ%',				'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'ГРЕЙПФРУТ',					'',					''),
			(1,					'КЛЮКВА%',					'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'КЛЮКВА',						'',					''),
			(1,					'ЧЕРЕШНЯ%',					'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'ЧЕРЕШНЯ',						'',					''),
			(1,					'ГРУША%',					'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'ГРУША',						'',					''),
			(1,					'ПОМЕЛО%',					'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'ПОМЕЛО',						'',					''),
			(1,					'ЯБЛОК%',					'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'ЯБЛОКО',						'',					''),
			(1,					'"ЯБЛОК%',					'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'ЯБЛОКО',						'',					''),
			(1,					'%БАНАНЫ %',				'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'БАНАНЫ',						'',					''),
			(1,					'АНАНАС %',					'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'АНАНАС',						'',					''),
			(1,					'КИВИ %',					'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'КИВИ',							'',					''),
			(1,					'АПЕЛЬСИНЫ%',				'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'АПЕЛЬСИНЫ',					'',					''),
			(1,					'%МАНДАРИНЫ%',				'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'МАНДАРИНЫ',					'',					''),
			(1,					'МАНДАРИН %',				'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'МАНДАРИНЫ',					'',					''),
			(1,					'ПЕРСИКИ%',					'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'ПЕРСИКИ',						'',					''),
			(1,					'ЧЕРНОСЛИВ %',				'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'ЧЕРНОСЛИВ',					'',					''),
			(1,					'КУРАГА %',					'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'КУРАГА',						'',					''),
			(1,					'АРБУЗ%',					'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'АРБУЗ',						'',					''),
			(1,					'ВИНОГРАД%',				'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'ВИНОГРАД',						'',					''),
			(1,					'НЕКТАРИНЫ %',				'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'НЕКТАРИНЫ',					'',					''),
			(1,					'ЛИМОНЫ%',					'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'ЛИМОНЫ',						'',					''),
			(1,					'ВИШНЯ%',					'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'ВИШНЯ',						'',					''),
			(1,					'ГРАНАТ%',					'ГРАНАТ[А-Я]%',		'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'ГРАНАТ',						'',					''),
			(1,					'ДЫНЯ%',					'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'ДЫНЯ',							'',					''),
			(1,					'%ЯГОДА КЛУБНИКА%',			'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'КЛУБНИКА',						'',					''),
			(1,					'ФИНИКИ%',					'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'ФИНИКИ',						'',					''),
			(1,					'ХУРМА%',					'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'ХУРМА',						'',					''),
			(1,					'СЛИВА%',					'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'СЛИВА',						'',					''),
			(1,					'АБРИКОС,%',				'',					'ПРОДУКТЫ',		'ФРУКТЫ/ЯГОДЫ',		'АБРИКОС',						'',					''),
			
			(1,					'ГРИБЫ %',					'',					'ПРОДУКТЫ',		'ОРЕХИ/ГРИБЫ',		'ГРИБЫ',						'',					''),
			(1,					'ШАМПИНЬОНЫ %',				'',					'ПРОДУКТЫ',		'ОРЕХИ/ГРИБЫ',		'ШАМПИНЬОНЫ',					'',					''),
			(1,					'АРАХИС %',					'',					'ПРОДУКТЫ',		'ОРЕХИ/ГРИБЫ',		'АРАХИС',						'',					''),
			(1,					'ФУНДУК %',					'',					'ПРОДУКТЫ',		'ОРЕХИ/ГРИБЫ',		'ФУНДУК',						'',					''),
			(1,					'МИНДАЛЬ %',				'',					'ПРОДУКТЫ',		'ОРЕХИ/ГРИБЫ',		'МИНДАЛЬ',						'',					''),
			(1,					'ГРЕЦКИЙ %',				'',					'ПРОДУКТЫ',		'ОРЕХИ/ГРИБЫ',		'ГРЕЦКИЙ ОРЕХ',					'',					''),
			(1,					'ГЕЦКИЙ %',					'',					'ПРОДУКТЫ',		'ОРЕХИ/ГРИБЫ',		'ГРЕЦКИЙ ОРЕХ',					'',					''),
			(1,					'КЕШЬЮ %',					'',					'ПРОДУКТЫ',		'ОРЕХИ/ГРИБЫ',		'КЕШЬЮ',						'',					''),
			(1,					'ТЫКВЕННЫЕ СЕМЕЧКИ %',		'',					'ПРОДУКТЫ',		'ОРЕХИ/ГРИБЫ',		'ТЫКВЕННЫЕ СЕМЕЧКИ',			'',					''),
			(1,					'ГРЕЦКИЙ ОРЕХ%',			'',					'ПРОДУКТЫ',		'ОРЕХИ/ГРИБЫ',		'ГРЕЦКИЙ ОРЕХ',					'',					''),
			(1,					'КЕДРОВЫЕ ОРЕХИ%',			'',					'ПРОДУКТЫ',		'ОРЕХИ/ГРИБЫ',		'КЕДРОВЫЕ ОРЕХИ',				'',					''),

			(1,					'%ВОДА%БЕЗ ГАЗА%',			'',					'ПРОДУКТЫ',		'ВОДА',				'ВОДА БЕЗ ГАЗА',				'',					''),
			(1,					'%ВОДА%ГАЗИР%',				'',					'ПРОДУКТЫ',		'ВОДА',				'ВОДА ГАЗИРОВАННАЯ',			'',					''),
						
			(1,					'%НАПИТОК%',				'',					'ПРОДУКТЫ',		'НАПИТКИ',			'НАПИТОК',						'',					''),
			(1,					'%КВАС%',					'',					'ПРОДУКТЫ',		'НАПИТКИ',			'КВАС',							'',					''),
			(1,					'%ДЕТСКОЕ ШАМПАНСКОЕ%',		'',					'ПРОДУКТЫ',		'НАПИТКИ',			'ДЕТСКОЕ ШАМПАНСКОЕ',			'',					''),
			(1,					'%МОРС%',	'%МОРСКАЯ%КАПУСТА%',				'ПРОДУКТЫ',		'НАПИТКИ',			'МОРС',							'',					''),
			(1,					'СОК %',					'',					'ПРОДУКТЫ',		'НАПИТКИ',			'СОК',							'',					''),
			(1,					'НЕКТАР %',					'',					'ПРОДУКТЫ',		'НАПИТКИ',			'НЕКТАР',						'',					''),
			(1,					'КОМПОТ %',					'',					'ПРОДУКТЫ',		'НАПИТКИ',			'КОМПОТ',						'',					''),
			(2,					'%ВОДА%',		'%[А-Я]ВОДА%',					'ПРОДУКТЫ',		'НАПИТКИ',			'ВОДА',							'',					''),

			(1,					'%ХЛЕБ%',			'%ЧИПСЫ%',					'ПРОДУКТЫ',		'ХЛЕБОБУЛОЧНЫЕ ИЗДЕЛИЯ/ВЫПЕЧКА',	'ХЛЕБ',			'',					''),
			(1,					'%ПИРОГ %',				   '',					'ПРОДУКТЫ',		'ХЛЕБОБУЛОЧНЫЕ ИЗДЕЛИЯ/ВЫПЕЧКА',	'ПИРОГ',		'',					''),
			(1,					'%БАГЕТ%',				   '',					'ПРОДУКТЫ',		'ХЛЕБОБУЛОЧНЫЕ ИЗДЕЛИЯ/ВЫПЕЧКА',	'БАГЕТ',		'',					''),
			(1,					'ЛАВАШ %',				   '',					'ПРОДУКТЫ',		'ХЛЕБОБУЛОЧНЫЕ ИЗДЕЛИЯ/ВЫПЕЧКА',	'ЛАВАШ',		'',					''),
			(1,					'БУЛОЧКА%',				   '',					'ПРОДУКТЫ',		'ХЛЕБОБУЛОЧНЫЕ ИЗДЕЛИЯ/ВЫПЕЧКА',	'БУЛОЧКА',		'',					''),
			(1,					'СДОБА%',				   '',					'ПРОДУКТЫ',		'ХЛЕБОБУЛОЧНЫЕ ИЗДЕЛИЯ/ВЫПЕЧКА',	'БУЛОЧКА',		'',					''),
			(1,					'%ЛЕПЕШКА%',		       '',					'ПРОДУКТЫ',		'ХЛЕБОБУЛОЧНЫЕ ИЗДЕЛИЯ/ВЫПЕЧКА',	'ЛЕПЕШКА',		'',					''),
			(1,					'%БАТОН%',			'%БАТОНЧИК%',				'ПРОДУКТЫ',		'ХЛЕБОБУЛОЧНЫЕ ИЗДЕЛИЯ/ВЫПЕЧКА',	'ХЛЕБ',			'',					''),
						
			(1,					'ПЕРФЕКТ ФИТ%',				'',					'ПРОДУКТЫ',		'ПИТАНИЕ ДЛЯ ЖИВОТНЫХ',		'ПИТАНИЕ ДЛЯ ЖИВОТНЫХ',	'',					''),	


			(1,					'КУКУРУЗА %',				 '',					'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'КУКУРУЗА',						'',					''),
			(1,					'ЗЕЛЕНЫЙ ГОРОШЕК %',		 '',					'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'ЗЕЛЕНЫЙ ГОРОШЕК',				'',					''),
			(1,					'%АССОРТИ ОВОЩНОЕ%',		 '',					'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'АССОРТИ ОВОЩНОЕ',				'',					''),
			(1,					'ОГУРЦЫ%',		 'ОГУРЦЫ%СОЛЕ%',					'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'ОГУРЦЫ',						'',					''),
			(1,					'%КАПУСТА%',				 '',					'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'КАПУСТА',						'',					''),
			(1,					'ПОМИДОР%',					 '',					'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'ПОМИДОРЫ',						'',					''),
			(1,					'КАБАЧКИ%',					 '',					'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'КАБАЧКИ',						'',					''),
			(1,					'ПЕРЕЦ%',				'%МОЛОТ%',					'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'ПЕРЕЦ',						'',					''),
			(1,					'%МОРКОВЬ%',				 '',					'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'МОРКОВЬ',						'',					''),
			(2,					'КАРТОФЕЛЬ %',				 '',					'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'КУКУРУЗА',						'',					''),
			(1,					'ЛУК%',						 '',					'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'ЛУК',						'',					''),
			(1,					'БАКЛАЖАНЫ%',				 '',					'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'БАКЛАЖАНЫ',						'',					''),
			(1,					'РЕДИС%',					'',						'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'РЕДИС',						'',					''),
			(1,					'СВЕКЛА%',					 '',					'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'СВЕКЛА',						'',					''),
			(1,					'ЗЕЛЕНЬ %',					 '',					'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'ЗЕЛЕНЬ',						'',					''),
			(1,					'ЧЕСНОК%',					'',						'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'ЧЕСНОК',						'',					''),
			(1,					'НАБОР ЗЕЛЕНИ%',			 '',					'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'НАБОР ЗЕЛЕНИ',					'',					''),
			(1,					'САЛАТ%В%ГОРШОЧКЕ%',		'',						'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'САЛАТ',						'',					''),
			(1,					'САЛАТ%АЙСБЕРГ%',			'',						'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'САЛАТ',						'',					''),
			(1,					'САЛАТ%РУККОЛА%',			'',						'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'САЛАТ',						'',					''),
			(1,					'САЛАТ%МИКС%',				'',						'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'САЛАТ',						'',					''),
			(1,					'ФАСОЛЬ%',					'',						'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'ФАСОЛЬ',						'',					''),
			(1,					'УКРОП%',					'',						'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'УКРОП',						'',					''),
			(1,					'ПЕТРУШКА%',				'',						'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'ПЕТРУШКА',						'',					''),
			(1,					'ТОМАТЫ%',					'',						'ПРОДУКТЫ',		'ОВОЩИ/ЗЕЛЕНЬ',	'ТОМАТЫ',						'',					''),
						
			(2,					'САЛАТ%',				 '%САЛАТНИК%',				'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'САЛАТ',		'',					''),
			(1,					'%КОТЛЕТ%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'КОТЛЕТА',		'',					''),
			(1,					'КОТЛЕТА%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'КОТЛЕТА',		'',					''),
			(1,					'%САРДЕЛЬКИ%',				 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'САРДЕЛЬКИ',	'',					''),
			(1,					'БУЛЬОН %',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'БУЛЬОН',		'',					''),
			(1,					'%ГРЕНКИ%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ГРЕНКИ',		'',					''),
			(1,					'СЕРВЕЛАТ %',				 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'СЕРВЕЛАТ',		'',					''),
			(1,					'ПЕЛЬМЕНИ %',				 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ПЕЛЬМЕНИ',		'',					''),
			(1,					'ШПИКАЧКИ %',				 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ШПИКАЧКИ',		'',					''),
			(1,					'ХОЛОДЕЦ %',				 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ХОЛОДЕЦ',		'',					''),
			(1,					'БЕКОН %',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'БЕКОН',		'',					''),
			(1,					'%ГУЛЯШ%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ГУЛЯШ',		'',					''),
			(1,					'ГУЛЯШ %',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ГУЛЯШ',		'',					''),
			(1,					'САЛДЕЛЬКИ %',				 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'САЛДЕЛЬКИ',		'',					''),
			(1,					'%ПАШТЕТ%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ПАШТЕТ',		'',					''),
			(1,					'%СОЛЯНК%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'СОЛЯНКА',		'',					''),
			(1,					'%ПАЛОЧКИ%КУРИНЫЕ%',		 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'КУРИНЫЕ ПАЛОЧКИ','',				''),
			(1,					'МАНТЫ %',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'МАНТЫ',		'',					''),
			(1,					'%ВАРЕНИКИ%',				 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ВАРЕНИКИ',		'',					''),
			(1,					'%КОПЧЕН%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ГОТОВОЕ БЛЮДО',		'',					''),
			(2,					'%ГОВЯДИНА%',				 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ГОВЯДИНА',		'',					''),
			(1,					'%КОЛБАС%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'КОЛБАСА',		'',					''),
			(1,					'САЛЯМИ%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'КОЛБАСА',		'',					''),
			(1,					'ВЕТЧИНА%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ВЕТЧИНА',		'',					''),
			(1,					'%СОСИСК%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'СОСИСКИ',		'',					''),
			(2,					'%СУП%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'СУП',			'',					''),
			(1,					'%ТУШЕНАЯ%',				 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ГОТОВОЕ БЛЮДО','',					''),
			(1,					'%ЧЕБУПЕЛЛИ%',				 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ЧЕБУПЕЛЛИ',	'',					''),
			(1,					'%ПОДЖАРКА%',				 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ПОДЖАРКА',		'',					''),
			(1,					'%ФАРШ%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ФАРШ',			'',					''),
			(1,					'%МОРКОВЬ%ПО%КОРЕЙ%',		 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'МОРКОВЬ ПО-КОРЕЙски',	'',			''),
			(1,					'%ХЕ %',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ХЕ',			'',					''),
			(1,					'%ВАРЕНЫ%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ГОТОВОЕ БЛЮДО','',					''),
			(1,					'%ВАРЕНА%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ГОТОВОЕ БЛЮДО','',					''),
			(1,					'%ПЕЧЕНЫ%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ГОТОВОЕ БЛЮДО','',					''),
			(1,					'%ЗАПЕЧЕН%',				 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ГОТОВОЕ БЛЮДО','',					''),
			(1,					'%ПЕЧЕНА%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ГОТОВОЕ БЛЮДО','',					''),
			(1,					'%ЖАРЕНЫ%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ГОТОВОЕ БЛЮДО','',					''),
			(1,					'%ЖАРЕНА%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ГОТОВОЕ БЛЮДО','',					''),
			(1,					'%РАГУ%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'РАГУ',			'',					''),
			(1,					'%БЛИНЧИКИ%',				 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'БЛИНЧИКИ',		'',					''),
			(1,					'ТЕСТО%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ТЕСТО',		'',					''),
			(1,					'%ПО-ДОМАШНЕМУ%',			 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ГОТОВОЕ БЛЮДО','',					''),
			(1,					'СЭНДВИЧ%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'СЭНДВИЧ',		'',					''),
			(1,					'ХОТ%ДОГ%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ХОТ-ДОГ',		'',					''),
			(1,					'ПЛОВ%',					 '',					'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ПЛОВ',			'',					''),
			(1,					'%САЛАТ%КАПУСТА%',			'',						'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'САЛАТ',		'',					''),
			(1,					'ОЛАДЬИ%',					'',						'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'ОЛАДЬИ',		'',					''),
			(1,					'%КАПУСТА%САЛАТ%',			'',						'ПРОДУКТЫ',		'КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',			'САЛАТ',		'',					''),
			
			(1,					'%МАРМЕЛАД%',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'МАРМЕЛАД',		'',					''),
			(1,					'%ШОКОЛАД%',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ШОКОЛАД',		'',					''),
			(1,					'%КОНФЕТЫ%',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'КОНФЕТА',		'',					''),
			(1,					'КОНФЕТА %',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'КОНФЕТА',		'',					''),
						
			(1,					'ЗЕФИР %',					'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ЗЕФИР',		'',					''),
			(1,					'ТОРТ %',					'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ТОРТ',			'',					''),
			(2,					'ДЕСЕРТ АНТОНОВ%',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ДЕСЕРТ',		'',					''),
			(2,					'%С ИЗЮМОМ%',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ДЕСЕРТ',		'',					''),
			(2,					'%С МАКОМ%',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ДЕСЕРТ',		'',					''),
			(1,					'ПИРОЖНОЕ %',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ПИРОЖНОЕ',		'',					''),
			(1,					'ДРАЖЕ %',					'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'КОНФЕТА',		'',					''),
			(1,					'КУЛИЧ %',					'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'КУЛИЧ',		'',					''),
			(1,					'ПЛЮШКА %',					'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ПЛЮШКА',		'',					''),
			(1,					'ПАСТИЛА %',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ПАСТИЛА',		'',					''),
			(1,					'КАРАМЕЛЬ %',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'КУЛИЧ',		'',					''),
			(1,					'%БАТОНЧИК%',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'КАРАМЕЛЬ',		'',					''),
			(1,					'%ГЕМАТОГЕН%',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ГЕМАТОГЕН',	'',					''),
			(1,					'%ЛЕДЕНЦЫ%',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'КАРАМЕЛЬ',		'',					''),
			(1,					'%ЖЕВ.КОНФЕТА%',			'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'КОНФЕТА',		'',					''),
			(1,					'%НАБОР%КОНФЕТ%',			'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'КОНФЕТА',		'',					''),
			(1,					'%ВАФЕЛ%',					'%ПОЛОТЕНЦЕ%',			'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ВАФЛИ',		'',					''),
			(1,					'%ВАФЛИ%',					'%ПОЛОТЕНЦЕ%',			'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ВАФЛИ',		'',					''),
			(1,					'КРЕКЕР %',					'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'КРЕКЕР',		'',					''),
			(1,					'ПЕЧЕНЬЕ %',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ПЕЧЕНЬЕ',		'',					''),
			(1,					'%ЧАК-ЧАК%',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ПЕЧЕНЬЕ',		'',					''),
			(1,					'ПЕЧЕНЬЕ%РОГАЛИК%',			'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ПЕЧЕНЬЕ',		'',					''),
			(1,					'КРЕНДЕЛЬКИ %',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ПЕЧЕНЬЕ',		'',					''),
			(1,					'%ПРЯНИК%',					'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ПРЯНИК',		'',					''),
			(1,					'%БАРАНК%',					'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'БАРАНКИ',		'',					''),
			(1,					'%ЧУПА-ЧУПС%',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'КАРАМЕЛЬ',		'',					''),
			(1,					'%ЩЕРБЕТ%',					'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ЩЕРБЕТ',		'',					''),
			(1,					'%ЧОКО%ПАЙ%',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'КОНФЕТА',		'',					''),
			(1,					'ХАЛВА%',					'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ХАЛВА',		'',					''),
			(1,					'РУЛЕТ%ЯШКИНО%',			'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'РУЛЕТ',		'',					'ЯШКИНО'),
			(1,					'%КОЗИНАК%',				'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'КОЗИНАК',		'',					''),
			(1,					'ИРИС%',					'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ИРИС',			'',					''),
			(1,					'%ЯГОДА ПРОТЕРТАЯ%',		'',						'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'ДЕСЕРТ',		'',					''),
			(2,					'%КЕКС%',			'%СМЕСЬ Д%' ,					'ПРОДУКТЫ',		'КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',	'КЕКС',			'',					''),

			(1,					'%ПРИПРАВА%',				'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'ПРИПРАВА',		'',					''),
			(1,					'САХАР%',			'САХАРНИЦА%',					'ПРОДУКТЫ',		'БАКАЛЕЯ',							'САХАР',		'',					''),
			(1,					'КРАХМАЛ%',					'',					'ПРОДУКТЫ',		'БАКАЛЕЯ',								'КРАХМАЛ',		'',					''),
			(1,					'%МУКА%',					'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'МУКА',			'',					''),
			(1,					'%ДРОЖЖИ%',					'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'ДРОЖЖИ',		'',					''),
			(1,					'%КРУПА%',					'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'КРУПА',		'',					''),
			(1,					'ЧАЙ %',					'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'ЧАЙ',			'',					''),
			(1,					'%МАКАРОН%',				'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'МАКАРОНы',		'',					''),
			(1,					'КОФЕ %',					'',					'ПРОДУКТЫ',		'БАКАЛЕЯ',							'КОФЕ',			'',					''),
			(1,					'СЕМЕЧКИ%',					'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'СЕМЕЧКИ',		'',					''),
			(1,					'ПЕРЕЦ%МОЛОТ%',				'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'ПЕРЕЦ МОЛОТЫЙ','',					''),
			(1,					'КАКАО%',					'КАКАО СГУЩ%',			'ПРОДУКТЫ',		'БАКАЛЕЯ',							'КАКАО',		'',					''),
			(1,					'ГОТ. ЗАВТРАК%',			'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'ХЛОПЬЯ',		'',					''),
			(1,					'ЖЕЛАТИН%',					'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'ЖЕЛАТИН',		'',					''),
			(1,					'СМЕСЬ МАГГИ%',	'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',		'СМЕСЬ ДЛЯ БЫСТРОГО ПРИГОТОВЛЕНИЯ',	'',					''),
			(1,					'КАРТОФЕЛЬНОЕ ПЮРЕ Б/П%',	'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',		'СМЕСЬ ДЛЯ БЫСТРОГО ПРИГОТОВЛЕНИЯ',	'',					''),
			(1,					'КАША Б/П%',				'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',		'СМЕСЬ ДЛЯ БЫСТРОГО ПРИГОТОВЛЕНИЯ',	'',					''),
			(1,					'ЛАПША Б/П%',				'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',		'СМЕСЬ ДЛЯ БЫСТРОГО ПРИГОТОВЛЕНИЯ',	'',					''),
			(1,					'СУП Б/П%',					'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',		'СМЕСЬ ДЛЯ БЫСТРОГО ПРИГОТОВЛЕНИЯ',	'',					''),
			(1,					'ХЛОПЬЯ%',					'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'ХЛОПЬЯ',		'',					''),
			(1,					'СОЛЬ %',					'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'СОЛЬ',			'',					''),
			(1,					'КУКУР.ПАЛОЧКИ%',			'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'ХЛОПЬЯ',		'',					''),
			(1,					'%ЦИКОРИЙ%',				'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'ЦИКОРИЙ',		'',					''),
			(1,					'СОДА%',					'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'СОДА',			'',					''),
			(1,					'%СМЕСЬ%КНОРР%',			'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'СМЕСЬ ДЛЯ БЫСТРОГО ПРИГОТОВЛЕНИЯ',	'',	''),
			(1,					'СУШКА%',					'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'СУШКА',			'',					''),
			(1,					'СУХАРИКИ%',				'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'СУХАРИКИ',			'',					''),
			(1,					'СЛАЙСЫ%',					'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'СЛАЙСЫ',			'',					''),
			(1,					'%ЧИПСЫ%',					'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'ЧИПСЫ',			'',					''),
			(1,					'ПОП%КОРН%',				'',						'ПРОДУКТЫ',		'БАКАЛЕЯ',							'ПОП КОРН',			'',					''),

			(2,					'МАСЛО %',					 '%ДЖОНСОНС БЭБИ%',		'ПРОДУКТЫ',		'ПИЩЕВЫЕ ЖИРЫ',						'МАСЛО',			'',					''),			
			(1,					'МАРГАРИН %',				'',						'ПРОДУКТЫ',		'ПИЩЕВЫЕ ЖИРЫ',						'МАРГАРИН',			'',					''),			
			(1,					'СПРЕД%',					'',						'ПРОДУКТЫ',		'ПИЩЕВЫЕ ЖИРЫ',						'СПРЕД',			'',					''),
			
			(1,					'%ПОЛОТЕНЦЕ%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ПОЛОТЕНЦЕ',		'',					''),
			(1,					'%СЕМЕНА%',					'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'СЕМЕНА',			'',					''),
			(1,					'%СОВОК%',					'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'СОВОК',			'',					''),
			(1,					'%ГРАБЛИ%',				'%НАБОР ДЛЯ ПЕСКА%',		'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ГРАБЛИ',			'',					''),
			(1,					'%РУКАВ%ЗАПЕКАНИЯ%',		'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'РУКАВ ДЛЯ ЗАПЕКАНИЯ',	'',				''),
			(1,					'%ДЛЯ%ХРАНЕНИЯ%',			'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ДЛЯ ХРАНЕНИЯ',		'',					''),
			(1,					'%САЛФ%',					'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'САЛФЕТКИ',			'',					''),
			(1,					'%Д%ИНСТРУМЕН%',			'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ХРАНЕНИЕ',		'',					''),
			(1,					'%ВЕРХУШКА%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ЕЛОЧНАЯ ИГРУШКА',	'',					''),
			(1,					'%НАБОР ДЛЯ КОНСЕРВИРОВАНИЯ%',	'',					'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'НАБОР ДЛЯ КОНСЕРВИРОВАНИЯ',	'',					''),
			(1,					'%Д%МЫТЬЯ%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ДЛЯ МЫТЬЯ ПОСУДЫ',	'',					''),
			(1,					'%ЧИСТ%СР%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'БЫТОВАЯ ХИМИЯ',	'ЧИСТЯЩЕЕ СРЕДСТВО',					''),
			(1,					'%Д%СТИРКИ%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ДЛЯ СТИРКИ',	'',					''),
			(1,					'%СТИР%ПОРОШ%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ДЛЯ СТИРКИ',	'',					''),
			(1,					'%АРОМАТИЗАТОР%',			'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'БЫТОВАЯ ХИМИЯ',	'АРОМАТИЗАТОР',					''),
			(1,					'%ТЕРКА%',					'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ТЕРКА',	'',						''),
			(1,					'%САЛАТНИК%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'САЛАТНИК',	'',						''),
			(1,					'%ВАЗА%',					'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ВАЗА',	'',							''),
			(1,					'%ГУБКА%',					'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ГУБКА',	'',						''),
			(1,					'%БУТЫЛКА%КРЫШК%',			'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ПОСУДА',	'',						''),
			(1,					'%БАТАРЕЯ САЛЮТОВ%',		'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ФУЙЕРВЕРК',	'',						''),
			(1,					'%УДОБ%',					'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'УДОБРЕНИЯ',	'',						''),
			(1,					'%САХАРНИЦА%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ПОСУДА',	'',						''),
			(1,					'%ПАКЕТ%МАЙКА%',			'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ПАКЕТ',	'',						''),
			(1,					'%ПАКЕТ%ФАСОВО%',			'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ПАКЕТ',	'',						''),
			(1,					'%ПАКЕТ%Д%ЗАМ%',			'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ПАКЕТ',	'',						''),
			(1,					'%ПАКЕЕТ%Д%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ПАКЕТ',	'',						''),
			(1,					'%БУТЫЛКА ПЭТ%',			'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ПОСУДА',	'',						''),
			(1,					'%ПЕРЧАТКИ%ДЛЯ%',			'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ПЕРЧАТКИ',	'',						''),
			(1,					'ЦВЕТЫ%',					'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ЦВЕТЫ',	'',						''),
			(1,					'ВИЛКИ%',					'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ВИЛКИ',	'',						''),
			(1,					'ПЛАТКИ%',					'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ПЛАТКИ',	'',						''),
			(1,					'%ФОРМА Д%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'КУХОННЫЙ ИНВЕНТАРЬ',	'',			''),
			(1,					'%МЕШОК ДЛЯ%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ХРАНЕНИЕ',	'',					''),
			(1,					'%МЕШКИ ДЛЯ%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ХРАНЕНИЕ',	'',					''),
			(1,					'%КОНТЕЙНЕР%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ХРАНЕНИЕ',	'',					''),
			(1,					'%ЩЁТКА%',					'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ЩЁТКА',	'',					''),
			(1,					'%УГОЛЬ%',					'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'УГОЛЬ',	'',					''),
			(1,					'%АНТИСТАТИК%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'БЫТОВАЯ ХИМИЯ',	'АНТИСТАТИК',					''),
			(1,					'%ПЕРЧАТКИ РЕЗИНОВЫЕ%',		'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ПЕРЧАТКИ',	'',					''),
			(1,					'ДИСКИ%',					'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ДИСКИ',	'',					''),
			(1,					'%ЛАМПА%',					'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ЛАМПА',	'',					''),
			(1,					'ЗЕМЛЯ%',					'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ЗЕМЛЯ',	'',					''),
			(1,					'СПИЧКИ%',					'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'СПИЧКИ',	'',					''),
			(1,					'ТАРЕЛКА%',					'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'ТАРЕЛКА',	'',					''),
			(1,					'%ОСВЕЖИТЕЛЬ%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДОМА И ДАЧИ',			'БЫТОВАЯ ХИМИЯ','',					''),

			(1,					'%МЫЛО%',					'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'МЫЛО',			'',					''),
			(1,					'%БАЛЬЗАМ%',				'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'БАЛЬЗАМ','',					''),	
			(1,					'%ШАМПУНЬ%',				'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'ШАМПУНЬ','',					''),	
			(1,					'%ГЕЛЬ%',					'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'ГЕЛЬ','',							''),
			(1,					'КРЕМ%Д/Р%',				'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'КРЕМ ДЛЯ РУК','',							''),		
			(1,					'%ПРОКЛАДКИ%',				'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'ПРОКЛАДКИ','',					''),	
			(1,					'%ПАЛОЧКИ ВАТНЫЕ%',			'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'ПАЛОЧКИ ВАТНЫЕ','',		''),	
			(1,					'%СТАНОК%',					'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'СТАНОК','',						''),	
			(1,					'%ДЕЗОДОР%',				'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'ДЕЗОДОРАНТ','',				''),	
			(1,					'%ТУАЛ%БУМ%',				'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'ТУАЛЕТНАЯ БУМАГА','',			''),	
			(1,					'%МАСКА %',				'%КАРНАВ%',					'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'МАСКА','',					''),	
			(1,					'%СКРАБ%',					'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'КОСМЕТИЧЕСКОЕ СРЕДСТВО','',		''),	
			(1,					'%ФЛОРЕСАН%',				'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'КОСМЕТИЧЕСКОЕ СРЕДСТВО','',	''),	
			(1,					'МАСЛО %Д%ЗАГАРА%',			'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'КОСМЕТИЧЕСКОЕ СРЕДСТВО','',''),	
			(1,					'СР-ВО Д%',					'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'КОСМЕТИЧЕСКОЕ СРЕДСТВО','',		''),	
			(1,					'%ЖИДКОСТЬ%',				'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'ЖИДКОСТЬ','',					''),	
			(1,					'З / Щ %',					'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'ЗУБНАЯ ЩЕТКА','',					''),
			(1,					'З/Щ %',					'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'ЗУБНАЯ ЩЕТКА','',					''),	
			(1,					'З / П %',					'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'ЗУБНАЯ ПАСТА','',					''),
			(1,					'З/П %',					'',						'ТОВАРЫ',		'КОСМЕТИКА/ГИГИЕНА',				'ЗУБНАЯ ПАСТА','',					''),


			(1,					'%КАРАНДАШ%',				'',						'ТОВАРЫ',		'КОНЦЕЛЯРИЯ',						'КАРАНДАШ','',					''),
			(1,					'%КНИГА ДЛЯ ЗАПИСЕЙ%',		'',						'ТОВАРЫ',		'КОНЦЕЛЯРИЯ',						'КНИГА ДЛЯ ЗАПИСЕЙ','',					''),
			(1,					'%ОБЛОЖКА%',				'',						'ТОВАРЫ',		'КОНЦЕЛЯРИЯ',						'ОБЛОЖКА','',					''),
			(1,					'%ТЕТРАДЬ%',				'',						'ТОВАРЫ',		'КОНЦЕЛЯРИЯ',						'ТЕТРАДЬ','',					''),
			(1,					'%РУЧКА%',					'',						'ТОВАРЫ',		'КОНЦЕЛЯРИЯ',						'РУЧКА','',					''),
			(1,					'%РИСОВАНИЯ%',				'',						'ТОВАРЫ',		'КОНЦЕЛЯРИЯ',						'ДЛЯ РИСОВАНИЯ','',					''),
			(1,					'%КАРТОН%',					'',						'ТОВАРЫ',		'КОНЦЕЛЯРИЯ',						'КАРТОН','',					''),
			(1,					'%КНИЖКА%',					'',						'ТОВАРЫ',		'КОНЦЕЛЯРИЯ',						'КНИЖКА','',					''),
			(1,					'%КЛЕЙ%',					'',						'ТОВАРЫ',		'КОНЦЕЛЯРИЯ',						'КЛЕЙ','',					''),
			(1,					'%КАРТРИДЖ%',				'',						'ТОВАРЫ',		'КОНЦЕЛЯРИЯ',						'КАРТРИДЖ','',					''),
			(1,					'%БЛОКНОТ%',				'',						'ТОВАРЫ',		'КОНЦЕЛЯРИЯ',						'БЛОКНОТ','',					''),
			(1,					'%АКВАРЕЛЬ%',				'',						'ТОВАРЫ',		'КОНЦЕЛЯРИЯ',						'АКВАРЕЛЬ','',					''),
			(1,					'%ЛАСТИК%',					'%[А_Я]ЛАСТИК%',		'ТОВАРЫ',		'КОНЦЕЛЯРИЯ',						'ЛАСТИК','',					''),
			(1,					'%АЛЬБОМ%',					'',						'ТОВАРЫ',		'КОНЦЕЛЯРИЯ',						'АЛЬБОМ','',					''),
			(1,					'%БУМАГА%',					'',						'ТОВАРЫ',		'КОНЦЕЛЯРИЯ',						'БУМАГА','',					''),
			(1,					'%ТОЧИЛКА%',				'',						'ТОВАРЫ',		'КОНЦЕЛЯРИЯ',						'ТОЧИЛКА','',					''),
			(1,					'%ОТКРЫТКА%',				'',						'ТОВАРЫ',		'КОНЦЕЛЯРИЯ',						'ОТКРЫТКА','',					''),
			
			(1,					'%ГАЗЕТА%',					'',						'ТОВАРЫ',		'КНИГИ/ЖУРНАЛЫ',					'ГАЗЕТА','',					''),
			(1,					'%ЖУРНАЛ%',					'',						'ТОВАРЫ',		'КНИГИ/ЖУРНАЛЫ',					'ЖУРНАЛ','',					''),
			(1,					'%КНИГА%',					'',						'ТОВАРЫ',		'КНИГИ/ЖУРНАЛЫ',					'КНИГА','',					''),
			(1,					'%СКАНВОРД%',				'',						'ТОВАРЫ',		'КНИГИ/ЖУРНАЛЫ',					'СКАНВОРД','',					''),
			
			(1,					'%НАБОР ДЛЯ ПЕСКА%',		'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДЕТЕЙ',					'ИГРУШКИ','',					''),
			(1,					'%СОС%ПУСТЫШ%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДЕТЕЙ',					'СОСКИ\ПУСТЫШКИ','',					''),
			(1,					'%ИГРУШКА%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДЕТЕЙ',					'ИГРУШКИ','',					''),
			(1,					'КРЕМ ДЕТСКИЙ%',			'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДЕТЕЙ',					'УХОД ЗА ДЕТСКОЙ КОЖЕЙ','',					''),
			(1,					'%ДЖОНСОНС БЭБИ%',			'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДЕТЕЙ',					'УХОД ЗА ДЕТСКОЙ КОЖЕЙ','',					''),
			(1,					'%ПОДГУЗНИКИ%',				'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ДЕТЕЙ',					'ПОДГУЗНИКИ','',				''),	
			
			(1,					'%НАПОЛНИТЕЛЬ%',			'',						'ТОВАРЫ',		'ТОВАРЫ ДЛЯ ЖИВОТНЫХ',				'НАПОЛНИТЕЛЬ','',					''),
			
			(1,					'%ПОДАРОЧНАЯ КАРТА%',		'',						'ТОВАРЫ',		'ПОДАРКИ',							'ПОДАРОЧНАЯ КАРТА','',					''),
			(1,					'%%ПАКЕТ ПОДАР%',			'',						'ТОВАРЫ',		'ПОДАРКИ',							'ПОДАРОЧНЫЙ ПАКЕТ','',					''),
			(1,					'%ПАКЕТ%ПОДАР%',			'',						'ТОВАРЫ',		'ПОДАРКИ',							'ПОДАРОЧНЫЙ ПАКЕТ','',					''),
			(1,					'%НОСОК ДЛЯ ПОДАРКОВ%',		'',						'ТОВАРЫ',		'ПОДАРКИ',							'НОВОГОДНИЕ ТОВАРЫ','',					''),
			(1,					'%НОВОГОДНИЙ ПОДАРОК%',		'',						'ТОВАРЫ',		'ПОДАРКИ',							'НОВОГОДНИЙ ПОДАРОК','',					''),
			(1,					'%БОНУСНАЯ КАРТА%',			'',						'ТОВАРЫ',		'ПОДАРКИ',							'БОНУСНАЯ КАРТА','',					''),
			(1,					'%ПОДАРОЧНЫЙ НАБОР%',		'',						'ТОВАРЫ',		'ПОДАРКИ',							'ПОДАРОЧНЫЙ НАБОР','',					''),
			(1,					'%НАБОР ПОДАРКИ%',			'',						'ТОВАРЫ',		'ПОДАРКИ',							'ПОДАРОЧНЫЙ НАБОР','',					''),

			
			(1,					'%КАРТЫ%',					'',						'ТОВАРЫ',		'ДРУГИЕ ТОВАРЫ',					'КАРТЫ','',					''),
			(1,					'%ИСПАРИТЕЛЬ%',				'',						'ТОВАРЫ',		'ДРУГИЕ ТОВАРЫ',					'ИСПАРИТЕЛЬ','',					''),
			(1,					'%БАТАРЕЙК%',				'',						'ТОВАРЫ',		'ДРУГИЕ ТОВАРЫ',					'БАТАРЕЙКИ','',					''),
			(1,					'%ЗАЖИГАЛКА%',				'',						'ТОВАРЫ',		'ДРУГИЕ ТОВАРЫ',					'ЗАЖИГАЛКА','',					''),
			(1,					'%ПРЕЗЕРВА%',				'',						'ТОВАРЫ',		'ДРУГИЕ ТОВАРЫ',					'ПРЕЗЕРВАТИВЫ','',					''),
			(1,					'%ЖЕВ%РЕЗИН%',				'',						'ТОВАРЫ',		'ДРУГИЕ ТОВАРЫ',					'ЖЕВАТЕЛЬНАЯ РЕЗИНКА','',			''),
			(1,					'%СИГАРЕТ%',				'',						'ТОВАРЫ',		'ДРУГИЕ ТОВАРЫ',					'СИГАРЕТЫ','',					'')	


		END
GO


/*
EXTRACT_SUBSTRING
Процедура удаляет подстроку @SUBSTRING из product_name и записывает ее в temp_param
Значение из temp_param после выполнения процедуры нужно перенести в постоянный другой столбец
Параметры
	@SUBSTRING - подстрока, которую надо найти
	(пока не реализован) @remove_measure - признак, удалять ли найденное сочетание из product_name (пока не реализован)
*/
DROP PROCEDURE IF EXISTS EXTRACT_SUBSTRING 
GO
CREATE PROCEDURE EXTRACT_SUBSTRING  (@SUBSTRING nvarchar(50))
	AS
	BEGIN
		UPDATE step0 SET temp_param=''
	
		UPDATE step0
		SET temp_param=@SUBSTRING,
			product_name = replace(product_name, @SUBSTRING, ''),
			parse_status = parse_status+10
		WHERE	product_name like concat('%',@SUBSTRING,'%')		

		/* убираю лишние пробелы и пробелы в конце строки*/	  
		UPDATE step0
		SET product_name = rtrim(replace(product_name,'  ',' '))
	
	END
GO

/*
MULTIPLE_UPDATE
Процедура удаляет подстроки, соответствующие каждой переменной , из product_name (по условию like @SUBSTRING)
и записывает значения переменных в соответствующие столбцы
Значение из temp_param после выполнения процедуры нужно перенести в постоянный другой столбец

*/
DROP PROCEDURE IF EXISTS MULTIPLE_UPDATE 
GO
CREATE PROCEDURE MULTIPLE_UPDATE (	@SUBSTRING nvarchar(50),
									@PRODUCER	nvarchar(50),
									@PROD_TYPE nvarchar(50),
									@PROD_SUBTYPE nvarchar(50),
									@PROD_CATEGORY nvarchar(50),
									@PROD_SUBCATEGORY nvarchar(50))
	AS
	BEGIN
		UPDATE step0 SET temp_param=''
	
		UPDATE step0
		SET temp_param			= @SUBSTRING,
			product_name		= replace(replace(replace(replace(replace(replace(product_name, @SUBSTRING, ''), @PRODUCER, ''), @PROD_TYPE, ''), @PROD_SUBTYPE, ''), @PROD_CATEGORY, ''), @PROD_SUBCATEGORY, ''),
			param15_producer	= CASE WHEN @PRODUCER !=''			and param15_producer=''		THEN @PRODUCER			ELSE param15_producer		END,
			param16_type		= CASE WHEN @PROD_TYPE !=''			and param16_type=''			THEN @PROD_TYPE			ELSE param16_type			END,
			param17_subtype		= CASE WHEN @PROD_SUBTYPE !=''		and param17_subtype=''		THEN @PROD_SUBTYPE		ELSE param17_subtype		END,
			param18_category	= CASE WHEN @PROD_CATEGORY !=''		and param18_category=''		THEN @PROD_CATEGORY		ELSE param18_category		END,
			param19_subcategory = CASE WHEN @PROD_SUBCATEGORY !=''	and param19_subcategory=''	THEN @PROD_SUBCATEGORY	ELSE param19_subcategory	END,
			parse_status = parse_status+1000
		WHERE	product_name like concat('%',@SUBSTRING,'%')		

		/* убираю лишние пробелы и пробелы в конце строки*/	  
		UPDATE step0
		SET product_name = rtrim(replace(product_name,'  ',' '))
	
	END
GO


/*
MULTIPLE_UPDATE_PRODSUBTYPE
Процедура удаляет подстроки, соответствующие каждой переменной , из product_name  (по условию like @SUBSTRING and like @PROD_TYPE)
и записывает значения переменных в соответствующие столбцы
Значение из temp_param после выполнения процедуры нужно перенести в постоянный другой столбец

*/
DROP PROCEDURE IF EXISTS MULTIPLE_UPDATE_PRODSUBTYPE 
GO
CREATE PROCEDURE MULTIPLE_UPDATE_PRODSUBTYPE (	@SUBSTRING nvarchar(50),
												@PRODUCER	nvarchar(50),
												@PROD_TYPE nvarchar(50),
												@PROD_SUBTYPE nvarchar(50),
												@PROD_CATEGORY nvarchar(50),
												@PROD_SUBCATEGORY nvarchar(50))
	AS
	BEGIN
		UPDATE step0 SET temp_param=''
	
		UPDATE step0
		SET temp_param			= @SUBSTRING,
			product_name		= replace(replace(replace(replace(replace(replace(product_name, @SUBSTRING, ''), @PRODUCER, ''), @PROD_TYPE, ''), @PROD_SUBTYPE, ''), @PROD_CATEGORY, ''), @PROD_SUBCATEGORY, ''),
			param15_producer	= CASE WHEN @PRODUCER !=''			and param15_producer=''		THEN @PRODUCER				ELSE param15_producer		END,
			param16_type		= CASE WHEN @PROD_TYPE !=''			and param16_type=''			THEN @PROD_TYPE				ELSE param16_type			END,
			param17_subtype		= CASE WHEN @PROD_SUBTYPE !=''		and param17_subtype=''		THEN RTRIM(@PROD_SUBTYPE)	ELSE param17_subtype		END,
			param18_category	= CASE WHEN @PROD_CATEGORY !=''		and param18_category=''		THEN @PROD_CATEGORY			ELSE param18_category		END,
			param19_subcategory = CASE WHEN @PROD_SUBCATEGORY !=''	and param19_subcategory=''	THEN @PROD_SUBCATEGORY		ELSE param19_subcategory	END,
			parse_status = parse_status+100
		WHERE	product_name like concat('%',@SUBSTRING,'%')		
			and product_name like concat('%',@PROD_SUBTYPE,'%')		

		/* убираю лишние пробелы и пробелы в конце строки*/	  
		UPDATE step0
		SET product_name = rtrim(replace(product_name,'  ',' '))
	
	END
GO


/*
MULTIPLE_UPDATE_PRODCATEGORY
Процедура удаляет подстроки, соответствующие каждой переменной , из product_name  (по условию like @SUBSTRING and like @PROD_CATEGORY)
и записывает значения переменных в соответствующие столбцы
Значение из temp_param после выполнения процедуры нужно перенести в постоянный другой столбец

*/
DROP PROCEDURE IF EXISTS  MULTIPLE_UPDATE_PRODCATEGORY 
GO
CREATE PROCEDURE MULTIPLE_UPDATE_PRODCATEGORY (	@SUBSTRING nvarchar(50),
											  @PRODUCER	nvarchar(50),
											  @PROD_TYPE nvarchar(50),
											  @PROD_SUBTYPE nvarchar(50),
											  @PROD_CATEGORY nvarchar(50),
											  @PROD_SUBCATEGORY nvarchar(50))
	AS
	BEGIN
		UPDATE step0 SET temp_param=''
	
		UPDATE step0
		SET temp_param			= @SUBSTRING,
			product_name		= replace(replace(replace(replace(replace(replace(product_name, @SUBSTRING, ''), @PRODUCER, ''), @PROD_CATEGORY, ''), @PROD_TYPE, ''), @PROD_SUBTYPE, ''), @PROD_SUBCATEGORY, ''),
			param15_producer	= CASE WHEN @PRODUCER !=''			and param15_producer=''		THEN @PRODUCER				ELSE param15_producer		END,
			param16_type		= CASE WHEN @PROD_TYPE !=''			and param16_type=''			THEN @PROD_TYPE				ELSE param16_type			END,
			param17_subtype		= CASE WHEN @PROD_SUBTYPE !=''		and param17_subtype=''		THEN @PROD_SUBTYPE			ELSE param17_subtype		END,
			param18_category	= CASE WHEN @PROD_CATEGORY !=''		and param18_category=''		THEN RTRIM(@PROD_CATEGORY)	ELSE param18_category		END,
			param19_subcategory = CASE WHEN @PROD_SUBCATEGORY !=''	and param19_subcategory=''	THEN @PROD_SUBCATEGORY		ELSE param19_subcategory	END,
			parse_status = parse_status+100
		WHERE	product_name like concat('%',@SUBSTRING,'%')		
			and product_name like concat('%',@PROD_CATEGORY,'%')		

		/* убираю лишние пробелы и пробелы в конце строки*/	  
		UPDATE step0
		SET product_name = rtrim(replace(product_name,'  ',' '))
	
	END
GO


/* 
PRODUCT_NAME_PARCING
Процедура разбирает наименование продукта и заполняет поля с параметрами продукта
*/
DROP PROCEDURE IF EXISTS PRODUCT_NAME_PARCING
GO
CREATE PROCEDURE PRODUCT_NAME_PARCING
	AS
	BEGIN
	--STEP0: Создаю таблицу с полями для наполнения
		DROP TABLE IF EXISTS step0 
		SELECT	product_id,
				RTRIM(substring(product_name, 1, len(product_name)-1)) as product_name,  --убираем невидимый непонятный символ в конце строки и пробелы в конце строки

				0 as parse_status,
				'                                                 ' as temp_param,
				'                                ' as param1_pricefor,
				'                                ' as param1_ves,

				'                                ' as param3_kg,
				'                                ' as param3_gramm,		
				'                                ' as param3_special,
			
				'                                ' as param4_litr,
				'                                ' as param4_ml,
				'                                ' as param4_special,

				'                                ' as param5_items,
				'                                ' as param5_special,

				'                                ' as param6_tara,

				'                                ' as param7_percent,

				'                                ' as param8_sm,
				'                                ' as param8_m,
				'                                ' as param8_special,  

				'                                ' as param10_num3,
				'                                ' as param10_num2,
				'                                ' as param10_num1,

				'                                ' as param11_CCC,
		
				'                                ' as param12,
				'                                ' as param14_pch_part,

				'                                                                   ' as param15_producer,
				'                                ' as param16_type,
				'                                ' as param17_subtype,
				'                                ' as param18_category,		
				'                                                  ' as param19_subcategory,
				product_name as product_name_origin
		INTO step0
		from products
		

		/* сложные исключения */
		update step0  set product_name = replace(product_name, 'НАБОРОСЕНЬ-ЗИМАЯСАМАЯКРЕМ-АНТИСТРЕСС75МЛ+КРЕМ-МАНИКЮР75МЛ/12', 'НАБОРОСЕНЬ-ЗИМАЯСАМАЯКРЕМ-АНТИСТРЕСС+КРЕМ-МАНИКЮР 75МЛ+75МЛ / 12')
		where ( product_name like '%НАБОРОСЕНЬ-ЗИМАЯСАМАЯКРЕМ-АНТИСТРЕСС75МЛ+КРЕМ-МАНИКЮР75МЛ/12%' )

		-------------------------------param15_producer-------------------------------------------
		UPDATE step0
		SET product_name=replace(replace(replace(replace(replace(product_name
												,'ПК ЛАМА','ЛАМА')
												,'ООО ПК ""ПУТИНА""','ПУТИНА')
												,'"КИЗЛЯР ГУП"','КИЗЛЯР')
												,'"АД ВИНО ЗУПА.СЕРБСКОЕ"','"АД ВИНО ЗУПА"')
												,'КАХЕТИ"','КАХЕТИ.')

		/* вот большой кусок, которые надо бы перенести в таблицу правил product_category_rules. т.е. этот вариант определения полей - скорее атавизм */
	    /* начало атавистического участка */
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ЛАМА'				,@PRODUCER	= 'ПК ЛАМА'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE=''					,@PROD_CATEGORY=''					,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ПУТИНА'			,@PRODUCER	= 'ООО ПК ""ПУТИНА""'		,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='ИКРА'				,@PROD_SUBCATEGORY='ИКРА'
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ТОМСКАЯ ПТИЦЕФАБРИКА'	,@PRODUCER	= 'ТОМСКАЯ ПТИЦЕФАБРИКА',@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ЯЙЦА'				,@PROD_CATEGORY=''					,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ТПФ'				,@PRODUCER	= 'ТПФ'						,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МЯСО/ПТИЦА'			,@PROD_CATEGORY='КУРИЦА'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = '"КИЗЛЯР ГУП"'		,@PRODUCER	= '"КИЗЛЯР  ГУП"'			,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='КОНЬЯК'				,@PROD_CATEGORY='РОССИЯ(ДАГЕСТАН)'	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = '"АД ВИНО ЗУПА"'	,@PRODUCER	= '"АД ВИНО ЗУПА.СЕРБСКОЕ"' ,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE=''					,@PROD_CATEGORY='СЕРБИЯ'			,@PROD_SUBCATEGORY=''  -- не удаляю ВИНО, чтобы разобрать тип ВИНО ниже
		EXEC MULTIPLE_UPDATE				@SUBSTRING = '"АСТИ.МАРТИНИ"'	,@PRODUCER	= '"АСТИ.МАРТИНИ"'          ,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО'				,@PROD_CATEGORY='ИТАЛИЯ'			,@PROD_SUBCATEGORY='ИГРИСТОЕ'
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ЯШКИНСКИЙ ПК'		,@PRODUCER	= 'ЯШКИНСКИЙ ПК'			,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',@PROD_CATEGORY='ВЫПЕЧКА'	,@PROD_SUBCATEGORY='ВАФЛИ'
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'МИРАТОРГ'			,@PRODUCER	= 'МИРАТОРГ'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МЯСО/ПТИЦА'			,@PROD_CATEGORY=''					,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'МИКОЯН'			,@PRODUCER	= 'МИКОЯН'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МЯСО/ПТИЦА'			,@PROD_CATEGORY=''					,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ЖИТНИЦА'			,@PRODUCER	= 'ЖИТНИЦА'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE=''					,@PROD_CATEGORY=''					,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АРИОН'			,@PRODUCER	= 'АРИОН'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY=''					,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ЛЕНМОРЕПРОДУКТ'	,@PRODUCER	= 'ЛЕНМОРЕПРОДУКТ'			,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='КЕТА'				,@PROD_SUBCATEGORY='СТЕЙК'
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ПОЛАРУСФИШ'		,@PRODUCER	= 'ПОЛАРУСФИШ'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY=''					,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ЕВРОПРОМ'			,@PRODUCER	= 'ЕВРОПРОМ'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY=''					,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'МПФ'				,@PRODUCER	= 'МПФ'						,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МЯСО/ПТИЦА'			,@PROD_CATEGORY=''					,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ПРОСТОКВАШИНО'	,@PRODUCER	= 'ПРОСТОКВАШИНО'			,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ПИЩЕВЫЕ ЖИРЫ'		,@PROD_CATEGORY='МАСЛО СЛИВОЧНОЕ'	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ПРОСТОКВАШИНО'	,@PRODUCER	= 'ПРОСТОКВАШИНО'			,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'	,@PROD_CATEGORY=''					,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'НАДИН'			,@PRODUCER	= 'НАДИН'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='БАКАЛЕЯ'			,@PROD_CATEGORY='ЧАЙ'				,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'САНТО СТЕФАНО'	,@PRODUCER	= 'ЗАО «НПО Агросервис»'	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'			,@PROD_CATEGORY='РОССИЯ'			,@PROD_SUBCATEGORY=''	-- не удаляю ВИННЫЙ НАП. ГАЗ., чтобы разобрать тип ВИНО ниже
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'СИБИРСКИЙ ГУРМАН'	,@PRODUCER	= 'СИБИРСКИЙ ГУРМАН'		,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ'	,@PROD_CATEGORY=''			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ЭРМАНН'			,@PRODUCER	= 'ЭРМАНН'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'	,@PROD_CATEGORY=''					,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'БМК'				,@PRODUCER	= 'ООО БМК'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'	,@PROD_CATEGORY=''					,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'КАХЕТИ.'			,@PRODUCER	= 'КАХЕТИ'					,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE=''					,@PROD_CATEGORY='РОССИЯ'			,@PROD_SUBCATEGORY=''  -- не удаляю ВИНО, чтобы разобрать тип ВИНО ниже
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'БРИЗ'				,@PRODUCER	= 'БРИЗ'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='ИКРА ЧЕРНАЯ ИМИТАЦИЯ'	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'БРИЗ'				,@PRODUCER	= 'БРИЗ'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='ИКРА КРАСНАЯ ИМИТАЦИЯ'	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'БРИЗ'				,@PRODUCER	= 'БРИЗ'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='МАСЛО ИКОРНОЕ'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'БРИЗ'				,@PRODUCER	= 'БРИЗ'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='НАБОР К ПИВУ'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ТОМСКИЙ РЫБЗАВОД'	,@PRODUCER	= 'ТОМСКИЙ РЫБЗАВОД'		,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='НАБОР К ПИВУ'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ТОМСКИЙ РЫБЗАВОД'	,@PRODUCER	= 'ТОМСКИЙ РЫБЗАВОД'		,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='ФАРШ РЫБНЫЙ'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ТОМСКИЙ РЫБЗАВОД'	,@PRODUCER	= 'ТОМСКИЙ РЫБЗАВОД'		,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='РЫБА'					,@PROD_SUBCATEGORY=''-- оставшееся по томскому рыбзаводу
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ТОМСКИЙ РЫБЗАВОД'	,@PRODUCER	= 'ТОМСКИЙ РЫБЗАВОД'		,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='ПОлУФАБРИКАТ'			,@PROD_SUBCATEGORY='' -- удалить дубль РЫБОЗАВОД, РЫБЗАВОД
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ТОМСКИЙ РЫБОЗАВОД',@PRODUCER	= 'ТОМСКИЙ РЫБОЗАВОД'		,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='ФАРШ РЫБНЫЙ'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ТОМСКИЙ РЫБОЗАВОД',@PRODUCER	= 'ТОМСКИЙ РЫБОЗАВОД'		,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='РЫБА'					,@PROD_SUBCATEGORY=''-- оставшееся по томскому рыбОзаводу
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ТОМСКИЙ РЫБОЗАВОД',@PRODUCER	= 'ТОМСКИЙ РЫБОЗАВОД'		,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'КАМШАТ'			,@PRODUCER	= 'КАМШАТ'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='ПРЕСЕРВЫ'				,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'КАМШАТ'			,@PRODUCER	= 'КАМШАТ'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='РЫБА'					,@PROD_SUBCATEGORY='' --разобрать копчение\ заморож \ ...?
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'КАМШАТ'			,@PRODUCER	= 'КАМШАТ'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---разобрать
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'МИСТЕР ХЕ'		,@PRODUCER	= 'МИСТЕР ХЕ'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',@PROD_CATEGORY=''						,@PROD_SUBCATEGORY=''   --восточная какая-то еда , салаьы, сушт
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ФЕРЭЛЬГАМ'		,@PRODUCER	= 'ФЕРЭЛЬГАМ'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНСЕРВАЦИЯ/СОУСЫ'		,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY=''   --  маринов, соленья, хренодер
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'БУЛГАРКОНСЕРВ'	,@PRODUCER	= 'БУЛГАРКОНСЕРВ'			,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНСЕРВАЦИЯ/СОУСЫ'	,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY=''   
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ЗЕЛЕНАЯ УСАДЬБА'  ,@PRODUCER	= 'АКВАТОРИЯ'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНСЕРВАЦИЯ/СОУСЫ'	,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY=''   --  пресервы, рыба, соленья, овощи
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'АКВАТОРИЯ'		,@PRODUCER	= 'АКВАТОРИЯ'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ'	,@PROD_CATEGORY='САЛАТ'			,@PROD_SUBCATEGORY=''   --  пресервы, рыба, соленья, овощи
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АКВАТОРИЯ'		,@PRODUCER	= 'АКВАТОРИЯ'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY=''   --  пресервы, рыба, соленья, овощи
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'БАЛТИЙСКИЙ БЕРЕГ'	,@PRODUCER	= 'БАЛТИЙСКИЙ БЕРЕГ'		,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='ПРЕСЕРВЫ'				,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'БАЛТИЙСКИЙ БЕРЕГ'	,@PRODUCER	= 'БАЛТИЙСКИЙ БЕРЕГ'		,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='ИКРА'					,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'БАЛТИЙСКИЙ БЕРЕГ'	,@PRODUCER	= 'БАЛТИЙСКИЙ БЕРЕГ'		,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='МАСЛО ЛОСОСЕВОЕ'		,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'БАЛТИЙСКИЙ БЕРЕГ'	,@PRODUCER	= 'БАЛТИЙСКИЙ БЕРЕГ'		,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='МАСЛО СЕЛЕДОЧНОЕ'		,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'БАЛТИЙСКИЙ БЕРЕГ'	,@PRODUCER	= 'БАЛТИЙСКИЙ БЕРЕГ'		,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='ПАШТЕТ РЫБНЫЙ'			,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'БАЛТИЙСКИЙ БЕРЕГ'	,@PRODUCER	= 'БАЛТИЙСКИЙ БЕРЕГ'		,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='РЫБА'					,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'БАЛТИЙСКИЙ БЕРЕГ'	,@PRODUCER	= 'БАЛТИЙСКИЙ БЕРЕГ'		,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='САЛАТ ИЗ МОРСКОЙ КАПУСТЫ'	,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'МЕРИДИАН'			,@PRODUCER	= 'МЕРИДИАН'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='ПРЕСЕРВЫ'				,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'МЕРИДИАН'			,@PRODUCER	= 'МЕРИДИАН'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='САЛАТ ИЗ МОРСКОЙ КАПУСТЫ'	,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'МЕРИДИАН'			,@PRODUCER	= 'МЕРИДИАН'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='КРАБОВЫЕ ПАЛОЧКИ'		,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'МЕРИДИАН'			,@PRODUCER	= 'МЕРИДИАН'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='РЫБА'					,@PROD_SUBCATEGORY='' -- оставшееся по МЕРИДИАН
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'МЕРИДИАН'			,@PRODUCER	= 'МЕРИДИАН'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='ИКРА'					,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ФОСФОРЕЛЬ'		,@PRODUCER	= 'ФОСФОРЕЛЬ'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='ПРЕСЕРВЫ'				,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ФОСФОРЕЛЬ'		,@PRODUCER	= 'ФОСФОРЕЛЬ'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='РЫБА'					,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'КАПИТАН'			,@PRODUCER	= 'КАПИТАН'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='ПРЕСЕРВЫ'				,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'КАПИТАН'			,@PRODUCER	= 'КАПИТАН'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='РЫБА'					,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ТД ЭКОР'			,@PRODUCER	= 'ТД ЭКОР'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='ПРЕСЕРВЫ'				,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ТД ЭКОР'			,@PRODUCER	= 'ТД ЭКОР'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='НАБОР К ПИВУ'			,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ТД ЭКОР'			,@PRODUCER	= 'ТД ЭКОР'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='РЫБА'					,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ЗОЛОТАЯ РЫБКА'	,@PRODUCER	= 'ЗОЛОТАЯ РЫБКА'			,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='ПРЕСЕРВЫ'				,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ЗОЛОТАЯ РЫБКА'	,@PRODUCER	= 'ЗОЛОТАЯ РЫБКА'			,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='РЫБА'					,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'БАЛТИЙСКИЙ'		,@PRODUCER	= 'БАЛТИЙСКИЙ'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='ПРЕСЕРВЫ'				,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'СЕРВИССНАБ'		,@PRODUCER	= 'СЕРВИССНАБ'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',@PROD_CATEGORY=''					,@PROD_SUBCATEGORY='САЛАТ СВЕЖЕСТЬ ИЗ КАПУСТЫ МАРИНОВАННОЙ' 
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ВБД'				,@PRODUCER	= 'ВБД'						,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'	,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АНТОНОВ ДВОР'		,@PRODUCER	= 'АНТОНОВ ДВОР'			,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',@PROD_CATEGORY=''					,@PROD_SUBCATEGORY='' --блины, булки, котлеты, вариеники, десерт, пирожные, торт  -- кулинария?
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ИНМАРКО'			,@PRODUCER	= 'ИНМАРКО'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'	,@PROD_CATEGORY='МОРОЖЕНОЕ'				,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'СНЕЖНЫЙ ГОРОДОК'	,@PRODUCER	= 'СНЕЖНЫЙ ГОРОДОК'			,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'	,@PROD_CATEGORY='МОРОЖЕНОЕ'				,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ГРОСПИРОН'		,@PRODUCER	= 'БОЧКАРИ'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'	,@PROD_CATEGORY='МОРОЖЕНОЕ'				,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ПОЛЯРИС'			,@PRODUCER	= 'ПОЛЯРИС'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'	,@PROD_CATEGORY='МОРОЖЕНОЕ'				,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'БОЧКАРИ'			,@PRODUCER	= 'БОЧКАРИ'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='НАПИТКИ'			,@PROD_CATEGORY='НАПИТОК ГАЗ.'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'БОЧКАРИ'			,@PRODUCER	= 'БОЧКАРИ'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ВОДА'				,@PROD_CATEGORY='ВОДА МИНЕРАЛ.'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'МИНИ TV'			,@PRODUCER	= 'МИНИ TV'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',@PROD_CATEGORY=''			,@PROD_SUBCATEGORY=''  -- печенье, кексы, торты, круасс, ваф
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'TV'				,@PRODUCER	= 'TV'						,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',@PROD_CATEGORY=''			,@PROD_SUBCATEGORY=''  -- печенье, кексы, торты, круасс, ваф
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'РУСБЕРРИ ЛАЙН'	,@PRODUCER	= 'РУСБЕРРИ ЛАЙН'			,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ОРЕХИ/ГРИБЫ'		,@PROD_CATEGORY='ГРИБЫ'					,@PROD_SUBCATEGORY='ЗАМОРОЗКА'  
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'РУСБЕРРИ ЛАЙН'	,@PRODUCER	= 'РУСБЕРРИ ЛАЙН'			,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ОРЕХИ/ГРИБЫ'		,@PROD_CATEGORY='СМЕСЬ ГРИБНАЯ'			,@PROD_SUBCATEGORY=''     
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'РУСБЕРРИ ЛАЙН'	,@PRODUCER	= 'РУСБЕРРИ ЛАЙН'			,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ФРУКТЫ/ЯГОДЫ'		,@PROD_CATEGORY='ЯГОДЫ'					,@PROD_SUBCATEGORY=''   
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'РЫБОЗАВОД БАЙКАЛ'	,@PRODUCER	= 'РЫБОЗАВОД БАЙКАЛТ'		,@PROD_TYPE ='ПРОДУКТЫ',@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ',@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---биточки рыбны и пельмени рыбные
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = '4 СЕЗОНА'			,@PRODUCER	= '4 СЕЗОНА'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ОВОЩИ/ЗЕЛЕНЬ'		,@PROD_CATEGORY='КУКУРУЗА'				,@PROD_SUBCATEGORY=''  
		EXEC MULTIPLE_UPDATE				@SUBSTRING = '4 СЕЗОНА'			,@PRODUCER	= '4 СЕЗОНА'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ФРУКТЫ/ЯГОДЫ'		,@PROD_CATEGORY='ЯГОДЫ'					,@PROD_SUBCATEGORY=''   
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ХЛЕБОЗАВОД №4'	,@PRODUCER	= 'ХЛЕБОЗАВОД №4'			,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ХЛЕБОБУЛОЧНЫЕ ИЗДЕЛИЯ/ВЫПЕЧКА',@PROD_CATEGORY=''			,@PROD_SUBCATEGORY=''   
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'МОРОЗКО'			,@PRODUCER	= 'МОРОЗКО'					,@PROD_TYPE ='ТОВАРЫ'	,@PROD_SUBTYPE='ТОВАРЫ ДЛЯ ДЕТЕЙ'	,@PROD_CATEGORY='КРЕМ ДЕТСКИЙ'			,@PROD_SUBCATEGORY=''      
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'МОРОЗКО'			,@PRODUCER	= 'МОРОЗКО'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ФРУКТЫ/ЯГОДЫ'		,@PROD_CATEGORY='ГРИН КЛУБНИКА'			,@PROD_SUBCATEGORY='ЗАМОРОЗКА'      -- сделать update смесь на грибы
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'МОРОЗКО'			,@PRODUCER	= 'МОРОЗКО'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ФРУКТЫ/ЯГОДЫ'		,@PROD_CATEGORY='ГРИН МАЛИНА'			,@PROD_SUBCATEGORY='ЗАМОРОЗКА'      -- сделать update смесь на грибы
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'МОРОЗКО'			,@PRODUCER	= 'МОРОЗКО'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ОРЕХИ/ГРИБЫ'		,@PROD_CATEGORY='ГРИН ШАМПИНЬОНЫ'		,@PROD_SUBCATEGORY='ЗАМОРОЗКА'      -- сделать update смесь на грибы
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'МОРОЗКО'			,@PRODUCER	= 'МОРОЗКО'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ОВОЩИ/ЗЕЛЕНЬ'		,@PROD_CATEGORY='ГРИН'					,@PROD_SUBCATEGORY='ЗАМОРОЗКА'      -- сделать update смесь на грибы
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'МОРОЗКО'			,@PRODUCER	= 'МОРОЗКО'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',	@PROD_CATEGORY='ГРИН КЛУБНИКА'	,@PROD_SUBCATEGORY='ЗАМОРОЗКА'      -- сделать update смесь на грибы
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АКТИМЕЛЬ'			,@PRODUCER	= 'АКТИМЕЛЬ'				,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ',	@PROD_CATEGORY='МОЛОЧНЫЙ ПРОДУКТ'		,@PROD_SUBCATEGORY=''     
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'РОЛЛТОН'			,@PRODUCER	= 'РОЛЛТОН'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='БАКАЛЕЯ'			,@PROD_CATEGORY='СМЕСЬ ДЛЯ БЫСТРОГО ПРИГОТОВЛЕНИЯ'						,@PROD_SUBCATEGORY=''     
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ВЕСЕЛЫЙ ГНОМ'		,@PRODUCER	= 'ВЕСЕЛЫЙ ГНОМ'			,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',@PROD_CATEGORY='ЖЕЛЕ'		,@PROD_SUBCATEGORY=''  

		update step0
		set param19_subcategory = '70 / 90',
		param18_category='КРЕВЕТКИ',
		product_name = replace( replace(product_name, '70/90',''),'КРЕВЕТКИ','')
		where product_name like '%70/90%' and product_name like '%КРЕВЕТКИ%'
		
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АГАМА'			,@PRODUCER	= 'АГАМА'					,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'КРАСНОЩЕКОВО'		,@PRODUCER	= 'КРАСНОЩЕКОВО'			,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ПИЩЕВЫЕ ЖИРЫ'	,@PROD_CATEGORY='МАСЛО'					,@PROD_SUBCATEGORY='СЛИВОЧНОЕ' ---
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ФРУКТОВИЧИ'		,@PRODUCER	= 'КОНДИТЕРСКИЙ КОМБИНАТ ОЗЕРСКИЙ СУВЕНИР',	@PROD_TYPE ='ПРОДУКТЫ',@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',@PROD_CATEGORY='КОНФЕТЫ'	,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ОРЕХОВИЧИ'		,@PRODUCER	= 'КОНДИТЕРСКИЙ КОМБИНАТ ОЗЕРСКИЙ СУВЕНИР',	@PROD_TYPE ='ПРОДУКТЫ',@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',@PROD_CATEGORY='КОНФЕТЫ'	,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ВИЧИ'				,@PRODUCER	= 'ВИЧИ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='КРАБОВОЕ МЯСО'			,@PROD_SUBCATEGORY='' 
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ВИЧИ'				,@PRODUCER	= 'ВИЧИ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='КРАБОВЫЕ ПАЛОЧКИ'		,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ВИЧИ'				,@PRODUCER	= 'ВИЧИ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY='КРАБОВОЕ ПАЛОЧКИ'		,@PROD_SUBCATEGORY=''  -- убрать дубль  крабовое крабовые
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ВИЧИ'				,@PRODUCER	= 'ВИЧИ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'	,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'НЕСТЛЕ'			,@PRODUCER	= 'НЕСТЛЕ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'	,@PROD_CATEGORY='МОРОЖЕНОЕ'				,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'НЕСТЛЕ'			,@PRODUCER	= 'НЕСТЛЕ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='БАКАЛЕЯ'			,@PROD_CATEGORY='ГОТ. ЗАВТРАК'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'НЕСТЛЕ'			,@PRODUCER	= 'НЕСТЛЕ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='БАКАЛЕЯ'			,@PROD_CATEGORY='КАША'					,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'НЕСТЛЕ'			,@PRODUCER	= 'НЕСТЛЕ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY='КОНФЕТ'	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'НЕСТЛЕ'			,@PRODUCER	= 'НЕСТЛЕ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ДЕТСКОЕ ПИТАНИЕ'	,@PROD_CATEGORY='НЕСТОЖЕН'				,@PROD_SUBCATEGORY='СМЕСЬ'
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'НЕСТЛЕ'			,@PRODUCER	= 'НЕСТЛЕ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY='ШОКОЛАД'	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'НЕСТЛЕ'			,@PRODUCER	= 'НЕСТЛЕ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY='ШОК.БАТОНЧИК'	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'НЕСТЛЕ'			,@PRODUCER	= 'НЕСТЛЕ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE=''					,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ПВ'				,@PRODUCER	= 'ПВ',						@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ',@PROD_CATEGORY='ПЕЧЕНЬЕ'				,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'БЕЛАРУСЬ'			,@PRODUCER	= 'БЕЛАРУСЬ',				@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'					,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'БЕЛАРУСЬ'			,@PRODUCER	= 'БЕЛАРУСЬ',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE=''								,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'БЕЛЕБЕЙ'			,@PRODUCER	= 'БЕЛЕБЕЙ',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='СЫРЫ'							,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'НОВОСИБИРСКАЯ ШФ'	,@PRODUCER	= 'НОВОСИБИРСКАЯ ШФ',		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ТД НОВОСИБИРСКИЙ'	,@PRODUCER	= 'ТД НОВОСИБИРСКИЙ',		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ОВОЩИ/ЗЕЛЕНЬ'					,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ТК НОВОСИБИРСКИЙ'	,@PRODUCER	= 'ТК НОВОСИБИРСКИЙ',		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ОВОЩИ/ЗЕЛЕНЬ'					,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'НОВОСИБИРСК'		,@PRODUCER	= 'НОВОСИБИРСК',			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ДЕРЕВЕНСКОЕ МОЛОЧКО',@PRODUCER= 'ДЕРЕВЕНСКОЕ МОЛОЧКО',	@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ПИЩЕВЫЕ ЖИРЫ'					,@PROD_CATEGORY='МАСЛО СЛИВОЧНОЕ'		,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ДЕРЕВЕНСКОЕ МОЛОЧКО',@PRODUCER= 'ДЕРЕВЕНСКОЕ МОЛОЧКО',	@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'АРГЕНТИНА'		,@PRODUCER	= 'АРГЕНТИНА',				@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО'							,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АРГЕНТИНА'		,@PRODUCER	= 'АРГЕНТИНА',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE=''								,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АВАНГАРД'			,@PRODUCER	= 'АВАНГАРД',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'				,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING ='ХОРОШЕЕ КАЧЕСТВО, СПРАВЕДЛИВАЯ ЦЕНА',@PRODUCER ='ПК ЛАМА', @PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ'		,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ЭСКИМОС'			,@PRODUCER	= 'ЭСКИМОС',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY='МОРОЖЕНОЕ'				,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'СТИЛЬ ПРОДУКТ'	,@PRODUCER	= 'СТИЛЬ ПРОДУКТ',			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'				,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'СИФУД ФРЭШ'		,@PRODUCER	= 'СИФУД ФРЭШ',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'				,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'СПК'				,@PRODUCER	= 'СПК',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МЯСО/ПТИЦА'						,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ИЧАЛКИ'			,@PRODUCER	= 'ИЧАЛКИ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='СЫРЫ'							,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'УМАЛАТ'			,@PRODUCER	= 'УМАЛАТ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='СЫРЫ'							,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'РУССКОЕ МОРЕ'		,@PRODUCER	= 'РУССКОЕ МОРЕ',			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'				,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'БАЛИ'				,@PRODUCER	= 'БАЛИ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ'		,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'СКТ'				,@PRODUCER	= 'СКТ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МЯСО/ПТИЦА'						,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АЛЬГЕРД'			,@PRODUCER	= 'АЛЬГЕРД',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='СЫРЫ'							,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ТОМСКОЕ МОЛОКО'	,@PRODUCER	= 'ТОМСКОЕ МОЛОКО',			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ПИЩЕВЫЕ ЖИРЫ'					,@PROD_CATEGORY='МАСЛО СЛИВОЧНОЕ'						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ТОМСКОЕ МОЛОКО'	,@PRODUCER	= 'ТОМСКОЕ МОЛОКО',			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ТОМСКИЕ МЕЛЬНИЦЫ'	,@PRODUCER	= 'ТОМСКИЕ МЕЛЬНИЦЫ',		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='БАКАЛЕЯ'						,@PROD_CATEGORY='МУКА'					,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ТОМСКИЕ ПЕКАРНИ'	,@PRODUCER	= 'ТОМСКИЕ ПЕКАРНИ',		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY='ПЕЧЕНЬЕ'				,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ТОМСКИЙ КОНДИТЕР'	,@PRODUCER	= 'ТОМСКИЙ КОНДИТЕР',		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY='ПЕЧЕНЬЕ'				,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ТОМСКИЙ КОНДИТЕР'	,@PRODUCER	= 'ТОМСКИЙ КОНДИТЕР',		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY='ПЕЧЕНЬЕ'				,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ТОМСКОЕ БИСТРО'	,@PRODUCER	= 'ТОМСКОЕ БИСТРО',			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ'		,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ОША'				,@PRODUCER	= 'ОША',					@PROD_TYPE ='АЛГОКОЛЬ'	,@PROD_SUBTYPE='ПИВО'							,@PROD_CATEGORY='РОССИЯ'				,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ВОСТОЧНЫЙ КАРАВАН',@PRODUCER	= 'ВОСТОЧНЫЙ КАРАВАН',		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ'		,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ПР-ВО АПФ ЖЕМЧУЖИНА СТАВРОПОЛЬЯ' ,@PRODUCER= 'ПР-ВО АПФ ЖЕМЧУЖИНА СТАВРОПОЛЬЯ',@PROD_TYPE ='АЛКОГОЛЬ',@PROD_SUBTYPE='КОНЬЯК'	,@PROD_CATEGORY='РОССИЯ'				,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'КРАСКИ ЛЕТА'		,@PRODUCER	= 'КРАСКИ ЛЕТА',			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ОВОЩИ/ЗЕЛЕНЬ'					,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'САНТА БРЕМОР'		,@PRODUCER	= 'САНТА БРЕМОР',			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'				,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'АЙС СТАР'			,@PRODUCER	= 'АЙС СТАР',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ФРУКТЫ/ЯГОДЫ'					,@PROD_CATEGORY='СМОРОДИНА'				,@PROD_SUBCATEGORY='ЗАМОРОЗКА' ---
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'АЙС СТАР'			,@PRODUCER	= 'АЙС СТАР',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ОРЕХИ/ГРИБЫ'					,@PROD_CATEGORY='ШАМПИНЬОНЫ'			,@PROD_SUBCATEGORY='ЗАМОРОЗКА' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АЙС СТАР'			,@PRODUCER	= 'АЙС СТАР',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ОВОЩИ/ЗЕЛЕНЬ'					,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='ЗАМОРОЗКА' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АВАЧА'			,@PRODUCER	= 'АВАЧА',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'				,@PROD_CATEGORY='ИКРА'					,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ПРОДУКТЫ ОТ МАСЛОВОЙ',@PRODUCER= 'ПРОДУКТЫ ОТ МАСЛОВОЙ',	@PROD_TYPE ='ПРОДУКТЫ',@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'РУССКИЙ ХОЛОД'	,@PRODUCER	= 'РУССКИЙ ХОЛОД',			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY='МОРОЖЕНОЕ'				,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АНГАРИЯ'			,@PRODUCER	= 'АНГАРИЯ',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY='МОРОЖЕНОЕ'				,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'СЛАВИЦА'			,@PRODUCER	= 'СЛАВИЦА',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY='МОРОЖЕНОЕ'				,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'СЛАВИЦА'			,@PRODUCER	= 'СЛАВИЦА',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ВОДА'							,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'МИЛКОМ'			,@PRODUCER	= 'МИЛКОМ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY='МОРОЖЕНОЕ'				,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'МАРС'				,@PRODUCER	= 'МАРС',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY='МОРОЖЕНОЕ'				,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'МАРСИАНКА'		,@PRODUCER	= 'МАРСИАНКА',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY='КОНФЕТЫ'				,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'МАРСЕЛЕЦ'			,@PRODUCER	= 'МАРСЕЛЕЦ',				@PROD_TYPE ='ТОВАРЫ'	,@PROD_SUBTYPE='КОСМЕТИКА/ГИГИЕНА'				,@PROD_CATEGORY='ГЕЛЬ ДЛЯ ДУША'			,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = ' МАРС '			,@PRODUCER	= 'МАРС',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY='ШОК.БАТОНЧИК'			,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АЛЬТЕРВЕСТ'		,@PRODUCER	= 'АЛЬТЕРВЕСТ',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY='МОРОЖЕНОЕ'				,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'КАМПИНА'			,@PRODUCER	= 'КАМПИНА',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		--EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ГОСПИРОН'			,@PRODUCER	= 'ГОСПИРОН',				@PROD_TYPE =''			,@PROD_SUBTYPE=''								,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		--EXEC MULTIPLE_UPDATE				@SUBSTRING = 'СЕРВИССНАБ'		,@PRODUCER	= 'СЕРВИССНАБ',				@PROD_TYPE =''			,@PROD_SUBTYPE=''								,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АТЛАНТА-СЕРВИС'	,@PRODUCER	= 'АТЛАНТА-СЕРВИС',			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МЯСО/ПТИЦА'						,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ХИНТАЙ'			,@PRODUCER	= 'ХИНТАЙ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ОРЕХИ/ГРИБЫ'					,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ДОБРЫЕ ТРАДИЦИИ'	,@PRODUCER	= 'ДОБРЫЕ ТРАДИЦИИ',		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='ЗАМОРОЗКА' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING='РУССКАЯ РЫБНАЯ КОМПАНИЯ',@PRODUCER='РУССКАЯ РЫБНАЯ КОМПАНИЯ',@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'				,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ПОЛТИШОК'			,@PRODUCER	= 'ПОЛТИШОК',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'				,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ТД ОЙСТЕР'		,@PRODUCER	= 'ТД ОЙСТЕР',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'				,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ДМЗ'				,@PRODUCER	= 'ДМЗ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY='СЫРОК ТВОРОЖНЫЙ'		,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ЛИДЕР'			,@PRODUCER	= 'ЛИДЕР',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ХЛЕБОБУЛОЧНЫЕ ИЗДЕЛИЯ/ВЫПЕЧКА'	,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ВКУС ВОСТОКА'		,@PRODUCER	= 'ВКУС ВОСТОКА',			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ'		,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'БЕЛОВЕЖСКИЕ СЫРЫ'	,@PRODUCER	= 'БЕЛОВЕЖСКИЕ СЫРЫ',		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='СЫРЫ'							,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'РУССКИЙХОЛОД'		,@PRODUCER	= 'РУССКИЙ ХОЛОД',			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY='МОРОЖЕНОЕ'				,@PROD_SUBCATEGORY='ЭСКИМО' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ИП ПИВИКОВ'		,@PRODUCER	= 'ИП ПИВИКОВ',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='РЫБА/РЫБОПРОДУКТЫ'				,@PROD_CATEGORY='ПОЛУФАБРИКАТ ИЗ ЩУКИ'	,@PROD_SUBCATEGORY='ЗАМОРОЗКА' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING='НЕ ТОЛЬКО ДЛЯ СВОИХ',@PRODUCER	= 'НЕ ТОЛЬКО ДЛЯ СВОИХ',	@PROD_TYPE =''			,@PROD_SUBTYPE=''								,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ПОЛЯРИ'			,@PRODUCER	= 'ПОЛЯРИС',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY='МОРОЖЕНОЕ'				,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ЕЛАНЬ'			,@PRODUCER	= 'ЕЛАНЬ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='СЫРЫ'							,@PROD_CATEGORY='СЫР'					,@PROD_SUBCATEGORY='СЫР ПЛАВЛЕННЫЙ' ---
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ИНСКОЕ'			,@PRODUCER	= 'ИНСКОЕ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ЯЙЦА'							,@PROD_CATEGORY='ЯЙЦО'						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'НАЦИОНАЛЬНЫЙ СТАНДАРТ',@PRODUCER= 'НАЦИОНАЛЬНЫЙ СТАНДАРТ',@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ЯЙЦА'						,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'MLEKARA SABAC'	,@PRODUCER	= 'MLEKARA SABAC',			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='СЫРЫ'							,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ЯРКОЕ УТРО'		,@PRODUCER	= 'ЯРКОЕ УТРО',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ЯЙЦА'							,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ЛИБЕРО'			,@PRODUCER	= 'ЛИБЕРО',					@PROD_TYPE ='ТОВАРЫ'	,@PROD_SUBTYPE='ТОВАРЫ ДЛЯ ДЕТЕЙ'				,@PROD_CATEGORY='ПОДГУЗНИКИ'	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ПАМПЕРС'			,@PRODUCER	= 'ПАМПЕРС',				@PROD_TYPE ='ТОВАРЫ'	,@PROD_SUBTYPE='ТОВАРЫ ДЛЯ ДЕТЕЙ'				,@PROD_CATEGORY='ПОДГУЗНИКИ'	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ЖИЛЛЕТ'			,@PRODUCER	= 'ЖИЛЛЕТ',					@PROD_TYPE ='ТОВАРЫ'	,@PROD_SUBTYPE='КОСМЕТИКА/ГИГИЕНА'				,@PROD_CATEGORY=''				,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING ='МЕРЦАЮЩИЙ КАРАНДАШ',@PRODUCER	= 'МЕРЦАЮЩИЙ КАРАНДАШ',		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='БАКАЛЕЯ'						,@PROD_CATEGORY='ПИЩЕВОЙ КРАСИТЕЛЬ'	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = ' ТЕМА'			,@PRODUCER	= 'ТЁМА'			,		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ДЕТСКОЕ ПИТАНИЕ'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = ' ТЁМА'			,@PRODUCER	= 'ТЁМА'			,		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ДЕТСКОЕ ПИТАНИЕ'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'БИО-БАЛАНС'		,@PRODUCER	= 'ЮНИПАК'			,		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АКТИВИЯ'			,@PRODUCER	= 'ДАНОН',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АКТИВИА'			,@PRODUCER	= 'ДАНОН',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АЛПЕН ГОЛД'		,@PRODUCER	= 'АЛЬПЕН ГОЛД',			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АЛЬПЕН ГОЛД'		,@PRODUCER	= 'АЛЬПЕН ГОЛД',			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ФРУТТИС'			,@PRODUCER	= 'ФРУТТИС'	,				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ДАРПРОДУКТ'		,@PRODUCER	= 'ДАРПРОДУКТ'	,			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY='ГЛАЗИРОВАНЫЙ СЫРОК'	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'РУСЬХЛЕБ'			,@PRODUCER	= 'РУСЬХЛЕБ'			,	@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ХЛЕБОБУЛОЧНЫЕ ИЗДЕЛИЯ/ВЫПЕЧКА'	,@PROD_CATEGORY='СОЛОМКА'	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ХЛЕБНЫЙ СПАС'		,@PRODUCER	= 'ХЛЕБНЫЙ СПАС'		,	@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ХЛЕБОБУЛОЧНЫЕ ИЗДЕЛИЯ/ВЫПЕЧКА'	,@PROD_CATEGORY='ПЕЧЕНЬЕ'	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ТАЙМЛИ'			,@PRODUCER	= 'ТАЙМЛИ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ПИТАНИЕ ДЛЯ ЖИВОТНЫХ'	,@PROD_CATEGORY='КОРМ'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'ТАЙМЛИ'			,@PRODUCER	= 'ТАЙМЛИ',					@PROD_TYPE ='ТОВАРЫ'	,@PROD_SUBTYPE='ТОВАРЫ ДЛЯ ЖИВОТНЫХ'	,@PROD_CATEGORY='НАПОЛНИТЕЛЬ'	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = ' ТАЙМС'			,@PRODUCER	= 'ТАЙМС'			,		@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИСКИ'					,@PROD_CATEGORY='США'	,@PROD_SUBCATEGORY='БУРБОН' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = ' ТАЙМ'			,@PRODUCER	= 'ТАЙМ'			,		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = '/ТАЙМ'			,@PRODUCER	= 'ТАЙМ'			,		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'CHAMMY'			,@PRODUCER	= 'CHAMMY',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ПИТАНИЕ ДЛЯ ЖИВОТНЫХ'	,@PROD_CATEGORY='КОРМ'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ВИСКАС'			,@PRODUCER	= 'ВИСКАС',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ПИТАНИЕ ДЛЯ ЖИВОТНЫХ'	,@PROD_CATEGORY='КОРМ'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'КИТЕКЕТ'			,@PRODUCER	= 'КИТЕКЕТ',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ПИТАНИЕ ДЛЯ ЖИВОТНЫХ'	,@PROD_CATEGORY='КОРМ'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'КИТИКЭТ'			,@PRODUCER	= 'КИТЕКЕТ',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ПИТАНИЕ ДЛЯ ЖИВОТНЫХ'	,@PROD_CATEGORY='КОРМ'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'КИТЕКЭТ'			,@PRODUCER	= 'КИТЕКЕТ',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ПИТАНИЕ ДЛЯ ЖИВОТНЫХ'	,@PROD_CATEGORY='КОРМ'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ФЕЛИКС'			,@PRODUCER	= 'ФЕЛИКС',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ПИТАНИЕ ДЛЯ ЖИВОТНЫХ'	,@PROD_CATEGORY='КОРМ'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ФРИСКИС'			,@PRODUCER	= 'ФРИСКИС',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ПИТАНИЕ ДЛЯ ЖИВОТНЫХ'	,@PROD_CATEGORY='КОРМ'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ПУРИНА ВАН'		,@PRODUCER	= 'ПУРИНА ВАН',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ПИТАНИЕ ДЛЯ ЖИВОТНЫХ'	,@PROD_CATEGORY='КОРМ'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ПЕДИГРИ'			,@PRODUCER	= 'ПЕДИГРИ',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ПИТАНИЕ ДЛЯ ЖИВОТНЫХ'	,@PROD_CATEGORY='КОРМ'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ПЕДИГИ'			,@PRODUCER	= 'ПЕДИГИ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ПИТАНИЕ ДЛЯ ЖИВОТНЫХ'	,@PROD_CATEGORY='КОРМ'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'БИГ-БОН'			,@PRODUCER	= 'БИГ-БОН'			,		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'СМАЙК'			,@PRODUCER	= 'СМАЙК'			,		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'РАДОСТИ КУХНИ'	,@PRODUCER	= 'РАДОСТИ КУХНИ'	,		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ',@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'БИРКА'			,@PRODUCER	= 'БИРКА',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ОРЕХИ/ГРИБЫ'					,@PROD_CATEGORY='ФИСТАШКИ'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'БИРКА'			,@PRODUCER	= 'БИРКА',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ОРЕХИ/ГРИБЫ'					,@PROD_CATEGORY='АРАХИС'			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'БИРКА'			,@PRODUCER	= 'БИРКА',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ'		,@PROD_CATEGORY='ЗАКУСКА'	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'БИРКА'			,@PRODUCER	= 'БИРКА',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ'		,@PROD_CATEGORY='ГРЕНКИ'	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'МОСКИТОЛ'			,@PRODUCER	= 'МОСКИТОЛ',				@PROD_TYPE ='ТОВАРЫ'	,@PROD_SUBTYPE='ТОВАРЫ ДЛЯ ДОМА И ДАЧИ'			,@PROD_CATEGORY=''			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING = 'РЕЙД'				,@PRODUCER	= 'РЕЙД',					@PROD_TYPE ='ТОВАРЫ'	,@PROD_SUBTYPE='ТОВАРЫ ДЛЯ ДОМА И ДАЧИ'			,@PROD_CATEGORY=''			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'КДВ'				,@PRODUCER	= 'КДВ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = '7ЖЕЛАНИЙ'			,@PRODUCER	= '7ЖЕЛАНИЙ',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ДАНОН'			,@PRODUCER	= 'ДАНОН'	,				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ФРУТОНЯНЯ'		,@PRODUCER	= 'ФРУТОНЯНЯ'	,			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ДЕТСКОЕ ПИТАНИЕ'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ВКУСНОФФ'			,@PRODUCER	= 'ВКУСНОФФ'			,	@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY='ПЕЧЕНЬЕ'	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'РУССКАРТ'			,@PRODUCER	= 'РУССКАРТ'		   ,	@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY='КЕКС'		,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ХБК'				,@PRODUCER	= 'ХБК'					,	@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY=''			,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'СЕЛО ПАСТУШКИНО'	,@PRODUCER	= 'СЕЛО ПАСТУШКИНО'		,	@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY='ВАФЛИ'		,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'СПЕЛЁНОК'			,@PRODUCER	= 'СПЕЛЁНОК'	,			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ДЕТСКОЕ ПИТАНИЕ'				,@PROD_CATEGORY=''			,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'МАТИКА'			,@PRODUCER	= 'МАТИКА'		   ,		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY='ПЕЧЕНЬЕ'	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'МИЛКА'			,@PRODUCER	= 'МИЛКА',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'АГУША'			,@PRODUCER	= 'АГУША'	,				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ДЕТСКОЕ ПИТАНИЕ'				,@PROD_CATEGORY=''			,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'БАБУШКИНО ЛУКОШКО',@PRODUCER	= 'БАБУШКИНО ЛУКОШКО',		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ДЕТСКОЕ ПИТАНИЕ'				,@PROD_CATEGORY=''			,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'САМИ С УСАМИ'		,@PRODUCER	= 'САМИ С УСАМИ',			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='ДЕТСКОЕ ПИТАНИЕ'				,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ДАНИССИМО'		,@PRODUCER	= 'ДАНИССИМО'	,			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'СКОМОРОШКА'		,@PRODUCER	= 'СКОМОРОШКА'	,			@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'КЛИНОК'			,@PRODUCER	= 'КЛИНОК'	,				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МОЛОЧНЫЕ ПРОДУКТЫ'				,@PROD_CATEGORY='ТВОРОГ'				,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ХОХЛАНД'			,@PRODUCER	= 'ХОХЛАНД',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='СЫРЫ'							,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ВИОЛЕТТА'			,@PRODUCER	= 'ВИОЛЕТТА',				@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='СЫРЫ'							,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'CHEESE'			,@PRODUCER	= 'CHEESE',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='СЫРЫ'							,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'MAG'				,@PRODUCER	= 'MAG',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='СЫРЫ'							,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ТЕХНОПАРК'		,@PRODUCER	= 'ТЕХНОПАРК',				@PROD_TYPE ='ТОВАРЫ'	,@PROD_SUBTYPE='ТОВАРЫ ДЛЯ ДЕТЕЙ'				,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'КИНДЕР'			,@PRODUCER	= 'КИНДЕР',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ЭВРИКА'			,@PRODUCER	= 'ЭВРИКА',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'МАГГИ'			,@PRODUCER	= 'МАГГИ',					@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КУЛИНАРИЯ/ПОЛУФАБРИКАТЫ'		,@PROD_CATEGORY=''						,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING ='РОДНОЕ ПОДВОРЬЕ'	,@PRODUCER	= 'РОДНОЕ ПОДВОРЬЕ',		@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='МЯСО/ПТИЦА'						,@PROD_CATEGORY='КУРИЦА'				,@PROD_SUBCATEGORY=''
	
		--select * from step0 where product_name like '%БИРКА%'
		--без указания производителя, тип продукта
		EXEC MULTIPLE_UPDATE			   @SUBSTRING = 'ШОКОЛАДНОЕ ЯЙЦО'	,@PRODUCER	= '',						@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='КОНДИТЕРСКИЕ ИЗДЕЛИЯ/СЛАДОСТИ'	,@PROD_CATEGORY='ШОКОЛАДНОЕ ЯЙЦО'	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE			   @SUBSTRING = 'LOVELY DOGS'		,@PRODUCER	= '',						@PROD_TYPE ='ТОВАРЫ'	,@PROD_SUBTYPE='ТОВАРЫ ДЛЯ ДЕТЕЙ'				,@PROD_CATEGORY='ЯЙЦО С ИГРУШКОЙ'	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE			   @SUBSTRING = 'ИГРУШКА-СЮРПРИЗ'	,@PRODUCER	= '',						@PROD_TYPE ='ТОВАРЫ'	,@PROD_SUBTYPE='ТОВАРЫ ДЛЯ ДЕТЕЙ'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='' ---
		EXEC MULTIPLE_UPDATE			   @SUBSTRING = 'КРУЖКА '			,@PRODUCER	= '',						@PROD_TYPE ='ТОВАРЫ'	,@PROD_SUBTYPE='ТОВАРЫ ДЛЯ ДОМА И ДАЧИ'				,@PROD_CATEGORY='ПОСУДА'	,@PROD_SUBCATEGORY='КРУЖКА' ---
		
		/* конец атавистического участка */
		-------------------------param1_pricefor----------------------------------------------------------
		-------------------------param1_pricefor----------------------------------------------------------
		-------------------------param1_pricefor----------------------------------------------------------
		UPDATE step0
		SET product_name=replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(product_name,	
										'ЦЕНЫ ЗА КГ' , 'ЦЕНА ЗА КГ' ),'ЦЕНА ЗА 1КГ' , 'ЦЕНА ЗА КГ' ),', КГ','ЦЕНА ЗА КГ'),', ЦЕНА ЗА КГ','ЦЕНА ЗА КГ'),
										'ЦЕНА ЗА 1ШТ','ЦЕНА ЗА ШТ'),'ЛТД/ФЛОРАЛ/ШТ','ЛТД/ФЛОРАЛ/ЦЕНА ЗА ШТ'),', ЦЕНА ЗА ШТ','ЦЕНА ЗА ШТ'),
										'ЦЕНА ЗА УПАКОВКУ','ЦЕНА ЗА УП'),'ЦЕНА ЗА УПАК','ЦЕНА ЗА УП'),
										'ЦЕНА ЗА 1Л','ЦЕНА ЗА Л')

		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ЦЕНА ЗА УП'
		UPDATE step0 SET param1_pricefor=temp_param where temp_param!=''

		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ЦЕНА ЗА КГ'
		UPDATE step0 SET param1_pricefor=temp_param where temp_param!=''

		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ЦЕНА ЗА ШТ'
		UPDATE step0 SET param1_pricefor=temp_param where temp_param!=''

		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ЦЕНА ЗА Л'
		UPDATE step0 SET param1_pricefor=temp_param where temp_param!=''

		

		UPDATE step0
		SET product_name = replace(replace(replace(replace(replace(product_name,'(',' ( '),')',' ) '),'/',' / '),',ВЕС',', ВЕС') ,'ВЕС,','ВЕС ,')

		UPDATE step0
		SET product_name = replace(product_name,'ВЕС /',' ВЕС /')
		WHERE product_name like '%[0-9]ВЕС /%'

		/* убираю лишние пробелы и пробелы в конце строки*/	
		UPDATE step0
		SET product_name = rtrim(replace(product_name,'  ',' '))

		EXEC EXTRACT_SUBSTRING  @SUBSTRING=' ВЕС / СПС'		UPDATE step0 SET param1_ves=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING=' ВЕС / СПУ'		UPDATE step0 SET param1_ves=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING=' ВЕС / СП'		UPDATE step0 SET param1_ves=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING=' ВЕС '			UPDATE step0 SET param1_ves=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING=' СУХ / ВЕС'		UPDATE step0 SET param1_ves=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING=' ВЕС / СПС'		UPDATE step0 SET param1_ves=temp_param where temp_param!=''

		------------------------------param3_gramm------------------------------------------------
		------------------------------param3_gramm------------------------------------------------
		------------------------------param3_gramm------------------------------------------------

		-- обработка исключений для грамм
		UPDATE step0 
		set product_name=replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(product_name,
				'-ЗЕЛЕНЬ100Г','-ЗЕЛЕНЬ 100Г'),'КОКТЕЙЛЬ14Г','КОКТЕЙЛЬ 14Г'),'КОФЕ НЕСКАФЕ ПАК.2Г','КОФЕ НЕСКАФЕ ПАК. 2Г'),'ШОКОЛАД80Г','ШОКОЛАД 80Г'),
				'КЕШЬЮ170Г','КЕШЬЮ 170Г'),'ШОКОЛАД80Г','ШОКОЛАД 80Г'),'ЗЛАК.КОКТЕЙЛЬ100Г','ЗЛАК.КОКТЕЙЛЬ 100Г'),'ПЕТИТ6Г','ПЕТИТ 6Г'),'ЯБЛОКО180Г','ЯБЛОКО 180Г'),
				'АРТ.40Б7B1Г','АРТ.40Б7B1_Г'),'АРТ.80387Г','АРТ.80387_Г'),'ВКУСОВ 4,2Г*5','ВКУСОВ 5*4,2Г'),'ИЗ СЛИВЫ 38Г','ИЗ СЛИВЫ 38Г'),
				'ИЗ ЯБЛОКА 38Г','ИЗ ЯБЛОКА 38Г'),'АРТ.40ЗК7В1Г','АРТ.40ЗК7В1_Г'),'СЛОЙНЫЙ170Г','СЛОЙНЫЙ 170Г'),'ВАР.СГУЩ.32Г','ВАР.СГУЩ. 32Г'),
				'РОЖОК75Г','РОЖОК 75Г'),'ШОК.ГЛАЗ.116Г','ШОК.ГЛАЗ. 116Г'),'ЯГОДЫ80Г','ЯГОДЫ 80Г'),'ЧУДО100Г','ЧУДО 100Г'),'ПЧЕЛ*0,5Г','ПЧЕЛ *0,5Г'),
				'432-318 ГЛ','432-318 _ГЛ'),'48 ГОСТ','48 _ГОСТ'),'ЧЕРНОСЛИВ-ЗЛАКИ370Г','ЧЕРНОСЛИВ-ЗЛАКИ 370Г'),'4 ШТ*65','4ШТ*65')				
				,'ПЕЧЕНЬЕ РОГАЛИК 270Г /','ПЕЧЕНЬЕ РОГАЛИК 270Г /')

		UPDATE step0
		SET param6_tara = 'УП',
			product_name = replace(replace(product_name,'Г В УПАКОВКЕ','Г'),'ГР В УПАКОВКЕ','Г')
		where	product_name like '%[0-9]Г В УПАКОВКЕ%' 
			or product_name like '%[0-9] Г В УПАКОВКЕ%'  
			or product_name like '%[0-9]ГР В УПАКОВКЕ%'  
			or product_name like '%[0-9] ГР В УПАКОВКЕ%'  

		EXEC REPLACE_MEASURE_SIMBOLS  @measure_simbol= 'Г' , @variant1 = 'ГР'
		EXEC EXTRACT_MEASURE @measure_simbol= 'Г' 
		UPDATE step0 SET param3_gramm=temp_param

		-- в param3_special запишем остатки (особенные случаи, которые надо проверить и по результатам проверки обработать как исключения или оставить как есть и не обращать внимания)
		EXEC EXTRACT_MEASURE @measure_simbol= 'Г' 
		UPDATE step0 SET param3_special=temp_param where temp_param!=''

		
		------------------------------param3_kg------------------------------------------------
		------------------------------param3_kg------------------------------------------------
		------------------------------param3_kg------------------------------------------------
		-- обработка исключений для КГ
		UPDATE step0 
		set product_name=replace(replace(replace(replace(product_name,	'0,3,КГ','0,3КГ'),'ДО 90КГ','ДО_90КГ'),'1,2КГ*4','4*1,2КГ'),'1,1КГ*4','4*1,1КГ')

		EXEC EXTRACT_MEASURE @measure_simbol= 'КГ' 
		UPDATE step0 SET param3_kg=temp_param
		where param3_kg not like '%[0-9]-[0-9][0-9]%'   and product_name not like '%ДО_90КГ%'

		EXEC EXTRACT_MEASURE @measure_simbol= 'КГ' 
		UPDATE step0 SET param19_subcategory=temp_param
		where param3_kg  like '%[0-9]-[0-9][0-9]%'   and product_name like '%ДО_90КГ%'

		-- в param3_special запишем остатки (особенные случаи, которые надо проверить и по результатам проверки обработать как исключения или оставить как есть и не обращать внимания)
		EXEC EXTRACT_MEASURE @measure_simbol= 'КГ' 
		UPDATE step0 SET param3_special=temp_param where temp_param!=''

	
		------------------------------param7_percent------------------------------------------------
		------------------------------param7_percent------------------------------------------------
		------------------------------param7_percent------------------------------------------------

		UPDATE step0 set product_name = replace(product_name, '%','percent')

		EXEC EXTRACT_MEASURE @measure_simbol= 'percent' 
		UPDATE step0 SET param7_percent=replace(temp_param,'percent','%')

		--select * from step0 where param7_percent !=''

		-- в param5_special запишем остатки (особенные случаи, которые надо проверить и по результатам проверки обработать как исключения или оставить как есть и не обращать внимания)
		--EXEC EXTRACT_MEASURE @measure_simbol= '%' 

		--select * from step0 where  param7_percent !=''
		------------------------------param8_sm------------------------------------------------
		------------------------------param8_sm------------------------------------------------
		------------------------------param8_sm------------------------------------------------

		UPDATE step0
		set product_name = replace(replace(product_name, ' X ', 'X'), ' Х ', 'Х')

		where product_name like '%[0-9] X [0-9]%'
		OR product_name like '%[0-9] Х [0-9]%'

		EXEC EXTRACT_MEASURE @measure_simbol= 'СМ' 
		UPDATE step0 SET param8_sm=temp_param

		--select * from step0 where param8_sm !=''

		-- в param8_special запишем остатки (особенные случаи, которые надо проверить и по результатам проверки обработать как исключения или оставить как есть и не обращать внимания)
		EXEC EXTRACT_MEASURE @measure_simbol= 'СМ' 
		UPDATE step0 SET param8_special=temp_param where temp_param!=''

		EXEC EXTRACT_MEASURE @measure_simbol= 'М' 
		UPDATE step0 SET param8_m=temp_param

		-- в param8_special запишем остатки (особенные случаи, которые надо проверить и по результатам проверки обработать как исключения или оставить как есть и не обращать внимания)
		EXEC EXTRACT_MEASURE @measure_simbol= 'М' 
		UPDATE step0 SET param8_special=temp_param where temp_param!=''

		--select * from step0 where param8_special !=''
		
		------------------------------param5_items------------------------------------------------
		------------------------------param5_items------------------------------------------------
		------------------------------param5_items------------------------------------------------
		UPDATE step0
		SET product_name = replace(replace(replace(replace(replace(product_name,'ШТ В УПАКОВКЕ','ШТ'),'ШТ.В УП-КЕ','ШТ'),'ШТ. В УП','ШТ'),'ШТ В УП','ШТ'),'В УПАК. 100 ШТУК','100ШТ')
		, param6_tara = 'УП'
		WHERE	product_name like '%ШТ В УПАКОВКЕ%'
			or product_name  like '%ШТ.В УП-КЕ%'
			or product_name  like '%ШТ. В УП%'
			or product_name  like '%ШТ В УП%'
			or product_name  like '%В УПАК. 100 ШТУК%'

		EXEC EXTRACT_MEASURE @measure_simbol= 'ШТ' 
		UPDATE step0 SET param5_items=temp_param

		EXEC EXTRACT_MEASURE @measure_simbol= 'ПАРЫ' 
		UPDATE step0 SET param5_items=temp_param

		--!! проверить, что в ассортимент, что в литры и см. особенно мешки

		-- в param5_special запишем остатки (особенные случаи, которые надо проверить и по результатам проверки обработать как исключения или оставить как есть и не обращать внимания)
		EXEC EXTRACT_MEASURE @measure_simbol= 'ШТ' 
		UPDATE step0 SET param5_special=temp_param where temp_param!=''
		
		------------------------------param6_tara------------------------------------------------
		------------------------------param6_tara------------------------------------------------
		------------------------------param6_tara------------------------------------------------
		update step0
		set product_name = replace(product_name,'ПАКЕТ Д','ПАКЕЕТ Д')
		where product_name like '%ПАКЕТ Д%'

		update step0
		set product_name = replace(product_name,' В / У',' В / УП')
		where product_name like '% В / У %'

		update step0
		set product_name = replace(product_name,'КУВШИН','КУВШИИН')
		where product_name like '%КУВШИН%' and product_name like '%КРЫШ%'

		update step0
		set product_name = replace(product_name,'БУТЫЛКА','БУТЫЫЛКА')
		where product_name like '%БУТЫЛКА%' and product_name like '%ПРОБ%'

		UPDATE step0  SET product_name = replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(product_name
														,'В ПАКЕТЕ','ПАКЕТ')
														,'ВАКУУМ УП-КА','В / УП')
														,'В ПОЛИЭТИЛ.УПАК','П / УП'),'ПЛАСТИК УП-КА','П / УП'),'ПЛАСТ / УП','П / УП'),'ПЛ / УПАК','П / УП'),'ПЛ / УП','П / УП')
														,'БУМАЖ УП-КА','Б / УП'),'БУМ / УПАК','Б / УП'),'БУМ / УП','Б / УП')
														,'КАРТОН УП-КА','К / УП'),'КАРТ / УП','К / УП'),'КАРТ УП','К / УП')
														,'ГАЗ / УП','Г / УП')												
														,'МЯГКАЯ УП-КА','М / УП')
														,'В ПОДАР / УПАКОВКЕ','ПОД / УП'),'ПОД.УП.','ПОД / УП ')
														,'ПЛАСТИК БАНКА','ПЛ / Б')	,'П / Б','ПЛ / Б')
														,'П / ПАК','ПЛ / ПАК')

		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ФЛОУПАК'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ПАКЕТ'			UPDATE step0 SET param6_tara=temp_param where temp_param!=''									
		EXEC EXTRACT_SUBSTRING  @SUBSTRING=' В / УП'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING=' П / УП'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING=' Б / УП'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING=' К / УП'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING=' Г / УП'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING=' М / УП'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING=' ТЕРМО / УП'	UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING=' ПОД / УП'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING=' Д / ПАК'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING=' ПР / П'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		UPDATE step0  SET product_name = replace(replace(replace(replace(replace(product_name,'МИКРО УПАКОВКА',' УП '),'УПАКОВКА',' УП '),' УПАК',' УП '),' УП',' УП '),'1УП','ЦЕНА ЗА УП')
		--EXEC EXTRACT_SUBSTRING  @SUBSTRING=' УП'			UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		-- !!МИКРО УПАКОВКУ ДОБАВИТЬ В АССОРТИМЕНТ ИЛИ ТИП УПАКОВКИ \ ОБЪЕМ
		-- !!ПОДГУЗНИКИ ПАМПЕРС АКТИВ БЭБИ ДРАЙ JUNIOR МИКРО УПАКОВКА / 12
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ПОРЦ / УП'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ЦЕНА ЗА УП'		UPDATE step0 SET param1_pricefor=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING=' УП '			UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='Т / П'			UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='Ж / Б'			UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ПЛ / БУТ'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ПЛ / СТ'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ПЛ / ПАК'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ПЛ / Б'			UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		-- СЧИТАЮ, что ПЛ / Б ==ПЛАСТИК БАНКА
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='КУВШИН'			UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='КЛИНОК'			UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='К / КОР'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='СТ / БУТ'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='СТ / Б '		UPDATE step0 SET param6_tara=temp_param where temp_param!=''

		--- ОБРАБОТАТЬ\ РАЗОБРАТЬСЯ СТ / Б == СТ / БУТ ?

		UPDATE step0
		SET param6_tara = 'СТАКАН',
			product_name=replace(product_name, 'СТАКАН' , '' )
		WHERE	product_name		like '%СТАКАН%'	-- количество вхождений символов 'СТАКАН'
			and	product_name	not	like '%СТАКАНЧИК%'
			and	product_name	not like '%СТАКАН Д/КОКТЕЙЛЯ%'
			and param6_tara =	''

		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ПЭТ'			UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ЛОТОК'			UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ПЛ / ВЕДРО'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ПЛ / КАНИСТРА'  UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ПЛ / КОР'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ВЕДРО'			UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ФОЛЬГА'			UPDATE step0 SET param6_tara=temp_param where temp_param!=''
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='ПОДЛОЖКА'		UPDATE step0 SET param6_tara=temp_param where temp_param!=''

		UPDATE step0
		SET param6_tara =''
		where	param6_tara ='ПАКЕТ'  
		and (product_name_origin like  '%ПАКЕТ ПОДАР%' or product_name_origin like '%ПАКЕТ%МАЙКА%' or product_name_origin like  '%ПАКЕТ%ФАСОВО%')

		/*
		select * from step0 where param3_gramm != ''   --5912
		select * from step0 where param3_kg != ''   --458
		select * from step0 where param3_special != ''   --13

		select * from step0 where param4_litr != ''   --1842
		select * from step0 where param4_special != ''   --3

		select * from step0 where param5_items != ''   --1
		select * from step0 where param5_special != ''   --1

		select sales.*, step0.* from step0 
		left join sales
		on step0.product_id=sales.product_id
		where product_name like '%КГ%'
		*/
		
		------param11_CCC=(ССС) ------------------------------------------------------------------------------------
		------param11_CCC=(ССС) ------------------------------------------------------------------------------------
		------param11_CCC=(ССС) ------------------------------------------------------------------------------------

		update step0 --53
		set product_name = rtrim(replace(replace(product_name,'Р ( ССС )','( ССС )'),'Р ( ССС )','( ССС )')),
		param12='Р'
		where product_name like '%( ССС )%' 

		update step0 --53
		set product_name = rtrim(replace(product_name,'( ССС )','')),
		param11_CCC='(ССС)'
		where product_name like '%( ССС )%' 
		
		------param14_pch_part =ПЧ / ПАРТ---------------------------------------------------------------------------------------
		------param14_pch_part =ПЧ / ПАРТ---------------------------------------------------------------------------------------
		------param14_pch_part =ПЧ / ПАРТ---------------------------------------------------------------------------------------

		update step0 --3
		set param14_pch_part='ПЧ',
		product_name = rtrim(substring(product_name, 1, len(product_name)-2))
		where product_name like '% ПЧ'

		update step0 --2
		set param14_pch_part='ПАРТ',
		product_name = rtrim(substring(product_name, 1, len(product_name)-4))
		where product_name like '% ПАРТ'

		update step0 --6
		set param14_pch_part='БЛОК',
		product_name = rtrim(replace(product_name, '( БЛОК',''))
		where product_name like '%( БЛОК%'

		
		------------------------разбор ВИНА (type,subtype, category,subcategory)---------------------------
		------------------------разбор ВИНА (type,subtype, category,subcategory)---------------------------
		------------------------разбор ВИНА (type,subtype, category,subcategory)---------------------------
		UPDATE step0
		SET 
			product_name =  replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace( replace(replace(replace(replace(replace(replace(replace(replace(replace(product_name, 
												'БЕЛ СУХОЕ ( БРЮТ )','БЕЛ БРЮТ'),
												'БЕЛ / СУХ','БЕЛ СУХ') 
												,'ФРУТКТОВОЕ','ФРУКТОВОЕ'),'П / СЛ ФРУКТОВОЕ ( ПЛОДОВОЕ )','ФРУКТОВОЕ П / СЛ')
												, 'БЕЛОЕ ПОЛУСЛАДКОЕ','БЕЛ П / СЛ'),'БЕЛ ПОЛУСЛАДКОЕ','БЕЛ П / СЛ'),'ПОЛУСЛАДКОЕ БЕЛОЕ','БЕЛ П / СЛ'),'БЕЛЫЙ СТИХ ПОЛУСЛАДКИЙ','БЕЛ П / СЛ')
												,'ПОЛУСЛАДКОЕ КРАСНОЕ','КР П / СЛ')
												, 'КР СЛАДКОЕ','КР СЛ')
												,'БЕЛ СЛАДКОЕ','БЕЛ СЛ'),'БЕЛ СЛАД','БЕЛ СЛ'),'БЕЛОЕ СЛАДКОЕ','БЕЛ СЛ'),'БЕЛЫЙ СТИХ СЛАДКИЙ','БЕЛ СЛ')
												,'РОЗОВОЕ СЛАДКОЕ','РОЗ СЛ'),'РОЗ СЛАДКОЕ','РОЗ СЛ')
												,'БЕЛОЕ','БЕЛ')
												,'КРАСНОЕ','КР')
												,'ПОРТВИН','ПОРТВЕЙН')
												,'SANGRIA','САНГРИЯ')

		UPDATE step0
		SET product_name =  replace(replace(replace(product_name, 'ФРУКТОВОЕ ( ПЛОДОВОЕ )',''),'ФРУКТОВОЕ',''),'П / СЛ','ФРУКТОВОЕ П / СЛ')
		where product_name like '%ФРУКТОВОЕ%'
		and product_name like '%ВИНО%'
		and product_name like '%П / СЛ%'

		/* вот еще большой кусок, который надо бы перенести в таблицу правил product_category_rules. т.е. этот вариант определения полей - тожеатавизм */
	    /* начало атавистического участка */		
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'КР СУХ'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО '				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='КР СУХ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'КР СУХ'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='КР СУХ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'БЕЛ БРЮТ'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ШАМПАНСКОЕ'			,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='БЕЛ БРЮТ'
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'БЕЛ БРЮТ'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='БЕЛ БРЮТ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'БЕЛ СУХ'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='БЕЛ СУХ'
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'БЕЛ СУХ'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='БЕЛ СУХ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'ФРУКТОВОЕ П / СЛ'	,@PRODUCER	= '',@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='ФРУКТОВОЕ П / СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING='ФРУКТОВОЕ ( ПЛОДОВОЕ )',@PRODUCER='',@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='ФРУКТОВОЕ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'КР П / СЛ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП. ГАЗ.'	,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='КР П / СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'КР П / СЛ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='КР П / СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'КР П / СЛ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='КР П / СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'БЕЛ П / СЛ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП. ГАЗ.'	,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='БЕЛ П / СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'БЕЛ П / СЛ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='БЕЛ П / СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'БЕЛ П / СЛ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='БЕЛ П / СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'БЕЛ П / СЛ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ШАМПАНСКОЕ'			,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='БЕЛ П / СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'БЕЛ П / СЛ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП. ГАЗ.'	,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='БЕЛ П / СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'БЕЛ П / СЛ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='БЕЛ П / СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'БЕЛ П / СЛ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='БЕЛ П / СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'БЕЛ П / СЛ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ШАМПАНСКОЕ'			,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='БЕЛ П / СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'КР СЛ'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='КР СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'БЕЛ СЛ'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='БЕЛ СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'РОЗ П / СЛ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП. ГАЗ.'	,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='РОЗ П / СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'РОЗ П / СЛ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='РОЗ П / СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'КР П / СУХ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='КР П / СУХ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'БЕЛ П / СУХ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ШАМПАНСКОЕ'			,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='ШАМПАНСКОЕ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'БЕЛ П / СУХ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='БЕЛ П / СУХ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'РОЗ СУХ'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='РОЗ СУХ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'РОЗ'			,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='РОЗ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'КР ДЕСЕРТНОЕ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИНО'				,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='КР ДЕСЕРТНОЕ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'РОЗ СЛ'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП. ГАЗ.'	,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='РОЗ СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'БЕЛ СЛ'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП. ГАЗ.'	,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='БЕЛ СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'БЕЛ'			,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП. ГАЗ.'	,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='БЕЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'П / СЛ'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП. ГАЗ.'	,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='П / СЛ'
		EXEC MULTIPLE_UPDATE				@SUBSTRING='ВИННЫЙ НАП. ГАЗ.',@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП. ГАЗ.'	,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE_PRODCATEGORY	@SUBSTRING ='БЕЗАЛКОГОЛЬНЫЙ',@PRODUCER	= ''	,@PROD_TYPE ='ПРОДУКТЫ'	,@PROD_SUBTYPE='НАПИТКИ'			,@PROD_CATEGORY='ВИННЫЙ НАП.'	,@PROD_SUBCATEGORY='БЕЗАЛКОГОЛЬНЫЙ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'ВЕРМУТ'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='ВЕРМУТ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'САНГРИЯ'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='САНГРИЯ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'МОХИТО'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='МОХИТО'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'ГЛИНТВЕЙН'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='ГЛИНТВЕЙН'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'ПОРТВЕЙН'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='ПОРТВЕЙН'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'КАГОР'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='КАГОР'
		--EXEC MULTIPLE_UPDATE_PRODSUBTYPE  @SUBSTRING = 'БЕЛ'			,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='БЕЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'КР СЛ'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='КР СЛ'
		EXEC MULTIPLE_UPDATE_PRODSUBTYPE	@SUBSTRING = 'КР ДЕС'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='КР ДЕС'
		--EXEC MULTIPLE_UPDATE_PRODSUBTYPE  @SUBSTRING = 'КР'			,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY='ВЕРМУТ'
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ВИННЫЙ НАП.'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'	,@PROD_SUBTYPE='ВИННЫЙ НАП.'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY=''
		---!!ДОДЕЛАТЬ ПО ВИНУ : ПРОИЗВОДИТЕЛЯ, СТРАНУ
		--далее пока просто определяю тип и подтип АЛГОКОЛЯ
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ВЕРМУТ'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'		,@PROD_SUBTYPE='ВЕРМУТ'			,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'КОНЬЯК'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'		,@PROD_SUBTYPE='КОНЬЯК'			,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ВОДКА'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'		,@PROD_SUBTYPE='ВОДКА'			,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'НАСТОЙКА'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'		,@PROD_SUBTYPE='НАСТОЙКА'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'НАП.СПИРТ.'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'		,@PROD_SUBTYPE='НАП.СПИРТ.'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ВИСКИ'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'		,@PROD_SUBTYPE='ВИСКИ'			,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ПИВО'			,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'		,@PROD_SUBTYPE='ПИВО'			,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'ПИВНОЙ НАП.'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'		,@PROD_SUBTYPE='ПИВО'			,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'УССУРИЙСКИЙ'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'		,@PROD_SUBTYPE='УССУРИЙСКИЙ БАЛЬЗАМ' ,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'БУГУЛЬМА'		,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'		,@PROD_SUBTYPE='БУГУЛЬМА'		,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'С / АЛК.НАП.'	,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'		,@PROD_SUBTYPE='С / АЛК.НАП.'	,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY=''
		EXEC MULTIPLE_UPDATE				@SUBSTRING = 'СИДР'			,@PRODUCER	= ''	,@PROD_TYPE ='АЛКОГОЛЬ'		,@PROD_SUBTYPE='СИДР'			,@PROD_CATEGORY=''	,@PROD_SUBCATEGORY=''
		/* конец атавистического участка */
		
		--select * from step0 where product_name like '%ПИВО%' and param17_subtype ='' and product_name like '%КРУЖКА%'
		-- для 'КРУЖКА ДЛЯ ПИВА' сменить категорию на ТОВАР ПОСУДА или ТОВАРЫ ДЛЯ ДОМА

		------------------------------param4_litr------------------------------------------------
		------------------------------param4_litr------------------------------------------------
		------------------------------param4_litr------------------------------------------------

		update step0  set product_name = replace(replace(replace(replace(replace(product_name, 'Л ', 'ЛИСТ '), '18Л,', '18ЛИСТОВ'), '18Л', '18ЛИСТОВ'), 'Л,', 'ЛИСТ '), 'Л.', 'ЛИСТ ')
		where	( product_name like '%[0-9]Л%' or product_name like '%[0-9] Л%' )
				and (product_name like '%БУМАГ%' or product_name like '%ТЕТРАДЬ%' or product_name like '%КАРТОН%' or product_name like '%АЛЬБОМ%' or product_name like '%САЛФЕТК%' or product_name like '%КАЛЕНДАРЬ%' 
					 or product_name like '%ЕЖЕДНЕВНИК%' or product_name like '%БЛОКНОТ%' or product_name like '%БЛОК ДЛЯ ЗАП%' or product_name like '%КНИЖКА%' or product_name like '%КНИГА%')

		update step0  set product_name = replace(product_name, 'Л ', 'ЛИТРОВ ')
		where product_name like '%[0-9]Л %' 	and ( product_name like '%КАНИСТРА%'  
													or (product_name like '%КАСТРЮЛЯ%' and product_name not like '%ПЕЛЬМЕНИ%') 
													or product_name like '%МИСКА-САЛАТНИЦА%'
													or product_name like '%КОНТЕЙНЕР%'
													or product_name like '%ГОРШОК ДЛЯ РАСТЕНИЙ%'
													or product_name like '%ЧАЙНИК%'
													or product_name like '%ЛЕЙКА%')

		update step0  set product_name = replace(replace(product_name, 'Л ', 'ЛИТРОВ '), 'Л+', 'ЛИТРОВ ')
		where ( product_name like '%[0-9]Л%' or product_name like '%[0-9] Л%' ) 	and (product_name like '%БАССЕЙН%'  or product_name like '%КУВШИН-ПОДСТАВКА%' or product_name like '%КУВШИН С КРЫШКОЙ%' or product_name like '%ПАКЕЕТ Д / ЗАМОРАЖИВАНИЯ%')

		update step0  set product_name = replace(product_name, 'Л.', 'ЛИСТОВ  ')
		where product_name like '%[0-9] Л %' 	and product_name like '%ЗАКЛАДКИ-ЯРЛЫЧКИ%' 

		update step0  set product_name = replace(product_name, '100Л', '100ЛАМП')
		where  product_name like '%ГИРЛЯНДА%'  and product_name like '%100Л%' 

		update step0
		set product_name  =replace(replace(replace(replace(product_name,'3ЛЕТ','3_ЛЕТ'),'5ЛЕТ','5_ЛЕТ '),'3 ЛЕТ','3_ЛЕТ'),'5 ЛЕТ','5_ЛЕТ ')

		update step0
		set product_name =replace(replace(replace(replace(product_name,'0,75','0,75Л'),'1,5','1,5Л '),'0,25','0,25Л'),'0,5','0,5Л')
		where 
		(product_name like '%0,75%'  and product_name not like '%0,75Л%' and param16_type = 'АЛКОГОЛЬ')
		or 
		(product_name like '%1,5%'	 and product_name not like '%1,5Л%'  and param16_type = 'АЛКОГОЛЬ')
		or 
		(product_name like '%0,25%'  and product_name not like '%0,25Л%' and param16_type = 'АЛКОГОЛЬ')
		or 
		(product_name like '%0,5%'   and product_name not like '%0,5Л%'  and param16_type = 'АЛКОГОЛЬ')


		UPDATE step0 
		set product_name=replace(replace(product_name,	'Т / П1Л','Т / П 1Л'),'0,75 / 6','0,75Л / 6')

		--ПРОВЕРИТЬ, везде ли заполнены литры в АЛКОГОЛЕ

		EXEC EXTRACT_MEASURE @measure_simbol= 'Л' 
		UPDATE step0 SET param4_litr=temp_param

		-- в param5_special запишем остатки (особенные случаи, которые надо проверить и по результатам проверки обработать как исключения или оставить как есть и не обращать внимания)
		EXEC EXTRACT_MEASURE @measure_simbol= 'Л' 
		UPDATE step0 SET param4_special=temp_param where temp_param!=''
		
		------------------------------param4_ml------------------------------------------------
		------------------------------param4_ml------------------------------------------------
		------------------------------param4_ml------------------------------------------------

		EXEC EXTRACT_MEASURE @measure_simbol= 'МЛ' 
		UPDATE step0 SET param4_ml=temp_param

		-- в param5_special запишем остатки (особенные случаи, которые надо проверить и по результатам проверки обработать как исключения или оставить как есть и не обращать внимания)
		UPDATE STEP0 set product_name = replace(product_name,'+200МЛ+250МЛ','+450МЛ') where product_name like '%+200МЛ+250МЛ%'
		UPDATE STEP0 set product_name = replace(product_name,'+',' +') where param4_ml !=''

		EXEC EXTRACT_MEASURE @measure_simbol= 'МЛ' 
		UPDATE step0 SET param4_special=temp_param where temp_param!=''
		

		------------------------------param10------------------------------------------------
		------------------------------param10------------------------------------------------
		------------------------------param10------------------------------------------------
		---------------- вычленим числа после '/'  ------------------------------------------
		update step0  --1033
		set product_name = substring(product_name,1,len(product_name)-1)
		where product_name like '%[0-9]"' 

		UPDATE step0  --8973
		SET param10_num1 = substring(product_name,len(product_name)- CHARINDEX('/ ',reverse(product_name))+2 ,len(product_name)),
			product_name = substring(product_name, 1, len(product_name)- CHARINDEX('/ ',reverse(product_name)) )
		where	 product_name like '%/ '  -- 2 стр select * from step0 where product_id in (3487,7031)
				OR  product_name like '%/'  -- 2 стр select * from step0 where product_id in (3487,7031)
				OR product_name like '%/ [0-9]' 
				OR product_name like '%/ [0-9][0-9]'  
				OR product_name like '%/ [0-9][0-9][0-9]'  
				OR product_name like '%/ [0-9][0-9][0-9][0-9]'   

		UPDATE step0 SET product_name = rtrim(product_name)
		UPDATE step0   -- 380
		SET param10_num2 = substring(product_name,len(product_name)- CHARINDEX('/ ',reverse(product_name))+2 ,len(product_name)),
			product_name = substring(product_name, 1, len(product_name)- CHARINDEX('/ ',reverse(product_name)) )
		where	 ( product_name like '%/' and product_id not in (8754) )  -- 6 стр      SELECT * FROM products WHERE product_id in (2039,3339,5040,8013, 8754, 9293, 9416)
				OR product_name like '%/ [0-9]' 
				OR product_name like '%/ [0-9][0-9]' 
				OR product_name like '%/ [0-9][0-9][0-9]'  
				OR product_name like '%/ [0-9][0-9][0-9][0-9]'   
				OR product_name like '%/ [0-9][0-9][0-9][0-9][0-9][0-9]'  

		UPDATE step0 SET product_name = rtrim(product_name)
		UPDATE step0   -- 6
		SET param10_num3 = substring(product_name,len(product_name)- CHARINDEX('/ ',reverse(product_name))+2 ,len(product_name)),
			product_name = substring(product_name, 1, len(product_name)- CHARINDEX('/ ',reverse(product_name)) )
		where	( product_name like '%/' and product_id not in (8754) )  -- 3 стр      SELECT * FROM products WHERE product_id in (7865,8754,9150,10893)
				OR  product_name like '%/ [0-9][0-9][0-9]'  -- 3 строк 
		
		UPDATE step0 SET product_name = rtrim(product_name)
		
		--select * from step0 where param4_litr = '' and product_name like '%[0-9]Л%'
		
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='/ 1 '		UPDATE step0	SET param10_num1=temp_param		where temp_param!=''	and param10_num1=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num1
														UPDATE step0	SET param10_num2=temp_param		where temp_param!=''	and param10_num2=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num2						
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='/ 6 '		UPDATE step0	SET param10_num1=temp_param		where temp_param!=''	and param10_num1=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num1
														UPDATE step0	SET param10_num2=temp_param		where temp_param!=''	and param10_num2=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num2				
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='/ 12 '		UPDATE step0	SET param10_num1=temp_param		where temp_param!=''	and param10_num1=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num1
														UPDATE step0	SET param10_num2=temp_param		where temp_param!=''	and param10_num2=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num2				
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='/ 50 '		UPDATE step0	SET param10_num1=temp_param		where temp_param!=''	and param10_num1=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num1
														UPDATE step0	SET param10_num2=temp_param		where temp_param!=''	and param10_num2=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num2				
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='/ 48 '		UPDATE step0	SET param10_num1=temp_param		where temp_param!=''	and param10_num1=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num1
														UPDATE step0	SET param10_num2=temp_param		where temp_param!=''	and param10_num2=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num2				
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='/ 24 '		UPDATE step0	SET param10_num1=temp_param		where temp_param!=''	and param10_num1=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num1
														UPDATE step0	SET param10_num2=temp_param		where temp_param!=''	and param10_num2=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num2				
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='/ 15 '		UPDATE step0	SET param10_num1=temp_param		where temp_param!=''	and param10_num1=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num1
														UPDATE step0	SET param10_num2=temp_param		where temp_param!=''	and param10_num2=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num2				
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='/ 20 ' 		UPDATE step0	SET param10_num1=temp_param		where temp_param!=''	and param10_num1=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num1
														UPDATE step0	SET param10_num2=temp_param		where temp_param!=''	and param10_num2=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num2				
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='/ 40 ' 		UPDATE step0	SET param10_num1=temp_param		where temp_param!=''	and param10_num1=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num1
														UPDATE step0	SET param10_num2=temp_param		where temp_param!=''	and param10_num2=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num2				
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='/ 18 '		UPDATE step0	SET param10_num1=temp_param		where temp_param!=''	and param10_num1=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num1
														UPDATE step0	SET param10_num2=temp_param		where temp_param!=''	and param10_num2=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num2				
		update step0 set product_name = replace(product_name, '/ 36МЕЖ','/ 36 МЕЖ') where product_id in (12138,12140,12147,12151)
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='/ 36 '		UPDATE step0	SET param10_num1=temp_param		where temp_param!=''	and param10_num1=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num1
														UPDATE step0	SET param10_num2=temp_param		where temp_param!=''	and param10_num2=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num2				
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='/ 45 '		UPDATE step0	SET param10_num1=temp_param		where temp_param!=''	and param10_num1=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num1
														UPDATE step0	SET param10_num2=temp_param		where temp_param!=''	and param10_num2=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num2				
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='/ 100 '		UPDATE step0	SET param10_num1=temp_param		where temp_param!=''	and param10_num1=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num1
														UPDATE step0	SET param10_num2=temp_param		where temp_param!=''	and param10_num2=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num2				
		EXEC EXTRACT_SUBSTRING  @SUBSTRING='/ 05 '		UPDATE step0	SET param10_num1=temp_param		where temp_param!=''	and param10_num1=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num1
														UPDATE step0	SET param10_num2=temp_param		where temp_param!=''	and param10_num2=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num2				
														UPDATE step0	SET param10_num3=temp_param		where temp_param!=''	and param10_num3=''
														UPDATE step0	SET temp_param=''				where temp_param=param10_num2				

		UPDATE STEP0 
		SET	param10_num1=trim(replace(param10_num1,'/','')),
			param10_num2=trim(replace(param10_num2,'/','')),
			param10_num3=trim(replace(param10_num3,'/',''))
		where param10_num1!='' or param10_num2!='' or param10_num3!=''

		---------------------------КЛАССИФИКАЦИЯ ПРОДУКТЫ / ТОВАРЫ -----------------------
		---------------------------КЛАССИФИКАЦИЯ ПРОДУКТЫ / ТОВАРЫ -----------------------
		---------------------------КЛАССИФИКАЦИЯ ПРОДУКТЫ / ТОВАРЫ -----------------------
		
		update step0
		set product_name =ltrim(replace(product_name, '!',''))
		where product_name like '!%'
		
-----------------------------------------------------------------------------------------------
		UPDATE step0
			SET 
				step0.param16_type =		CASE WHEN step0.param16_type=''			THEN coalesce(product_category_rules1.product_type,			product_category_rules2.product_type,			product_category_rules11.product_type ,'') ELSE step0.param16_type	END,
				step0.param17_subtype =		CASE WHEN step0.param17_subtype=''		THEN coalesce(product_category_rules1.product_subtype,		product_category_rules2.product_subtype,		product_category_rules11.product_subtype,'') ELSE step0.param17_subtype END,
				step0.param18_category =	CASE WHEN step0.param18_category=''		THEN coalesce(product_category_rules1.product_category,		product_category_rules2.product_category,		product_category_rules11.product_category,'') ELSE	step0.param18_category END ,
				step0.param19_subcategory =	CASE WHEN step0.param19_subcategory=''	THEN coalesce(product_category_rules1.product_subcategory,	product_category_rules2.product_subcategory,	product_category_rules11.product_subcategory,'') ELSE step0.param19_subcategory END ,  
				step0.param15_producer=		CASE WHEN step0.param15_producer=''		THEN coalesce(product_category_rules1.producer,				product_category_rules2.producer,				product_category_rules11.producer,'') ELSE step0.param15_producer	END
			FROM step0 
					LEFT JOIN product_category_rules as product_category_rules1
							ON		step0.product_name_origin like		product_category_rules1.product_name_included
								AND step0.product_name_origin not like product_category_rules1.product_name_excluded
								AND product_category_rules1.step_priority=1
					LEFT JOIN product_category_rules as product_category_rules2
							ON		step0.product_name_origin like		product_category_rules2.product_name_included
								AND step0.product_name_origin not like	product_category_rules2.product_name_excluded
								AND product_category_rules2.step_priority=2
					LEFT JOIN		product_category_rules as product_category_rules11
							ON		step0.product_name_origin like		product_category_rules11.product_name_included
								AND step0.product_name_origin not like	product_category_rules11.product_name_excluded
								AND product_category_rules11.step_priority=11
----------------------------------------------------------------------------------
		--select * from step0 where param17_subtype='' and product_name_origin like '%КВАС%'

	
		---------------------------Преобразование (гр и кг) и (МЛ и Л ) к единому виду, обработка дополнительных исключений-----------------------
		---------------------------Преобразование (гр и кг) и (МЛ и Л ) к единому виду, обработка дополнительных исключений-----------------------
		---------------------------Преобразование (гр и кг) и (МЛ и Л ) к единому виду, обработка дополнительных исключений-----------------------

		UPDATE step0
		SET param3_gramm= '2*85Г',
			param4_ml = '250МЛ'
		WHERE param3_gramm = '250МЛ+2Х85Г'

		DROP TABLE IF EXISTS step1
		SELECT 
			replace(replace(param3_kg,'КГ',''),',','.') as param3_prepared,
			replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(param3_gramm
											,'Г',''),',','.'),'Х','*'),'ШТ','')
											,'230-250','250'),'240-250','250'),'200-250','250'),'200-210','210'),'230-240','240'),'140-185','185'),'150-160','160')
											,'160-250','250'),'220-240','240'),'350-400','400'),'15-21','21'),'90-100','100'),'200-220','220'),'260-330','330')
											,'6ПАК*5','6*5')  as param3G_prepared,
			replace(replace(replace(replace(param4_litr	
											,'Л',''),',','.'),'075','0.75')
											,'1,5-1,75','1,75Л') as param4L_prepared,
			replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(param4_ml	
											,'МЛ',''),',','.'),'МЯТА500','500'),'2Х2','4'),'ВОССТАНОВ.250','250'),'45+72','117'),'ВАС+75','75')
											,'100-120','120'),'370-400','400') ,'240-250','250'),'230-250','250')  as param4ML_prepared,
			replace(replace(param4_special ,'МЛ',''),'+','')as param4S_prepared,
			* 
		INTO step1
		FROM step0 

		DROP TABLE IF EXISTS step2
		SELECT 
			CASE	
				WHEN 	param3_kg != ''		and param3_prepared		like '[0-9]*%'	 			THEN substring(param3_prepared,		1,1) 
				WHEN	param3_gramm != ''	and param3G_prepared	like '[0-9]*%'				THEN substring(param3G_prepared,	1,1) 
				WHEN	param3_gramm != ''	and param3G_prepared	like '[0-9][0-9]*%'			THEN substring(param3G_prepared,	1,2) 
				WHEN	param3_gramm != ''	and param3G_prepared	like '[0-9][0-9][0-9]*%'	THEN substring(param3G_prepared,	1,3)
				ELSE 1
			END as coef,
	
			CASE 
				WHEN	param3_kg != ''		and param3_prepared		like '[0-9]*%'				THEN substring(param3_prepared, 3,len(param3_prepared)) 
				WHEN	param3_kg != ''		and param3_prepared	not like '[0-9]*%'				THEN param3_prepared
				WHEN	param3_gramm != ''	and param3G_prepared	like '*%'					THEN substring(param3G_prepared, 2,len(param3G_prepared)) 
				WHEN	param3_gramm != ''	and param3G_prepared	like '[0-9]*%'				THEN substring(param3G_prepared, 3,len(param3G_prepared)) 
				WHEN	param3_gramm != ''	and param3G_prepared	like '[0-9][0-9]*%'			THEN substring(param3G_prepared, 4,len(param3G_prepared)) 
				WHEN	param3_gramm != ''	and param3G_prepared	like '[0-9][0-9][0-9]*%'	THEN substring(param3G_prepared, 5,len(param3G_prepared)) 
				ELSE	param3G_prepared
			END  as  valueg	,
	
			1 as coefML,
	
			CASE 
				WHEN	param4_litr != ''		THEN param4L_prepared
				WHEN	param4_ml != ''		THEN param4ML_prepared
			END  as  valueML,
	
			CASE 
				WHEN	param7_percent != ''		THEN trim(replace(replace(replace(replace(param7_percent,'%',''),'АЛК.',''),'АЛК',''),',','.'))
			END  as  valuePercent
			,
			CASE 
				WHEN	param10_num1 != ''		THEN trim(replace(param10_num1,'/',''))
				WHEN	param10_num1 = '' and  param10_num2 != ''		THEN trim(replace(param10_num2,'/',''))
				WHEN	param10_num1 = '' and  param10_num2 = ''	and  param10_num3 != ''	THEN trim(replace(param10_num3,'/',''))
			END  as  valueClassNum
			,* 
		INTO step2
		FROM step1 

		
		DROP TABLE IF EXISTS step3
		SELECT 
			TRY_CONVERT(float, coef) as try_convert_coef   --- следать условия, чтобы не получать нули там, где нет значений
			,TRY_CONVERT(float, valueg) as try_convert_valueg
			,TRY_CONVERT(float, coefML) as try_convert_coefML
			,TRY_CONVERT(float, valueML) as try_convert_valueML
			,TRY_CONVERT(float, valuePercent) as try_convert_valuePercent
			,TRY_CONVERT(float, valueClassNum) as try_convert_valueClassNum
			,* 
		INTO step3
		FROM  step2


		DROP TABLE IF EXISTS step4
		SELECT 
			CASE WHEN param3_kg		!= '' THEN try_convert_coef*try_convert_valueg*1000 
				 WHEN param3_gramm	!= '' THEN try_convert_coef*try_convert_valueg
				 WHEN param4_litr	!= '' THEN try_convert_coef*try_convert_valueg*1000 
			END	as gramms,	
			CASE WHEN param4_litr	!= '' THEN try_convert_coefML*try_convert_valueML*1000 
				 WHEN param4_ml		!= '' THEN try_convert_coefML*try_convert_valueML 
			END	as mls,
			try_convert_valuePercent as percents,
			try_convert_valueClassNum as classnum,
			param18_category as product_category,
			*
		INTO step4
		FROM step3
		--обработка дополнительных исключений
		UPDATE step4		SET gramms = gramms+75	WHERE param3_special like  '%+75%'    
		UPDATE step4		SET gramms = gramms+45	WHERE param3_special like  '%+45%'
		UPDATE step4		SET mls = mls+TRY_CONVERT(float, param4S_prepared)     WHERE product_name like  '%НАБОР%'     and param4_special !='' 
		UPDATE step4		SET gramms = 13.6	    WHERE product_name_origin like '%ЖЕВ%РЕЗИНКА%ОРБИТ%30%' and gramms is null
		UPDATE step4		SET gramms = 13			WHERE product_name_origin like '%ЖЕВ%РЕЗИНКА%РИГЛИ%20%' and gramms is null
		UPDATE step4		SET mls = 500			WHERE param17_subtype like 'ПИВО' and param6_tara like 'СТ / БУТ'	and param10_num1 = '20' and mls is null
		UPDATE step4		SET mls = 500			WHERE param17_subtype like 'ПИВО' and param6_tara like 'Ж / Б'		and param10_num1 in ('24','6')	and mls is null
		UPDATE step4		SET mls = 1420			WHERE param17_subtype like 'ПИВО' and param6_tara like 'ПЭТ'			and param10_num1 = '9'	and mls is null and product_name like '%1,42%'
		UPDATE step4		SET mls = 1000			WHERE param17_subtype like 'ПИВО' and param6_tara like 'ПЭТ'		and param10_num1 = '9'	and mls is null and product_name like '% Л%'
		UPDATE step4		SET param16_type = 'ПРОДУКТЫ',
								param17_subtype = 'НАПИТКИ',
								param18_category = 'ПИВО',
								param19_subcategory = 'БЕЗАЛКОГОЛЬНЫЙ'
							WHERE param16_type like 'АЛКОГОЛЬ'  and param17_subtype = 'ПИВО' and product_name like '%Б / АЛК%'

		UPDATE step4		SET gramms =20		WHERE product_name_origin like '%КИНДЕР СЮРПРИЗ%' and  param10_num1='36' and gramms is null
		UPDATE step4		SET gramms =40		WHERE product_name_origin like '%СЫРОК ДАРПРОДУКТ%' and  param10_num1='20'  and gramms is null
		UPDATE step4		SET gramms =26		WHERE product_name_origin like '%СМЕСЬ КНОРР%' and  param10_num1='24' and gramms is null
		UPDATE step4		SET gramms =16		WHERE product_id in ('4549','4568','4567')  -- %3В1 
		UPDATE step4		SET gramms =18		WHERE product_id ='4548' -- %3В1 
		UPDATE step4		SET gramms =20		WHERE product_id ='4550' -- %3В1 

		ALTER TABLE step4 DROP COLUMN try_convert_coef
		ALTER TABLE step4 DROP COLUMN try_convert_valueg
		ALTER TABLE step4 DROP COLUMN coef
		ALTER TABLE step4 DROP COLUMN valueg
		ALTER TABLE step4 DROP COLUMN param3_prepared
		ALTER TABLE step4 DROP COLUMN param3G_prepared
		ALTER TABLE step4 DROP COLUMN try_convert_coefML
		ALTER TABLE step4 DROP COLUMN try_convert_valueML
		ALTER TABLE step4 DROP COLUMN coefML
		ALTER TABLE step4 DROP COLUMN valueML
		ALTER TABLE step4 DROP COLUMN param4L_prepared
		ALTER TABLE step4 DROP COLUMN param4ML_prepared
		ALTER TABLE step4 DROP COLUMN param4S_prepared
		ALTER TABLE step4 DROP COLUMN valuePercent
		ALTER TABLE step4 DROP COLUMN try_convert_valuePercent
		ALTER TABLE step4 DROP COLUMN valueClassNum
		ALTER TABLE step4 DROP COLUMN try_convert_valueClassNum

---Разобрать:
---1." КРЫМ ""КВД КРЫМСКОЕ БЕЛ"" АЛК.9-11percentА, СТОЛОВОЕ
/*  */
--select * from step0 where parse_status =0 --1562

	END
GO

DROP PROCEDURE IF EXISTS ALTER_PRODUCTS
GO
CREATE PROCEDURE ALTER_PRODUCTS
	AS
	BEGIN
		ALTER TABLE products ADD		gramms						float		NULL , 
										 mls						float		NULL , 
										 peacemeal					varchar(32) NULL , 
										 product_type				varchar(32) NULL , 
										 product_subtype			varchar(32) NULL , 
										 product_category			varchar(32) NULL , 
										 percents					float		NULL , 
										 classnum					float		NULL , 
										 tara						varchar(32) NULL , 
										 producer					varchar(60) NULL ;
		
	END
GO
/*
ADD_PARAMETERS_TO_PRODUCTS
процедура добавляет часть распарсенных параметров в таблицу products
будет дополняться по мере дополнения разбора
*/
DROP PROCEDURE IF EXISTS ADD_PARAMETERS_TO_PRODUCTS
GO
CREATE PROCEDURE ADD_PARAMETERS_TO_PRODUCTS
	AS
	BEGIN
				
		UPDATE products
		SET 
			gramms	= (select gramms from step4 where step4.product_id=products.product_id),
			mls		= (select mls from step4 where step4.product_id=products.product_id),
			percents= (select percents from step4 where step4.product_id=products.product_id),
			classnum= (select classnum from step4 where step4.product_id=products.product_id),
			tara	= (select param6_tara from step4 where step4.product_id=products.product_id),
			producer= (select param15_producer from step4 where step4.product_id=products.product_id),
			product_type = (select 	CASE 
										WHEN param16_type = 'АЛКОГОЛЬ' THEN 'ПРОДУКТЫ'
										ELSE param16_type 
									END as product_type 
							from step4 
							where step4.product_id=products.product_id),
			product_subtype = (select 	CASE 
											WHEN param16_type = 'АЛКОГОЛЬ' THEN 'АЛКОГОЛЬ'
											ELSE param17_subtype 
										END as product_subtype 
							from step4 
							where step4.product_id=products.product_id),
			product_category = (select 
									CASE 
										WHEN  param16_type = 'АЛКОГОЛЬ' THEN param17_subtype
										ELSE  param18_category
									END as 	product_category 
								from step4 
								where step4.product_id=products.product_id),
			peacemeal = (select CASE 
									WHEN param1_pricefor	= 'ЦЕНА ЗА КГ'	THEN 'РАЗВЕС'
									WHEN param1_ves			like  '%ВЕС%'	THEN 'РАЗВЕС'
									WHEN param1_pricefor	= 'ЦЕНА ЗА Л'	THEN 'РОЗЛИВ'
								END as peacemeal 
							from step4 
							where step4.product_id=products.product_id)

	END
GO


/*
CALCULATE_STATISTICS  (product_id+store_id)
Процедура рассчитывает статистики (P)по отдельному товару (product_id+store_id) и (S)по категории товаров (product_subtype+store_id):
1. Статистики изменения цены: 
	1.1.среднее абсолютное изменение цены в руб от среднего за всю историю продаж (abs_dec) 
	1.2.среднее относительное изменение цены в % от среднего за всю историю продаж (rel_dev) 
	(ограничения: статистики считаются по price1)
2.Глубина истории продаж  (history_depth)
3.Плотность продаж (сколько единиц товара продается в каждом магазине в день) 
					(s_count. в таблице sales_statistics - в разрезе продуктов, 
					в таблице subtype_statistics_bydate - в разрезе subtype  ) 
	3.b - среднее количество товара\subtype в каждом магазине в день (avg_s_count)
4.Важность товара 
	4.1.процент от выручки оборота среди продаж всех товаров (каждому магазина) (part_of_proceeds) PS
	4.2.процент единиц от объема продаж всех товаров (по каждому магазина)	(part_of_sales) PS

5. Частоту изменения цены для каждого товара. (Число уникальных цен)
	(count_unique_fact_price)	- в расчет включены только цены из фактически загруженных записей 
										с положительным s_count

Создается 4 таблицы:
sales_statistics  
product_id_statistics  
product_subtype_statistics
product_type_statistics
-- (удалено) subtype_statistics_bydate
*/
DROP PROCEDURE IF EXISTS CALCULATE_STATISTICS
GO
CREATE PROCEDURE CALCULATE_STATISTICS
	AS
	BEGIN
		
		DROP TABLE if exists sales_statistics
		SELECT	sales.*,				
				products.product_type,
				products.product_subtype,
				CASE	WHEN s_count >0 
						THEN s_amount/s_count 
				END as fact_price,
				CASE	WHEN time_series_flag=1 
						THEN price1 - avg_product_store_price 
				END	as abs_dev,	/*absolute deviation*/
				
				CASE	WHEN time_series_flag=1 
						THEN ((price1 - avg_product_store_price)/avg_product_store_price)*100 
				END as rel_dev, /*relative deviation*/

				(	select		sum(s2.s_count) 
					from		sales  s2
					where		sales.store_id=s2.store_id 
					group by	s2.store_id
				) as store_sales,

				(	select		sum(s2.s_amount) 
					from		sales s2
					where		sales.store_id=s2.store_id 
					group by	s2.store_id
				) as store_proceeds
		INTO	sales_statistics
		FROM	sales,products
		where	sales.product_id=products.product_id 
		ORDER BY store_id,product_id,s_date		
		
		DROP TABLE if exists product_id_statistics
		SELECT  sales_statistics.store_id,
				sales_statistics.product_id,
				max(sales_statistics.product_type)							as product_type,
				max(sales_statistics.product_subtype)						as product_subtype,
				avg(abs(sales_statistics.abs_dev))							as avg_abs_dev,
				avg(abs(sales_statistics.rel_dev))							as avg_rel_dev,
				min(sales_statistics.min_date)								as min_date,
				max(sales_statistics.max_date)								as max_date,
				count(sales_statistics.time_series_flag)					as history_depth,
				avg(sales_statistics.s_count)								as avg_s_count,
				avg(store_sales)											as store_sales,
				avg(store_proceeds)											as store_proceeds,
				(sum(sales_statistics.s_count)	/ avg(store_sales))*100		as percent_of_sales,
				(sum(sales_statistics.s_amount)	/ avg(store_proceeds))*100	as percent_of_proceeds,				
				count(distinct sales_statistics.fact_price)					as count_unique_fact_price,
				NULL														as screened_attr
		INTO	product_id_statistics
		FROM	sales_statistics
		GROUP BY sales_statistics.store_id, sales_statistics.product_id

		DROP TABLE if exists product_subtype_statistics
		SELECT  sales_statistics.store_id,
				count(distinct product_id)														as count_of_product,
				max(sales_statistics.product_type)												as product_type,
				sales_statistics.product_subtype,
				avg(abs(sales_statistics.abs_dev))												as avg_abs_dev,
				avg(abs(sales_statistics.rel_dev))												as avg_rel_dev,
				min(sales_statistics.min_date)													as min_date,
				max(sales_statistics.max_date)													as max_date,
				DATEDIFF(day,min(sales_statistics.min_date),max(sales_statistics.max_date))		as history_depth,
				avg(sales_statistics.s_count)													as avg_s_count,
				avg(store_sales)																as store_sales,
				avg(store_proceeds)																as store_proceeds,
				(sum(sales_statistics.s_count)	/ avg(store_sales))*100							as percent_of_sales,
				(sum(sales_statistics.s_amount)	/ avg(store_proceeds))*100						as percent_of_proceeds,				
				count(distinct sales_statistics.fact_price)										as count_unique_fact_price,
				NULL																			as screened_attr
		INTO	product_subtype_statistics
		FROM	sales_statistics
		GROUP BY sales_statistics.store_id, sales_statistics.product_subtype


		DROP TABLE if exists product_type_statistics
		SELECT  sales_statistics.store_id,
				count(distinct product_id)														as count_of_product,
				sales_statistics.product_type													as product_type,
				avg(abs(sales_statistics.abs_dev))												as avg_abs_dev,
				avg(abs(sales_statistics.rel_dev))												as avg_rel_dev,
				min(sales_statistics.min_date)													as min_date,
				max(sales_statistics.max_date)													as max_date,
				DATEDIFF(day,min(sales_statistics.min_date),max(sales_statistics.max_date))		as history_depth,
				avg(sales_statistics.s_count)													as avg_s_count,
				avg(store_sales)																as store_sales,
				avg(store_proceeds)																as store_proceeds,
				(sum(sales_statistics.s_count)	/ avg(store_sales))*100							as percent_of_sales,
				(sum(sales_statistics.s_amount)	/ avg(store_proceeds))*100						as percent_of_proceeds,				
				count(distinct sales_statistics.fact_price)										as count_unique_fact_price,
				NULL																			as screened_attr
		INTO	product_type_statistics
		FROM	sales_statistics
		GROUP BY sales_statistics.store_id, sales_statistics.product_type
	


/*
		DROP TABLE if exists product_subtype_statistics_bydate
		SELECT	s_date,
				store_id,
				max(product_type) as product_type,
				product_subtype,
				sum(s_count) as s_count			

		INTO	product_subtype_statistics_bydate
		FROM	sales_statistics
		GROUP BY store_id, product_subtype, s_date
*/
	END
GO


/*
CREATE_ScreeningParameters
Процедура создает таблицу параметров скрининга dbo.ScreeningParameters, куда заносятся пороги фильтрации
*/
DROP PROCEDURE IF EXISTS CREATE_ScreeningParameters
GO
CREATE PROCEDURE CREATE_ScreeningParameters (	
			@min_avg_abs_dev				float = NULL,		@max_avg_abs_dev				float = NULL, 
			@min_avg_rel_dev				float = NULL,		@max_avg_rel_dev				float = NULL, 
			@min_history_depth				float = NULL,		@max_history_depth				float = NULL, 
			@min_avg_s_count				float = NULL,		@max_avg_s_count				float = NULL, 
			@min_percent_of_sales			float = NULL,		@max_percent_of_sales			float = NULL, 
			@min_percent_of_proceeds		float = NULL,		@max_percent_of_proceeds		float = NULL, 
			@min_count_unique_fact_price	float = NULL,		@max_count_unique_fact_price	float = NULL
			)
	AS
	BEGIN

		DROP TABLE if exists ScreeningParameters
		CREATE TABLE ScreeningParameters (		
			column_name		nvarchar(30)	NULL,
			min_value		float			NULL,
			max_value		float			NULL,
			parameter_descr	nvarchar(200)	NULL
		);
		
		INSERT INTO ScreeningParameters (column_name,min_value,max_value,parameter_descr) VALUES 
		('avg_abs_dev',				@min_avg_abs_dev,				@max_avg_abs_dev ,				'Cреднее абсолютное изменение цены в руб от среднего за всю историю продаж'),
		('avg_rel_dev',				@min_avg_rel_dev,				@max_avg_rel_dev ,				'Cреднее относительное изменение цены в % от среднего за всю историю продаж'),
		('history_depth',			@min_history_depth,				@max_history_depth ,			'Глубина истории продаж'),
		('avg_s_count',				@min_avg_s_count,				@max_avg_s_count ,				'Плотность продаж (среднее кол-во в день в каждом магазине)'),
		('percent_of_sales',		@min_percent_of_sales,			@max_percent_of_sales ,			'Важность, процент от выручки оборота продаж магазина'),
		('percent_of_proceeds',		@min_percent_of_proceeds,		@max_percent_of_proceeds ,		'Важность, процент от объема продаж магазина)')	,	
		('count_unique_fact_price', @min_count_unique_fact_price,	@max_count_unique_fact_price ,	'Частота изменения цен')

	END
GO


/*
CREATE_ScreeningParameters
В процедуре генерится динамический запрос для проставления признака screened_attr = 1, для записей, 
удовлетворяющих условиям из таблицы ScreeningParameters в таблице, указанной в параметре @screened_table

Также создается таблица 'screened_' + @screened_table  (-_statistics) только с записями, для которых screened_attr = 1
	Например, если screened_table = 'product_id_statistics', то
	создается таблица screened_product_id

Также создается таблица 'screened_' + @screened_table  - '_statistics)' + '_agg ' 
c комулятивными показателями статистиками плотности и важности 
	Например, если screened_table = 'product_id_statistics', то
	создается таблица screened_product_id_agg
*/
DROP PROCEDURE IF EXISTS ScreenProducts 
GO
CREATE PROCEDURE ScreenProducts (@screened_table nvarchar(50) = 'product_id_statistics')
	AS
	BEGIN		
	---DECLARE @screened_table nvarchar(50)
	---set @screened_table= 'product_id_statistics'
		
		DECLARE @screen_set_sql_0 nvarchar(max)
		set  @screen_set_sql_0 = 'UPDATE	' + @screened_table + '
								SET		screened_attr = NULL'
		EXEC (@screen_set_sql_0 )

		DECLARE @screen_set_sql nvarchar(max)
		set  @screen_set_sql = 'UPDATE	' + @screened_table + '
								SET		screened_attr = 1
								WHERE 1=1 '

		DROP TABLE IF EXISTS temp_param_table
		SELECT column_name, min_value, max_value, row_number() OVER (ORDER BY column_name) as  num_param
		INTO temp_param_table
		FROM	ScreeningParameters 
		WHERE	max_value is not NULL 
				or	min_value is not null

		DECLARE @count_screen_param int
		SET  @count_screen_param = (	SELECT count(*)	FROM temp_param_table 
										WHERE	max_value is not NULL or	min_value is not null	)		

		WHILE @count_screen_param > 0
			BEGIN
				IF ((SELECT min_value from temp_param_table where num_param = @count_screen_param) is not NULL
					and (SELECT max_value from temp_param_table where num_param = @count_screen_param) is not NULL)
					BEGIN
						SET  @screen_set_sql = @screen_set_sql + ' AND ( <VAR1> >= <VAR2> AND <VAR1> <= <VAR3> )' 
						SET  @screen_set_sql = replace(@screen_set_sql, '<VAR1>', (SELECT column_name from temp_param_table where num_param = @count_screen_param))
						SET  @screen_set_sql = replace(@screen_set_sql, '<VAR2>', (SELECT min_value from temp_param_table where num_param = @count_screen_param))
						SET  @screen_set_sql = replace(@screen_set_sql, '<VAR3>', (SELECT max_value from temp_param_table where num_param = @count_screen_param))
					END				
				ELSE IF ((SELECT min_value from temp_param_table where num_param = @count_screen_param) is not NULL)
					BEGIN
						SET  @screen_set_sql = @screen_set_sql + ' AND ( <VAR1> >= <VAR2> )' 
						SET  @screen_set_sql = replace(@screen_set_sql, '<VAR1>', (SELECT column_name from temp_param_table where num_param = @count_screen_param))
						SET  @screen_set_sql = replace(@screen_set_sql, '<VAR2>', (SELECT min_value from temp_param_table where num_param = @count_screen_param))
					END
				ELSE 
					BEGIN
						SET  @screen_set_sql = @screen_set_sql + ' AND (<VAR1> <= <VAR3> )'
						SET  @screen_set_sql = replace(@screen_set_sql, '<VAR1>', (SELECT column_name from temp_param_table where num_param = @count_screen_param))
						SET  @screen_set_sql = replace(@screen_set_sql, '<VAR3>', (SELECT max_value from temp_param_table where num_param = @count_screen_param))
					END
				SET @count_screen_param = @count_screen_param -1
			END		
		--select @screen_set_sql
		EXEC(@screen_set_sql)

		DECLARE @table_name2 nvarchar(50)
		DECLARE @table_name3 nvarchar(50)
		set @table_name2= 'screened_' + @screened_table 
		set @table_name2= replace(@table_name2,'_statistics','')
		set @table_name3= @table_name2 + '_agg'

		DECLARE @screening_drop	nvarchar(max)
		DECLARE @screening_sql	nvarchar(max)
		
		SET  @screening_drop =	'DROP  TABLE IF EXISTS	' + @table_name2 
		SET  @screening_sql =	'SELECT * ' +
								' INTO  ' + @table_name2 + 
								' FROM  ' + @screened_table +
								' WHERE screened_attr = 1'

		EXEC(@screening_drop)
		EXEC(@screening_sql)	

		DECLARE @comulative_drop	nvarchar(max)
		DECLARE @comulative_sql		nvarchar(max)
		
		SET  @comulative_drop =	'DROP  TABLE IF EXISTS	' + @table_name3 
		SET  @comulative_sql =	'SELECT		[store_id]								
											,sum([avg_s_count])				as avg_s_count				
											,sum([percent_of_sales])		as percent_of_sales
											,sum([percent_of_proceeds])		as percent_of_proceeds' +
								' INTO  ' + @table_name3 + 
								' FROM  ' + @table_name2 +
								' GROUP BY store_id'

		EXEC(@comulative_drop)
		EXEC(@comulative_sql)			

	END
GO

/* 
PRICE_CONVERTING
Добавляем цену по s_date+store_id+product_id,  приведенную к общему объему/весу
Создается таблицa sales_prepared (на базе таблицы sales_statistics)
В sales_prepared попадают записи только по продуктам, прошедшим скриниг, 
только записи внутри временного диапазона для ПРОДУКТ + МАГАЗИН 
*/
DROP PROCEDURE IF EXISTS PRICE_CONVERTING 
GO
CREATE PROCEDURE PRICE_CONVERTING (@gramms int = 1000, @mls int = 1000)
	AS
	BEGIN		
		DROP TABLE IF EXISTS sales_prepared
		SELECT	ss.s_date
				,ss.store_id
				,ss.product_id  
				,ss.[s_amount]
				,ss.[s_count]
				,ss.[price1]										
		
				,p.gramms					
				,p.mls
			--	,p.peacemeal

				,CASE	
					WHEN ss.product_type = 'ТОВАРЫ'					THEN ss.price1
					WHEN p.gramms	is not null and p.gramms !=0	THEN (ss.price1/p.gramms)*@gramms
					WHEN p.mls		is not null and p.mls	 !=0	THEN (ss.price1/p.mls)*@mls
					WHEN p.peacemeal	is not null					THEN ss.price1
					WHEN ss.product_subtype in ('ЯЙЦА')				THEN ss.price1
					WHEN ss.product_id in (8971,3679)				THEN ss.price1
				END as price1_converted

			--	,ss.[price2]
			--	,ss.[price3]
			--	,ss.[auto_sign]
			--	,ss.[fact_price]
			--	,ss.[avg_product_store_price]
			--	,ss.[time_series_flag]
     
			--	,ss.[abs_dev]
			--	,ss.[rel_dev]
			--	,ss.[min_date]
			--	,ss.[max_date]
				,ss.[product_type]
				,ss.[product_subtype]				
				,p.product_category
				,p.product_name
				,p.percents
				,p.classnum
				,p.tara

				--,sp.screened_attr,
				,sp.[avg_abs_dev]
				,sp.[avg_rel_dev]
				--,sp.[min_date]
				--,sp.[max_date]
				,sp.[history_depth]
				,sp.[avg_s_count]
				,sp.[percent_of_sales]
				,sp.[percent_of_proceeds]
				,sp.[count_unique_fact_price]
				
				--,p.gramms
				--,p.mls
				--,p.peacemeal
		INTO sales_prepared
		FROM sales_statistics ss, screened_product_id as sp, products as p
		WHERE	ss.product_id = sp.product_id
			and	ss.store_id = sp.store_id
			and sp.screened_attr = 1
			and ss.time_series_flag = 1
			and ss.product_id = p.product_id


		DROP INDEX IF EXISTS IX_sales_prepared_PK				ON sales_prepared
		DROP INDEX IF EXISTS IX_sales_prepared_product_type		ON sales_prepared
		DROP INDEX IF EXISTS IX_sales_prepared_product_subtype  ON sales_prepared
		DROP INDEX IF EXISTS IX_sales_prepared_product_category ON sales_prepared
		DROP INDEX IF EXISTS IX_sales_prepared_store_id			ON sales_prepared
		DROP INDEX IF EXISTS IX_sales_prepared_percents			ON sales_prepared
		DROP INDEX IF EXISTS IX_sales_prepared_tara				ON sales_prepared
		DROP INDEX IF EXISTS IX_sales_prepared_gramms			ON sales_prepared
		DROP INDEX IF EXISTS IX_sales_prepared_mls				ON sales_prepared
		DROP INDEX IF EXISTS IX_sales_prepared_history_depth	ON sales_prepared

		CREATE UNIQUE CLUSTERED INDEX IX_sales_prepared_PK					ON sales_prepared ([s_date],[store_id],[product_id])
		CREATE NONCLUSTERED		INDEX IX_sales_prepared_product_type		ON sales_prepared ([product_type])
		CREATE NONCLUSTERED		INDEX IX_sales_prepared_product_subtype		ON sales_prepared ([product_subtype])  
		CREATE NONCLUSTERED		INDEX IX_sales_prepared_product_category	ON sales_prepared ([product_category]) 
		CREATE NONCLUSTERED		INDEX IX_sales_prepared_store_id			ON sales_prepared (store_id)   
		CREATE NONCLUSTERED		INDEX IX_sales_prepared_percents			ON sales_prepared (percents)
		CREATE NONCLUSTERED		INDEX IX_sales_prepared_tara				ON sales_prepared (tara)  
		CREATE NONCLUSTERED		INDEX IX_sales_prepared_gramms				ON sales_prepared (gramms) 
		CREATE NONCLUSTERED		INDEX IX_sales_prepared_mls					ON sales_prepared (mls)  
		CREATE NONCLUSTERED		INDEX IX_sales_prepared_history_depth		ON sales_prepared ([history_depth])  
		/* создать другие индекся, если будет увеличиваться количество групп ценового контекста */

	END
GO

/* если нужно получить финальные таблицы не по всем данным, а только по части, то нужно здесь поставить условие
Процедура SALES_PREPARED_RESTRICT - ограничивает состав таблицы sales_prepared, по условию product_subtype=@product_subtype
Параметр @product_subtype
если @product_subtype = None, то таблицы не изменяется,
иначе в таблице остаются только записи с условием WHERE product_subtype='МОЛОЧНЫЕ ПРОДУКТЫ'

позволяет оставить в таблицу только одно значение  product_subtype.
Сделана, чтобы тестировать на меньшем объеме или по группе.
Впоследствии, если в принципе нужно будет считать по группам, то сделаю цикл, в котором буду запускать последние три процедуры для каждой группы

*/
DROP PROCEDURE IF EXISTS SALES_PREPARED_RESTRICT
GO
CREATE PROCEDURE SALES_PREPARED_RESTRICT (@product_subtype varchar(32) = NULL)
	AS
	BEGIN	
		IF @product_subtype is not NULL
			BEGIN 
				DELETE FROM sales_prepared WHERE product_subtype != @product_subtype
			END
	END
GO


/* 
CREATE_GroupParameters
Создаем и заполняем таблицу GroupParameters
*/

/* CREATE_GroupParameters
1. Процедура генерирует таблицу AttributeToContect, в которую записывает поля из products

Таблица AttributeToContect также содержит также
-признаки,что атрибут участвует в условиях определения групп, 
	признак участия атрибута в условиях группировки (=1, если аттрибут участвует в группировке)
	признак категориальности\вещественности атрибута
	признак , в котором указан оператор для сравнения
Далее эти таблицы join'ятся по product_id

Также в AttributeToContect добавляются поля со статистиками

2. Процедура создает и заполняет таблицу GroupParameters с правилами отнесения продукта в группу (на базе sales_prepared)
и GroupParameters_unique (идет в следующую процедуру)

*/

DROP PROCEDURE IF EXISTS CREATE_GroupParameters
GO
CREATE PROCEDURE CREATE_GroupParameters 
	AS
	BEGIN

		DROP TABLE IF EXISTS AttributeToContect
		SELECT	TABLE_NAME AS tab_name,
				COLUMN_NAME AS column_name,
				DATA_TYPE AS data_type,
				CASE WHEN data_type  like '%CHAR%'  THEN 1 END as is_categorical, 
				CASE 
					WHEN column_name in ('gramms')					THEN ' >= ' 
					WHEN column_name in ('mls')						THEN ' >= '  
					WHEN column_name in ('percents')				THEN ' >= '

				END as operator1,
				CASE 
					WHEN column_name in ('product_type')	THEN ' = '
					WHEN column_name in ('product_subtype') THEN ' = ' 
					WHEN column_name in ('product_category')THEN ' = '
					WHEN column_name in ('gramms')			THEN ' < ' 
					WHEN column_name in ('mls')				THEN ' < '  
					WHEN column_name in ('tara')			THEN ' = ' 
					WHEN column_name in ('percents')		THEN ' < '
				--	WHEN column_name in ('classnum')		THEN ' = '
				END as operator2,
				CASE 					
					WHEN column_name in ('gramms')			THEN ' 1 ' 
					WHEN column_name in ('mls')				THEN ' 2 '  
					WHEN column_name in ('percents')		THEN ' 3 '
				--	WHEN column_name in ('classnum')		THEN ' 2 '
				END as rangs_num,
				CASE 
					WHEN column_name in ('product_type')	THEN 1
					WHEN column_name in ('product_subtype') THEN 2 
					WHEN column_name in ('product_category')THEN 3
					WHEN column_name in ('gramms')			THEN 4 
					WHEN column_name in ('mls')				THEN 4  
					WHEN column_name in ('tara')			THEN 4 
					WHEN column_name in ('percents')		THEN 4
				--	WHEN column_name in ('classnum')		THEN 4
				END as attr_priority,
				row_number() OVER (ORDER BY CASE 
					
					WHEN column_name in ('product_type')	THEN 1
					WHEN column_name in ('product_subtype') THEN 2 
					WHEN column_name in ('product_category')THEN 3
					WHEN column_name in ('gramms')			THEN 3 
					WHEN column_name in ('mls')				THEN 3  
					WHEN column_name in ('tara')			THEN 3 
					WHEN column_name in ('percents')		THEN 3
				--	WHEN column_name in ('classnum')		THEN 3
				END )	AS attr_num
		into AttributeToContect
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE table_name='products'
		and column_name in ('product_type','product_subtype'
							,'product_category'
							,'gramms','mls','tara','percents'
							--,'classnum'
							)		  


		INSERT INTO AttributeToContect values
	--	('sales_prepared', 'avg_abs_dev',				'float', NULL, ' >= ' , ' < ',' 2 ', 4, 9 ),
	--	('sales_prepared', 'avg_rel_dev',				'float', NULL, ' >= ' , ' < ',' 2 ', 4, 10 ),
		('sales_prepared', 'history_depth',				'float', NULL, ' >= ' , ' < ',' 2 ', 4, 8 )
		--,
	--	('sales_prepared', 'avg_s_count',				'float', NULL, ' >= ' , ' < ',' 2 ', 4, 11 ),
	--	('sales_prepared', 'percent_of_sales',			'float', NULL, ' >= ' , ' < ',' 2 ', 4, 12 ),
	--	('sales_prepared', 'percent_of_proceeds',		'float', NULL, ' >= ' , ' < ',' 2 ', 4, 13 ),
	--	('sales_prepared', 'count_unique_fact_price',	'float', NULL, ' >= ' , ' < ',' 2 ', 4, 14 )
		

		DECLARE @sql_create_GroupParameters nvarchar(max)
		SET @sql_create_GroupParameters = 
			'	DROP TABLE if exists GroupParameters
				CREATE TABLE GroupParameters (
					group_level				int				NOT NULL
					,product_group			varchar(20)		NOT NULL	
					,store_id				int					NULL	
			'
	
		DECLARE @attr_count int = (select max(attr_num) from AttributeToContect)
		DECLARE @i int  = (select min(attr_num) from AttributeToContect)
		WHILE @i <= @attr_count
			BEGIN
				IF  ((select is_categorical from AttributeToContect where attr_num = @i) is not NULL) 
					BEGIN
						SET @sql_create_GroupParameters = @sql_create_GroupParameters	+ ',	' + (select column_name from AttributeToContect where attr_num = @i) 
																						+ '	' + replace((select data_type from AttributeToContect where attr_num = @i),'varchar','varchar(32)')
																						+ ' NULL ' 
					END
				ELSE 
					BEGIN
						SET @sql_create_GroupParameters = @sql_create_GroupParameters	+ ',	' + (select column_name from AttributeToContect where attr_num = @i) + '_min' + 
																						+ '	' + (select data_type from AttributeToContect where attr_num = @i)
																						+ ' NULL ' 
						SET @sql_create_GroupParameters = @sql_create_GroupParameters	+ ',	' + (select column_name from AttributeToContect where attr_num = @i) + '_max' + 
																						+ '	' + (select data_type from AttributeToContect where attr_num = @i)
																						+ ' NULL ' 
					END
				SET @i = @i + 1
			END
		SET @sql_create_GroupParameters = @sql_create_GroupParameters	+ ' )'
		select (@sql_create_GroupParameters)
		EXEC(@sql_create_GroupParameters)


		DROP INDEX IF EXISTS IX_GroupParameters_PK					ON GroupParameters
		DROP INDEX IF EXISTS IX_GroupParameters_product_type		ON GroupParameters
		DROP INDEX IF EXISTS IX_GroupParameters_product_subtype		ON GroupParameters
		DROP INDEX IF EXISTS IX_GroupParameters_product_category	ON GroupParameters
		DROP INDEX IF EXISTS IX_GroupParameters_store_id			ON GroupParameters
		DROP INDEX IF EXISTS IX_GroupParameters_percents_min		ON GroupParameters
		DROP INDEX IF EXISTS IX_GroupParameters_percents_max		ON GroupParameters
		DROP INDEX IF EXISTS IX_GroupParameters_tara				ON GroupParameters
		DROP INDEX IF EXISTS IX_GroupParameters_gramms_min			ON GroupParameters
		DROP INDEX IF EXISTS IX_GroupParameters_gramms_max			ON GroupParameters
		DROP INDEX IF EXISTS IX_GroupParameters_mls_min				ON GroupParameters
		DROP INDEX IF EXISTS IX_GroupParameters_mls_max				ON GroupParameters
		DROP INDEX IF EXISTS IX_GroupParameters_history_depth_min	ON GroupParameters
		DROP INDEX IF EXISTS IX_GroupParameters_history_depth_max	ON GroupParameters

		CREATE UNIQUE CLUSTERED INDEX IX_GroupParameters_PK					ON GroupParameters (group_level,product_group,store_id,product_type,[product_subtype],[product_category])
		CREATE NONCLUSTERED		INDEX IX_GroupParameters_product_type		ON GroupParameters ([product_type])
		CREATE NONCLUSTERED		INDEX IX_GroupParameters_product_subtype	ON GroupParameters ([product_subtype])  
		CREATE NONCLUSTERED		INDEX IX_GroupParameters_product_category	ON GroupParameters ([product_category]) 
		CREATE NONCLUSTERED		INDEX IX_GroupParameters_store_id			ON GroupParameters (store_id)   
		CREATE NONCLUSTERED		INDEX IX_GroupParameters_percents_min		ON GroupParameters (percents_min)
		CREATE NONCLUSTERED		INDEX IX_GroupParameters_percents_max		ON GroupParameters (percents_max)
		CREATE NONCLUSTERED		INDEX IX_GroupParameters_tara				ON GroupParameters (tara)  
		CREATE NONCLUSTERED		INDEX IX_GroupParameters_gramms_min			ON GroupParameters (gramms_min) 
		CREATE NONCLUSTERED		INDEX IX_GroupParameters_gramms_max			ON GroupParameters (gramms_max) 
		CREATE NONCLUSTERED		INDEX IX_GroupParameters_mls_min			ON GroupParameters (mls_min)  
		CREATE NONCLUSTERED		INDEX IX_GroupParameters_mls_max			ON GroupParameters (mls_max)  
		CREATE NONCLUSTERED		INDEX IX_GroupParameters_history_depth_min	ON GroupParameters ([history_depth_min])  
		CREATE NONCLUSTERED		INDEX IX_GroupParameters_history_depth_max	ON GroupParameters ([history_depth_max])  



		--начнем заполнять таблицу правилами отнесения в группы
		DECLARE @level int =0	
		DECLARE @attribute varchar(32) 
		DECLARE @sql_insert nvarchar(max) 
		DECLARE @sql_select nvarchar(max) 
		DECLARE @rangs_count int
		DECLARE @j int = 1


		--attr_priority=1 product_name
		SET @attribute= (select column_name from AttributeToContect where attr_priority = 1)
		SET @sql_insert = '   	INSERT INTO GroupParameters (group_level,product_group, '+@attribute+') '
		SET @sql_select = ' 				(SELECT  DISTINCT	'+trim(cast(@level as char))+' , 
												concat('+cast(@level as char)+',''_'',row_number() OVER (ORDER BY '+@attribute+')), 
												'+@attribute+'  
							FROM sales_prepared 
							GROUP BY '+@attribute+')'							
		select(@sql_insert+@sql_select)
		EXEC(@sql_insert+@sql_select)
		SET	@level = @level +1

		--attr_priority=2 product_name+product_subtype
		SET @attribute= (select column_name from AttributeToContect where attr_priority = 2)
		SET @sql_insert = '   	INSERT INTO GroupParameters (group_level,product_group,product_type,'+@attribute+') '
		SET @sql_select = ' 				(SELECT  DISTINCT	'+trim(cast(@level as char))+' , 
												concat('+trim(cast(@level as char))+',''_'',row_number() OVER (ORDER BY '+@attribute+')), 
												product_type,
												'+@attribute+'  
							FROM sales_prepared 
							GROUP BY product_type, '+@attribute+')'
		select(@sql_insert+@sql_select)
		EXEC(@sql_insert+@sql_select)
		SET	@level = @level +1

		--attr_priority=3 product_name+product_subtype+product_category
		SET @attribute= (select column_name from AttributeToContect where attr_priority = 3)
		SET @sql_insert = '   	INSERT INTO GroupParameters (group_level,product_group,product_type,product_subtype,'+@attribute+') '
		SET @sql_select = ' 				(SELECT  DISTINCT	'+trim(cast(@level as char))+' , 
												concat('+trim(cast(@level as char))+',''_'',row_number() OVER (ORDER BY '+@attribute+')), 
												product_type,product_subtype,
												'+@attribute+'  
							FROM sales_prepared 
							GROUP BY product_type, product_subtype,'+@attribute+')'
		select(@sql_insert+@sql_select)
		EXEC(@sql_insert+@sql_select)
		SET	@level = @level +1


		--attr_priority=4 product_type + product_subtype + product_categoty + @attribute
		SET @i = (select min(attr_num) from AttributeToContect where attr_priority not in (1,2,3))
		WHILE @i <= @attr_count
			BEGIN
				SET  @attribute = (select column_name from AttributeToContect where attr_num = @i)
				IF  (((select is_categorical from AttributeToContect where attr_num = @i) is not NULL)
					and (@attribute  not in ('product_type','product_subtype','product_category' )))
					BEGIN
						select 'cat1'	
						SET @sql_insert = '   	INSERT INTO GroupParameters (group_level,product_group,product_type,product_subtype,product_category,'+@attribute+') '
						SET @sql_select = ' 	  
							SELECT  DISTINCT	'+cast(@level as char)+' , 
												concat('+cast(@level as char)+',''_'',
																			(select row_num from (select product_type, product_subtype, product_category, row_number() OVER (ORDER BY products.product_type, products.product_subtype, products.product_category) as row_num	from products 	where products.product_type != '''' and products.product_subtype != '''' and products.product_category != '''' group by  products.product_type, products.product_subtype, products.product_category) as t2 
																			where t2.product_type=sales_prepared.product_type and t2.product_subtype=sales_prepared.product_subtype and t2.product_category=sales_prepared.product_category)
																		,''_'',
																			(select row_num from (select products.'+@attribute+', row_number() OVER (ORDER BY products.'+@attribute+') as row_num	from products 	group by  products.'+@attribute+') as t2 
																			where t2.'+@attribute+'=sales_prepared.'+@attribute+')
																		), 
												product_type,
												product_subtype,
												product_category,
												'+@attribute+'  
							FROM sales_prepared 
							GROUP BY product_type,product_subtype,product_category, '+@attribute							
						SELECT(@sql_insert+@sql_select)
						EXEC(@sql_insert+@sql_select)
						SET @level = @level+1	
					END
				ELSE 
					BEGIN
						
						select 'notcat2_1'
						SET  @rangs_count = (select rangs_num from AttributeToContect where attr_num = @i)
						SET  @j=1
						select @rangs_count
						WHILE @j <= @rangs_count
							BEGIN	
								select 'notcat2_1_1'
								SET @sql_insert = '   	INSERT INTO GroupParameters (group_level,product_group,store_id, product_type,'+@attribute+'_min,'+@attribute+'_max) '
								SET @sql_select = ' 	 SELECT DISTINCT                
																'+cast(@level as char)+' , 
																concat('+cast(@level as char)+',''_'',
																			(select row_num from (select product_type, row_number() OVER (ORDER BY products.product_type) as row_num	from products 	where product_type != '''' group by  products.product_type) as t2 
																			where t2.product_type=sales_prepared.product_type)
																		,''_'','+cast(@j as char)+',''(s'', store_id ,'')'' ), 
																store_id ,
																product_type,             
																min('+@attribute+') + ((max('+@attribute+') - min('+@attribute+'))/'+cast(@rangs_count as char)+')*('+cast(@j-1 as char)+')  as '+@attribute+'_min,          
																min('+@attribute+') + ((max('+@attribute+') - min('+@attribute+'))/'+cast(@rangs_count as char)+')*('+cast(@j as char)+')	as '+@attribute+'_max

															  FROM sales_prepared                 
															  WHERE  '+@attribute+' is not null             
															  GROUP BY product_type, store_id
															  order by product_type, store_id'
														
								SELECT(@sql_insert+@sql_select)
								EXEC(@sql_insert+@sql_select)
								SET @j = @j + 1			
	 						END
						SET @level = @level+1
						SET @j = 1
						WHILE @j <= @rangs_count
							BEGIN
							 	select 'notcat2_1_2'
								SET @sql_insert = '   	INSERT INTO GroupParameters (group_level,product_group,store_id,product_type,product_subtype,'+@attribute+'_min,'+@attribute+'_max) '
								SET @sql_select = ' 
															SELECT DISTINCT
																'+cast(@level as char)+' , 
																concat('+cast(@level as char)+',''_'',
																			(select row_num from (select product_type, product_subtype, row_number() OVER (ORDER BY products.product_type,products.product_subtype) as row_num	from products 	where product_type != '''' and product_subtype != '''' group by  products.product_type,products.product_subtype) as t2 
																			where t2.product_type=sales_prepared.product_type and  t2.product_subtype=sales_prepared.product_subtype)
																		,''_'','+cast(@j as char)+',''(s'',  store_id  ,'')'' ), 																		
																store_id,
																product_type,
																product_subtype,            
																min('+@attribute+') + ((max('+@attribute+') - min('+@attribute+'))/'+cast(@rangs_count as char)+')*('+cast(@j-1 as char)+')  as '+@attribute+'_min,          
																min('+@attribute+') + ((max('+@attribute+') - min('+@attribute+'))/'+cast(@rangs_count as char)+')*('+cast(@j as char)+')	as '+@attribute+'_max
															FROM sales_prepared 
															WHERE  '+@attribute+' is not null
															GROUP BY product_type, product_subtype, store_id
															order by product_type, product_subtype, store_id'
								SELECT(@sql_insert+@sql_select)								
								EXEC(@sql_insert+@sql_select)
								SET @j = @j + 1								
							END
						SET @level = @level+1
						SET @j = 1
						WHILE @j <= @rangs_count
							BEGIN
							 	select 'notcat2_1_3'
								SET @sql_insert = '   	INSERT INTO GroupParameters (group_level,product_group,store_id,product_type,product_subtype,product_category,'+@attribute+'_min,'+@attribute+'_max) '
								SET @sql_select = ' 
															SELECT DISTINCT
																'+cast(@level as char)+' , 
																concat('+cast(@level as char)+',''_'',
																			(select row_num from (select product_type, product_subtype, product_category,  row_number() OVER (ORDER BY products.product_type,products.product_subtype, product_category) as row_num	from products 	where product_type != '''' and product_subtype != '''' and products.product_category != '''' group by  products.product_type,products.product_subtype,products.product_category) as t2 
																			where t2.product_type=sales_prepared.product_type and  t2.product_subtype=sales_prepared.product_subtype and  t2.product_category=sales_prepared.product_category)
																		,''_'','+cast(@j as char)+',''(s'',  store_id  ,'')'' ), 																		
																store_id,
																product_type,
																product_subtype,  
																product_category,
																min('+@attribute+') + ((max('+@attribute+') - min('+@attribute+'))/'+cast(@rangs_count as char)+')*('+cast(@j-1 as char)+')  as '+@attribute+'_min,          
																min('+@attribute+') + ((max('+@attribute+') - min('+@attribute+'))/'+cast(@rangs_count as char)+')*('+cast(@j as char)+')	as '+@attribute+'_max
															FROM sales_prepared 
															WHERE  '+@attribute+' is not null
															GROUP BY product_type, product_subtype, product_category,store_id
															order by product_type, product_subtype, product_category,store_id'
								SELECT(@sql_insert+@sql_select)								
								EXEC(@sql_insert+@sql_select)
								SET @j = @j + 1								
							END
						SET @level = @level+1
					END

				SET @i = @i + 1
			END

			DROP TABLE IF EXISTS GroupParameters_unique
			SELECT distinct [group_level]
								  ,min([product_group]) as product_group
								  ,[store_id]
								  ,[product_type]
								  ,[product_subtype]
								  ,[product_category]
								  ,[percents_min]
								  ,[percents_max]
								  ,[tara]
								  ,[gramms_min]
								  ,[gramms_max]
								  ,[mls_min]
								  ,[mls_max]
								  ,[history_depth_min]
								  ,[history_depth_max]
			INTO GroupParameters_unique
				  FROM [PRICE_FORMATION].[dbo].[GroupParameters]
				  group by [group_level],[store_id],[product_type],[product_subtype],[product_category]
						  ,[percents_min]
						  ,[percents_max]
						  ,[tara]
						  ,[gramms_min]
						  ,[gramms_max]
						  ,[mls_min]
						  ,[mls_max]
						  ,[history_depth_min]
						  ,[history_depth_max]
	END
GO


/* 
PRICE_CONTEXT
Создаем и заполняем таблицу sales_price_context с ценовым контекстом
*/
DROP PROCEDURE IF EXISTS  PRICE_CONTEXT
GO
CREATE PROCEDURE PRICE_CONTEXT 
	AS
	BEGIN	

		DECLARE @levels_count int
		SET @levels_count= (select max(group_level) from GroupParameters_unique)

		DECLARE @sql_for_apply_group nvarchar(max)
		SET @sql_for_apply_group = 'DROP TABLE 	if EXISTS sales_prepared2
									SELECT DISTINCT'
		
		DECLARE @i int
		SET @i = (select min(group_level) from GroupParameters_unique)
		WHILE @i <= @levels_count
			BEGIN
				SET @sql_for_apply_group = @sql_for_apply_group + ' CASE WHEN gp' + trim(cast(@i as char)) + '.group_level=' + trim(cast(@i as char))  + ' THEN gp' +  trim(cast(@i as char)) + '.product_group END as group_level' + trim(cast(@i as char)) + ', '
				SET @i = @i+1
			END

		SET @sql_for_apply_group = @sql_for_apply_group + '
																	ss.*
																	INTO sales_prepared2
																	FROM		sales_prepared ss '
		SET @i = (select min(group_level) from GroupParameters_unique)

		WHILE @i <= @levels_count
			BEGIN /* тут заготовка на расширение количества параметров */ /*

				SET @sql_for_apply_group = @sql_for_apply_group + '	left JOIN	GroupParameters_unique	gp' + trim(cast(@i as char)) + '
																	ON	gp' + trim(cast(@i as char)) + '.group_level=' + trim(cast(@i as char)) + ' 
																	and (ss.store_id = gp' + trim(cast(@i as char)) + '.store_id or gp' + trim(cast(@i as char)) + '.store_id is  null)
																	and (ss.product_type = gp' + trim(cast(@i as char)) + '.product_type or gp' + trim(cast(@i as char)) + '.product_type is  null)
																	and (ss.product_subtype = gp' + trim(cast(@i as char)) + '.product_subtype or gp' + trim(cast(@i as char)) + '.product_subtype is  null)
																	and (ss.product_category = gp' + trim(cast(@i as char)) + '.product_category or gp' + trim(cast(@i as char)) + '.product_category is  null)
																	and (ss.tara = gp' + trim(cast(@i as char)) + '.tara or gp' + trim(cast(@i as char)) + '.tara is  null)
																	and (ss.gramms	>= gp'	+ trim(cast(@i as char)) + '.gramms_min or gp' + trim(cast(@i as char)) + '.gramms_min is  null)
																	and (ss.gramms	< gp'	+ trim(cast(@i as char)) + '.gramms_max or gp' + trim(cast(@i as char)) + '.gramms_max is  null)
																	and (ss.mls		>= gp'	+ trim(cast(@i as char)) + '.mls_min or gp' + trim(cast(@i as char)) + '.mls_min is  null)
																	and (ss.mls		< gp'	+ trim(cast(@i as char)) + '.mls_max or gp' + trim(cast(@i as char)) + '.mls_max is  null)
																	and (ss.percents	>= gp'	+ trim(cast(@i as char)) + '.percents_min or gp' + trim(cast(@i as char)) + '.percents_min is  null)
																	and (ss.percents	< gp'	+ trim(cast(@i as char)) + '.percents_max or gp' + trim(cast(@i as char)) + '.percents_max is  null)
																	and (ss.avg_abs_dev	>= gp'	+ trim(cast(@i as char)) + '.avg_abs_dev_min or gp' + trim(cast(@i as char)) + '.avg_abs_dev_min is  null)
																	and (ss.avg_abs_dev	< gp'	+ trim(cast(@i as char)) + '.avg_abs_dev_max or gp' + trim(cast(@i as char)) + '.avg_abs_dev_max is  null)
																	and (ss.avg_rel_dev	>= gp'	+ trim(cast(@i as char)) + '.avg_rel_dev_min or gp' + trim(cast(@i as char)) + '.avg_rel_dev_min is  null)
																	and (ss.avg_rel_dev	< gp'	+ trim(cast(@i as char)) + '.avg_rel_dev_max or gp' + trim(cast(@i as char)) + '.avg_rel_dev_max is  null)
																	and (ss.history_depth	>= gp'	+ trim(cast(@i as char)) + '.history_depth_min or gp' + trim(cast(@i as char)) + '.history_depth_min is  null)
																	and (ss.history_depth	< gp'	+ trim(cast(@i as char)) + '.history_depth_max or gp' + trim(cast(@i as char)) + '.history_depth_max is  null)
																	and (ss.avg_s_count	>= gp'	+ trim(cast(@i as char)) + '.avg_s_count_min or gp' + trim(cast(@i as char)) + '.avg_s_count_min is  null)
																	and (ss.avg_s_count	< gp'	+ trim(cast(@i as char)) + '.avg_s_count_max or gp' + trim(cast(@i as char)) + '.avg_s_count_max is  null)
																	and (ss.percent_of_sales	>= gp'	+ trim(cast(@i as char)) + '.percent_of_sales_min or gp' + trim(cast(@i as char)) + '.percent_of_sales_min is  null)
																	and (ss.percent_of_sales	< gp'	+ trim(cast(@i as char)) + '.percent_of_sales_max or gp' + trim(cast(@i as char)) + '.percent_of_sales_max is  null)
																	and (ss.percent_of_proceeds	>= gp'	+ trim(cast(@i as char)) + '.percent_of_proceeds_min or gp' + trim(cast(@i as char)) + '.percent_of_proceeds_min is  null)
																	and (ss.percent_of_proceeds	< gp'	+ trim(cast(@i as char)) + '.percent_of_proceeds_max or gp' + trim(cast(@i as char)) + '.percent_of_proceeds_max is  null)
																	and (ss.count_unique_fact_price	>= gp'	+ trim(cast(@i as char)) + '.count_unique_fact_price_min or gp' + trim(cast(@i as char)) + '.count_unique_fact_price_min is  null)
																	and (ss.count_unique_fact_price	< gp'	+ trim(cast(@i as char)) + '.count_unique_fact_price_max or gp' + trim(cast(@i as char)) + '.count_unique_fact_price_max is  null)
																	'
				*/

				SET @sql_for_apply_group = @sql_for_apply_group + '	left JOIN	GroupParameters_unique	gp' + trim(cast(@i as char)) + '
																	ON	gp' + trim(cast(@i as char)) + '.group_level=' + trim(cast(@i as char)) + ' 
																	and (ss.store_id = gp' + trim(cast(@i as char)) + '.store_id or gp' + trim(cast(@i as char)) + '.store_id is  null)
																	and (ss.product_type = gp' + trim(cast(@i as char)) + '.product_type or gp' + trim(cast(@i as char)) + '.product_type is  null)
																	and (ss.product_subtype = gp' + trim(cast(@i as char)) + '.product_subtype or gp' + trim(cast(@i as char)) + '.product_subtype is  null)
																	and (ss.product_category = gp' + trim(cast(@i as char)) + '.product_category or gp' + trim(cast(@i as char)) + '.product_category is  null)
																	and (ss.tara = gp' + trim(cast(@i as char)) + '.tara or gp' + trim(cast(@i as char)) + '.tara is  null)
																	and (ss.gramms	>= gp'	+ trim(cast(@i as char)) + '.gramms_min or gp' + trim(cast(@i as char)) + '.gramms_min is  null)
																	and (ss.gramms	< gp'	+ trim(cast(@i as char)) + '.gramms_max or gp' + trim(cast(@i as char)) + '.gramms_max is  null or gp' + trim(cast(@i as char)) + '.gramms_max =  gp' + trim(cast(@i as char)) + '.gramms_min)
																	and (ss.mls		>= gp'	+ trim(cast(@i as char)) + '.mls_min or gp' + trim(cast(@i as char)) + '.mls_min is  null)
																	and (ss.mls		< gp'	+ trim(cast(@i as char)) + '.mls_max or gp' + trim(cast(@i as char)) + '.mls_max is  null or gp' + trim(cast(@i as char)) + '.mls_max =  gp' + trim(cast(@i as char)) + '.mls_min)
																	and (ss.percents	>= gp'	+ trim(cast(@i as char)) + '.percents_min or gp' + trim(cast(@i as char)) + '.percents_min is  null)
																	and (ss.percents	< gp'	+ trim(cast(@i as char)) + '.percents_max or gp' + trim(cast(@i as char)) + '.percents_max is  null or gp' + trim(cast(@i as char)) + '.percents_max =  gp' + trim(cast(@i as char)) + '.percents_min)
																	and (ss.history_depth	>= gp'	+ trim(cast(@i as char)) + '.history_depth_min or gp' + trim(cast(@i as char)) + '.history_depth_min is  null)
																	and (ss.history_depth	< gp'	+ trim(cast(@i as char)) + '.history_depth_max or gp' + trim(cast(@i as char)) + '.history_depth_max is  null or gp' + trim(cast(@i as char)) + '.history_depth_max =  gp' + trim(cast(@i as char)) + '.history_depth_min)
																	'

				SET @i = @i+1
			END
		select(@sql_for_apply_group)	
		EXEC(@sql_for_apply_group)


		DECLARE @sql_for_price_calc nvarchar(max)
		SET @sql_for_price_calc = 'DROP TABLE if EXISTS sales_price_context
									SELECT  '		
		SET @i = (select min(group_level) from GroupParameters_unique)
		WHILE @i <= @levels_count
			BEGIN
				SET @sql_for_price_calc = @sql_for_price_calc + 'group_level' + trim(cast(@i as char)) + ','
				DECLARE @func_num int
				SET @func_num = 3
				DECLARE @j int
				SET @j = 0
				WHILE @j < @func_num
					BEGIN
						declare @func varchar(3)
						if @j=0 begin set @func='min' end
						if @j=1 begin set @func='avg' end
						if @j=2 begin set @func='max' end

						SET @sql_for_price_calc = @sql_for_price_calc + 
																		--'(	select ' + @func + '(price1_converted) 
																		--	from sales_prepared2 s' + trim(cast(@i as char)) + ' 
																		--	where	s' + trim(cast(@i as char)) + '.group_level' + trim(cast(@i as char)) + '=ss.group_level' + trim(cast(@i as char)) + '
																		--		and s' + trim(cast(@i as char)) + '.store_id=ss.store_id
																		--		and s' + trim(cast(@i as char)) + '.s_date=ss.s_date ) 
																		-- as ' + @func + '_cprice_l' + trim(cast(@i as char)) + ',
																	
																		 'price1_converted-
																		 (	select ' + @func + '(price1_converted) 
																			from sales_prepared2 s' + trim(cast(@i as char)) + ' 
																			where	s' + trim(cast(@i as char)) + '.group_level' + trim(cast(@i as char)) + '=ss.group_level' + trim(cast(@i as char)) + '
																				and s' + trim(cast(@i as char)) + '.store_id=ss.store_id
																				and s' + trim(cast(@i as char)) + '.s_date=ss.s_date ) 
																		 as abs_dev_' + @func + '_cprice_l' + trim(cast(@i as char)) + ',
																		 
																		 (price1_converted-
																		 (	select ' + @func + '(price1_converted) 
																			from sales_prepared2 s' + trim(cast(@i as char)) + ' 
																			where	s' + trim(cast(@i as char)) + '.group_level' + trim(cast(@i as char)) + '=ss.group_level' + trim(cast(@i as char)) + '
																				and s' + trim(cast(@i as char)) + '.store_id=ss.store_id
																				and s' + trim(cast(@i as char)) + '.s_date=ss.s_date )) /  price1_converted
													
																		 as rel_dev_' + @func + '_cprice_l' + trim(cast(@i as char)) + '  ,
																		'
						SET @j = @j+1
					END
				SET @i = @i+1
			END
		SET @sql_for_price_calc = @sql_for_price_calc + '	product_id,store_id,s_date,product_type,product_subtype,product_category,price1_converted as price, s_count
															INTO sales_price_context
															FROM sales_prepared2 ss'

		SELECT @sql_for_price_calc
		EXEC(@sql_for_price_calc)

	END
GO


/* Процедуры  CREATE_PLAN_FOR_PRODUCT_SUBTYPE и CREATE_PLAN_FOR_PRODUCT создают 
 таблицы ограничений, которые можно использовать для последующей оптимизации nlopt */
DROP PROCEDURE IF EXISTS  CREATE_PLAN_FOR_PRODUCT_SUBTYPE
GO
CREATE PROCEDURE CREATE_PLAN_FOR_PRODUCT_SUBTYPE (@min_plan_koef float = 0.1, @max_plan_koef float = 0.1)
	AS
	BEGIN
		DROP TABLE IF EXISTS target_product_subtype_plan
		SELECT DISTINCT product_type, product_subtype, 
				sum(s_amount)*(1 - @min_plan_koef) as min_plan,
				sum(s_amount)*(1 + @max_plan_koef)  as max_plan
		INTO target_product_subtype_plan
		FROM	sales_prepared 
		WHERE	product_subtype is not null and  product_subtype != ''
		GROUP BY product_type, product_subtype
		ORDER BY product_type, product_subtype

	END
GO 

DROP PROCEDURE IF EXISTS  CREATE_PLAN_FOR_PRODUCT
GO
CREATE PROCEDURE CREATE_PLAN_FOR_PRODUCT (@min_plan_koef float = 0.2, @max_plan_koef float = 0.2)
	AS
	BEGIN
		DROP TABLE IF EXISTS target_product_store_plan
		SELECT DISTINCT product_id, store_id, 
				avg(s_amount)*(1 - @min_plan_koef) as min_plan,
				avg(s_amount)*(1 + @max_plan_koef)  as max_plan
		INTO target_product_store_plan
		FROM	sales_prepared 
		-- WHERE	product_subtype is not null and  product_subtype != ''
		GROUP BY product_id, store_id
		ORDER BY product_id, store_id

	END
GO 



USE MASTER
GO